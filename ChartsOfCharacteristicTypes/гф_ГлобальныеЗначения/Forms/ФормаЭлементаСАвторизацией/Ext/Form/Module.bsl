
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Объект.Ссылка.Пустая() Тогда
		Отказ = истина;
		Возврат;
	КонецЕсли;
	
	Если Объект.ТипЗначения.Типы().Количество() = 1 Тогда
		
		Элементы.Значение.ОграничениеТипа	= Объект.ТипЗначения;
		Объект.Значение = Элементы.Значение.ОграничениеТипа.ПривестиЗначение(Объект.Значение);
		
	КонецЕсли;
	
	РежимСписка = ВРег(Прав(Объект.ИмяПредопределенныхДанных, 7)) = "_СПИСОК";
	
	Элементы.Список.Видимость	= РежимСписка;
	Элементы.Значение.Видимость	= Не РежимСписка;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокЗначениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Элемент.ОграничениеТипа = Объект.ТипЗначения;
	
КонецПроцедуры


&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	Струк = вПолучитьДанныеДляАвторизации(ТекущийОбъект.ДанныеХЗ);
	
	_Логин = Струк.Логин;
	_Пароль = Струк.Пароль;
	
КонецПроцедуры

//&НаСервере
//Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
//	
//	ТекущийОбъект.ДанныеХЗ = вСформироватьДанныеДляАвторизации(_Логин, _Пароль);
//	
//	// Переподключаем внешний источник данных (ODBC)
//	
//	Если Объект.Ключ = "СтрокаСоединенияИнтермех" Тогда
//		// Oracle
//		СтрокаСоединенияOLEDB = Объект.Значение;
//		поз = СтрНайти(СтрокаСоединенияOLEDB, "Data Source=");
//		Если поз > 0 Тогда
//			поз = поз + 12;
//			лСтр = Сред(СтрокаСоединенияOLEDB, поз);
//			поз1 = СтрНайти(лСтр, ";");
//			Если поз1 > 0 Тогда
//				ИмяБазы = Сред(лСтр, 1, поз1 - 1);		
//				Если НЕ ПустаяСтрока(ИмяБазы) Тогда
//					мнж = ВнешниеИсточникиДанных.INTERMECH;
//					
//					пар = Новый ПараметрыСоединенияВнешнегоИсточникаДанных;
//					пар.СУБД = "OracleDatabase";
//					пар.СтрокаСоединения = "DRIVER={Oracle in OraClient11g_home1};DBQ=" + ИмяБазы + ";";
//					пар.АутентификацияСтандартная = Истина;
//					пар.ИмяПользователя = _Логин;
//					пар.Пароль = _Пароль;
//					
//					мнж.УстановитьОбщиеПараметрыСоединения(пар);
//					Попытка
//						мнж.РазорватьСоединение();
//					Исключение КонецПопытки;
//					Попытка
//						мнж.УстановитьСоединение();
//					Исключение КонецПопытки;
//				КонецЕсли;
//			КонецЕсли;	
//		КонецЕсли;
//	КонецЕсли;
//	
//	Если Объект.Ключ = "СтрокаСоединенияПримавера" ИЛИ Объект.Ключ = "СтрокаСоединенияСЭСА" Тогда
//		// MS SqlServer
//		СтрокаСоединенияOLEDB = Объект.Значение;
//		
//		Сервер = "";
//		поз = СтрНайти(СтрокаСоединенияOLEDB, "Data Source=");
//		Если поз > 0 Тогда
//			поз = поз + 12;
//			лСтр = Сред(СтрокаСоединенияOLEDB, поз);
//			поз1 = СтрНайти(лСтр, ";");
//			Если поз1 > 0 Тогда
//				Сервер = Сред(лСтр, 1, поз1 - 1);
//			КонецЕсли;
//		КонецЕсли;
//		
//		ИмяБазы = "";
//		поз = СтрНайти(СтрокаСоединенияOLEDB, "Initial Catalog=");
//		Если поз > 0 Тогда
//			поз = поз + 16;
//			лСтр = Сред(СтрокаСоединенияOLEDB, поз);
//			поз1 = СтрНайти(лСтр, ";");
//			Если поз1 > 0 Тогда
//				ИмяБазы = Сред(лСтр, 1, поз1 - 1);		
//			КонецЕсли;
//		КонецЕсли;
//				
//		Если НЕ ПустаяСтрока(Сервер) И НЕ ПустаяСтрока(ИмяБазы) Тогда
//			
//			Если Объект.Ключ = "СтрокаСоединенияПримавера" Тогда
//				мнж = ВнешниеИсточникиДанных.PRIMAVERA;
//			ИначеЕсли Объект.Ключ = "СтрокаСоединенияСЭСА" Тогда
//				мнж = ВнешниеИсточникиДанных.CECA;				
//			КонецЕсли;
//			
//			пар = Новый ПараметрыСоединенияВнешнегоИсточникаДанных;
//					
//			пар.СУБД = "MSSQLServer";
//			пар.СтрокаСоединения = "DRIVER={SQL Server Native Client 11.0};SERVER=" + Сервер + 
//				";DATABASE=" + ИмяБазы + ";LANGUAGE=русский;";
//			пар.АутентификацияСтандартная = Истина;
//			пар.ИмяПользователя = _Логин;
//			пар.Пароль = _Пароль;
//					
//			мнж.УстановитьОбщиеПараметрыСоединения(пар);
//			Попытка
//				мнж.РазорватьСоединение();
//			Исключение КонецПопытки;
//			Попытка
//				мнж.УстановитьСоединение();
//			Исключение КонецПопытки;
//				
//		КонецЕсли;
//		
//	КонецЕсли;
//	
//КонецПроцедуры

&НаСервере
Функция вСформироватьДанныеДляАвторизации(Знач Логин, Знач Пароль)
	
	Данные = новый Структура;
	Данные.Вставить("Логин", Логин);
	Данные.Вставить("Пароль", Пароль);
	
	ДанныеХЗ = новый ХранилищеЗначения(Данные, новый СжатиеДанных(6));
	Возврат ДанныеХЗ;
	
КонецФункции

&НаСервере
Функция вПолучитьДанныеДляАвторизации(ДанныеХЗ)
	
	Струк = новый Структура("Логин, Пароль", "", "");
	Данные = ДанныеХЗ.Получить();
	Если ТипЗнч(Данные) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(Струк, Данные);
	КонецЕсли;
	
	Возврат Струк;
	
КонецФункции
