#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

&После("ОбработкаЗаполнения")
Процедура гф_ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	// #wortmann {
	// #1.1 Регистрация возвратов
	// Галфинд Sakovich 2022/11/14
	Если ЭтоНовый()Тогда
		гф_СтатусСверкиВозврата = Перечисления.гф_СтатусыСверкиВозвратов.НеПроверен;
	КонецЕсли;
	// } #wortmann
КонецПроцедуры

&ИзменениеИКонтроль("ОбработкаПроверкиЗаполнения")
Процедура гф_ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	МассивНепроверяемыхРеквизитов = Новый Массив;

	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтКомиссионера
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтХранителя Тогда
		МассивНепроверяемыхРеквизитов.Добавить("НалогообложениеНДС");
		МассивНепроверяемыхРеквизитов.Добавить("ВозвращаемыеТовары.СтавкаНДС");
	КонецЕсли;

	Если (ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ВозвратОтХранителя
		И ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ПередачаНаКомиссию)
		И (Не ЗначениеЗаполнено(Соглашение)
		Или Не ОбщегоНазначенияУТ.ЗначениеРеквизитаОбъектаТипаБулево(Соглашение, "ИспользуютсяДоговорыКонтрагентов")) Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Договор");
	КонецЕсли;

	МассивНепроверяемыхРеквизитов.Добавить("ДатаОтгрузки");

	ПараметрыПроверки = НоменклатураСервер.ПараметрыПроверкиЗаполненияКоличества();
	ПараметрыПроверки.ИмяТЧ = "ВозвращаемыеТовары";
	НоменклатураСервер.ПроверитьЗаполнениеКоличества(ЭтотОбъект, ПроверяемыеРеквизиты, Отказ, ПараметрыПроверки);

	Если СпособКомпенсации = Перечисления.СпособыКомпенсацииВозвратовТоваров.ЗаменитьТовары Тогда
		ПараметрыПроверки.ИмяТЧ = "ЗаменяющиеТовары";
		НоменклатураСервер.ПроверитьЗаполнениеКоличества(ЭтотОбъект, ПроверяемыеРеквизиты, Отказ, ПараметрыПроверки);
		НоменклатураСервер.ПроверитьЗаполнениеСодержания(ЭтотОбъект, Отказ, "ЗаменяющиеТовары");
	КонецЕсли;

	Если СпособКомпенсации <> Перечисления.СпособыКомпенсацииВозвратовТоваров.ЗаменитьТовары
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтКомиссионера
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтХранителя Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ЗаменяющиеТовары");
	КонецЕсли;

	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтХранителя
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтКомиссионера Тогда
		МассивНепроверяемыхРеквизитов.Добавить("СпособКомпенсации");
		МассивНепроверяемыхРеквизитов.Добавить("СтавкаНДС");
	КонецЕсли;

	// Склад должен быть заполнен в статусах больше, чем Согласован
	ВсеЗаменяющиеСтрокиОтменены = ОбщегоНазначенияУТ.ВсеСтрокиОтменены(ЭтотОбъект, "ЗаменяющиеТовары", "Отменено");
	ВсеВозвращаемыеСтрокиОтменены = ОбщегоНазначенияУТ.ВсеСтрокиОтменены(ЭтотОбъект, "ВозвращаемыеТовары", "Отменено");
	Если НЕ ЗначениеЗаполнено(Склад) 
		И Статус <> Перечисления.СтатусыЗаявокНаВозвратТоваровОтКлиентов.НеСогласована
		И (ВозвращаемыеТовары.Количество() > 0 И НЕ ВсеВозвращаемыеСтрокиОтменены)
		И (ЗаменяющиеТовары.Количество() = 0 ИЛИ ВсеЗаменяющиеСтрокиОтменены) Тогда

		ТекстОшибки = НСтр("ru = 'Поле ""Склад"" не заполнено.';
		|en = '""Warehouse"" is required.'");

		ОбщегоНазначения.СообщитьПользователю(
		ТекстОшибки,
		ЭтотОбъект,
		"Склад",
		,
		Отказ);

	КонецЕсли;

	// Срок действия заказа должен быть не меньше даты документа
	Если Статус = Перечисления.СтатусыЗаявокНаВозвратТоваровОтКлиентов.НеСогласована И
		ЗначениеЗаполнено(ДатаСогласования) И ДатаСогласования < НачалоДня(Дата) Тогда

		ТекстОшибки = НСтр("ru = 'Дата согласования должна быть не меньше даты документа %Дата%';
		|en = 'Approval date shall not be less than document date %Дата%'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Дата%", Формат(Дата, "ДЛФ=DD"));

		ОбщегоНазначения.СообщитьПользователю(
		ТекстОшибки,
		ЭтотОбъект,
		"ДатаСогласования",
		,
		Отказ);

	КонецЕсли;

	// Желамемая дата поступления в шапке должна быть не меньше даты документа
	Если ЗначениеЗаполнено(ЖелаемаяДатаПоступления) И ЖелаемаяДатаПоступления < НачалоДня(Дата) Тогда

		Если ОбщегоНазначенияУТКлиентСервер.АвторизованВнешнийПользователь() Тогда
			ТекстОшибки = НСтр("ru = 'Желаемая дата возврата должна быть не меньше даты документа %Дата%';
			|en = 'Required return date should not be less than document date %Дата%'");
		Иначе
			ТекстОшибки = НСтр("ru = 'Дата поступления должна быть не меньше даты документа %Дата%';
			|en = 'Date of receipt cannot be less than document date %Дата%'");
		КонецЕсли;
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Дата%", Формат(Дата,"ДЛФ=DD"));

		ОбщегоНазначения.СообщитьПользователю(
		ТекстОшибки,
		ЭтотОбъект,
		"ЖелаемаяДатаПоступления",
		,
		Отказ);

	КонецЕсли;

	МассивНепроверяемыхРеквизитов.Добавить("ВозвращаемыеТовары.НоменклатураОприходование");
	МассивНепроверяемыхРеквизитов.Добавить("ВозвращаемыеТовары.ДатаПоступления");

	ВсеВозвращаемыеТоварыОтменены = Истина;

	Для ТекИндекс = 0 По ВозвращаемыеТовары.Количество()-1 Цикл

		ТекущаяСтрокаВозвращаемыеТовары = ВозвращаемыеТовары[ТекИндекс]; // СтрокаТабличнойЧасти

		Если Не ТекущаяСтрокаВозвращаемыеТовары.Отменено Тогда
			ВсеВозвращаемыеТоварыОтменены = Ложь;
		КонецЕсли;

		АдресОшибки = " " + НСтр("ru = 'в строке %НомерСтроки% списка ""Возвращаемые товары""';
		|en = 'in line %НомерСтроки% of the ""Returned goods"" list'");
		АдресОшибки =  СтрЗаменить(АдресОшибки, "%НомерСтроки%", ТекущаяСтрокаВозвращаемыеТовары.НомерСтроки);

		// Дата поступления в тч ВозвращаемыеТовары обязательна к заполнению только для заявок в 
		// статусах КВозврату, КОбеспечению, КОтгрузке, Выполнена.
		Если Не ПоступлениеОднойДатой
			И (Статус = Перечисления.СтатусыЗаявокНаВозвратТоваровОтКлиентов.КВозврату Или
			Статус = Перечисления.СтатусыЗаявокНаВозвратТоваровОтКлиентов.КОбеспечению Или
			Статус = Перечисления.СтатусыЗаявокНаВозвратТоваровОтКлиентов.КОтгрузке Или
			Статус = Перечисления.СтатусыЗаявокНаВозвратТоваровОтКлиентов.Выполнена) И
			Не ТекущаяСтрокаВозвращаемыеТовары.Отменено И
			Не ЗначениеЗаполнено(ТекущаяСтрокаВозвращаемыеТовары.ДатаПоступления) Тогда

			ТекстОшибки = НСтр("ru = 'Не заполнена колонка ""Дата поступления""';
			|en = 'The ""Date of receipt"" column is not filled in'");
			ОбщегоНазначения.СообщитьПользователю(
			ТекстОшибки + АдресОшибки,
			ЭтотОбъект,
			ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ВозвращаемыеТовары", ТекущаяСтрокаВозвращаемыеТовары.НомерСтроки, "ДатаПоступления"),
			,
			Отказ);

		КонецЕсли;

		// Дата поступления в тч Возвращаемые ВозвращаемыеТовары должна быть не меньше даты документа.
		Если Не ПоступлениеОднойДатой
			И ЗначениеЗаполнено(ТекущаяСтрокаВозвращаемыеТовары.ДатаПоступления) И ТекущаяСтрокаВозвращаемыеТовары.ДатаПоступления < НачалоДня(Дата) Тогда

			ТекстОшибки = НСтр("ru = 'Дата поступления должна быть не меньше даты документа %Дата%';
			|en = 'Date of receipt cannot be less than document date %Дата%'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Дата%", Формат(Дата,"ДЛФ=DD"));

			ОбщегоНазначения.СообщитьПользователю(
			ТекстОшибки + АдресОшибки,
			ЭтотОбъект,
			ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ВозвращаемыеТовары", ТекущаяСтрокаВозвращаемыеТовары.НомерСтроки, "ДатаПоступления"),
			,
			Отказ);

		КонецЕсли;

		// Если клиент возвращает некачественный товар то тогда нужно проверять данные некачественного товара.
		Если ТекущаяСтрокаВозвращаемыеТовары.Порча Тогда
			Если Не ЗначениеЗаполнено(ТекущаяСтрокаВозвращаемыеТовары.НоменклатураОприходование) Тогда
				ТекстОшибки = НСтр("ru = 'Не заполнена колонка ""Номенклатура (оприходование)""';
				|en = 'Column ""Items (recording as received)"" is not filled in'");
				ОбщегоНазначения.СообщитьПользователю(
				ТекстОшибки + АдресОшибки,
				ЭтотОбъект,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ВозвращаемыеТовары", ТекущаяСтрокаВозвращаемыеТовары.НомерСтроки, "НоменклатураОприходование"),
				,
				Отказ);
			ИначеЕсли ТекущаяСтрокаВозвращаемыеТовары.НоменклатураОприходование = ТекущаяСтрокаВозвращаемыеТовары.Номенклатура Тогда
				ТекстОшибки = НСтр("ru = 'Возвращаемый товар другого качества совпадает с ранее отгруженным товаром.';
				|en = 'Returned goods of other quality match the goods that were shipped earlier.'");
				ОбщегоНазначения.СообщитьПользователю(
				ТекстОшибки + АдресОшибки,
				ЭтотОбъект,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ВозвращаемыеТовары", ТекущаяСтрокаВозвращаемыеТовары.НомерСтроки, "НоменклатураОприходование"),
				,
				Отказ);
			КонецЕсли;
		КонецЕсли;

	КонецЦикла;

	Если ВсеВозвращаемыеТоварыОтменены
		Или Не ПоступлениеОднойДатой
		Или (ПоступлениеОднойДатой 
		И Не (Статус = Перечисления.СтатусыЗаявокНаВозвратТоваровОтКлиентов.КВозврату
		Или Статус = Перечисления.СтатусыЗаявокНаВозвратТоваровОтКлиентов.КОбеспечению
		Или Статус = Перечисления.СтатусыЗаявокНаВозвратТоваровОтКлиентов.КОтгрузке
		Или Статус = Перечисления.СтатусыЗаявокНаВозвратТоваровОтКлиентов.Выполнена)) Тогда

		МассивНепроверяемыхРеквизитов.Добавить("ДатаПоступления");

	КонецЕсли;

	// Дата отгрузки в шапке должна быть не меньше даты документа
	Если НеОтгружатьЧастями И 
		ЗначениеЗаполнено(ДатаОтгрузки) И 
		ДатаОтгрузки < НачалоДня(Дата) И 
		СпособКомпенсации = Перечисления.СпособыКомпенсацииВозвратовТоваров.ЗаменитьТовары Тогда

		ТекстОшибки = НСтр("ru = 'Дата отгрузки должна быть не меньше даты документа %Дата%';
		|en = 'Shipment date cannot be less than document date%Дата%'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Дата%", Формат(Дата,"ДЛФ=DD"));

		ОбщегоНазначения.СообщитьПользователю(
		ТекстОшибки,
		ЭтотОбъект,
		"ДатаОтгрузки",
		,
		Отказ);

	КонецЕсли;

	// Дата поступления в шапке должна быть не меньше даты документа
	Если ПоступлениеОднойДатой И 
		ЗначениеЗаполнено(ДатаПоступления) И 
		ДатаПоступления < НачалоДня(Дата) Тогда

		ТекстОшибки = НСтр("ru = 'Дата поступления должна быть не меньше даты документа %Дата%';
		|en = 'Date of receipt cannot be less than document date %Дата%'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Дата%", Формат(Дата,"ДЛФ=DD"));

		ОбщегоНазначения.СообщитьПользователю(
		ТекстОшибки,
		ЭтотОбъект,
		"ДатаПоступления",
		,
		Отказ);

	КонецЕсли;

	МассивНепроверяемыхРеквизитов.Добавить("ЗаменяющиеТовары.ПричинаОтмены");
	МассивНепроверяемыхРеквизитов.Добавить("ЗаменяющиеТовары.ДатаОтгрузки");

	ДатаОтгрузкиОбязательна = Ложь;
	СкладОбязателен         = Ложь;

	СоответствиеКодовСтрок = Новый Соответствие;

	Если СпособКомпенсации = Перечисления.СпособыКомпенсацииВозвратовТоваров.ЗаменитьТовары Тогда

		ПараметрыВстраивания = Документы.ЗаявкаНаВозвратТоваровОтКлиента.ДоступныеОстаткиПараметрыВстраивания();
		ТаблицаОшибок = ОбеспечениеВДокументахСервер.ТаблицаОшибокЗаполнения(ЭтотОбъект, ПараметрыВстраивания);

		Для ТекИндекс = 0 По ТаблицаОшибок.Количество() - 1 Цикл

			ШаблонТекста = НСтр("ru = 'Не заполнена колонка ""Дата отгрузки"" в строке %НомерСтроки% списка ""Заменяющие товары""';
			|en = 'Column ""Shipment date"" in line %НомерСтроки% of the ""Replacement goods"" list is not filled in'");
			СтрокаОшибки = ТаблицаОшибок[ТекИндекс];

			Если СтрокаОшибки.ДатаОтгрузкиОбязательна И Не НеОтгружатьЧастями И СтрокаОшибки.ДатаОтгрузкиНеЗаполнена Тогда

				ТекстОшибки = СтрЗаменить(ШаблонТекста, "%НомерСтроки%", СтрокаОшибки.НомерСтроки);
				ПутьКТабЧасти = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
				"ЗаменяющиеТовары",
				СтрокаОшибки.НомерСтроки,
				"ДатаОтгрузки");
				ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, ЭтотОбъект, ПутьКТабЧасти, , Отказ);

			КонецЕсли;

			СкладОбязателен = СкладОбязателен Или СтрокаОшибки.СкладОбязателен;
			ДатаОтгрузкиОбязательна = ДатаОтгрузкиОбязательна Или СтрокаОшибки.ДатаОтгрузкиОбязательна;

		КонецЦикла;

		Если НеОтгружатьЧастями И ДатаОтгрузкиОбязательна И Не ЗначениеЗаполнено(ДатаОтгрузки) Тогда

			ТекстОшибки = НСтр("ru = 'Поле ""Дата отгрузки"" не заполнено';
			|en = '""Shipment date"" is not filled in'");
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, ЭтотОбъект, "ДатаОтгрузки", , Отказ);

		КонецЕсли;

		// Проверка заполнения склада в статусе ниже чем "К обеспечению". Начиная со статуса "К обеспечению",
		// проверки заполнения склада выполняются в модуле ПродажиСервер.ПроверитьКорректностьЗаполненияДокументаПродажи.
		Если СкладОбязателен И Не ЗначениеЗаполнено(Склад)
			И (Статус = Перечисления.СтатусыЗаявокНаВозвратТоваровОтКлиентов.НеСогласована
			Или Статус = Перечисления.СтатусыЗаявокНаВозвратТоваровОтКлиентов.КВозврату) Тогда

			ТекстОшибки = НСтр("ru = 'Поле ""Склад"" не заполнено';
			|en = '""Warehouse"" is required'");
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, ЭтотОбъект, "Склад", , Отказ);

		КонецЕсли;

		Для ТекИндекс = 0 По ЗаменяющиеТовары.Количество()-1 Цикл

			ТекущаяСтрокаЗаменяющиеТовары = ЗаменяющиеТовары[ТекИндекс]; // СтрокаТабличнойЧасти
			АдресОшибки = " " + НСтр("ru = 'в строке %НомерСтроки% списка ""Заменяющие товары""';
			|en = 'in line %НомерСтроки% of the ""Substitute goods"" list'");
			АдресОшибки = СтрЗаменить(АдресОшибки, "%НомерСтроки%", ТекущаяСтрокаЗаменяющиеТовары.НомерСтроки);

			// Причина отмены обязательна для заполнения в строках без признака Отменено
			Если ПолучитьФункциональнуюОпцию("ИспользоватьПричиныОтменыЗаказовКлиентов")
				И ТекущаяСтрокаЗаменяющиеТовары.Отменено
				И Не ЗначениеЗаполнено(ТекущаяСтрокаЗаменяющиеТовары.ПричинаОтмены) Тогда

				ТекстОшибки = НСтр("ru = 'Необходимо указать причину отмены';
				|en = 'Cancellation reason is required'");
				ОбщегоНазначения.СообщитьПользователю(
				ТекстОшибки + АдресОшибки,
				ЭтотОбъект,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ЗаменяющиеТовары", ТекущаяСтрокаЗаменяющиеТовары.НомерСтроки, "ПричинаОтмены"),
				,
				Отказ);

			КонецЕсли;

			// Дата отгрузки в тч Товары должна быть не меньше даты документа
			Если Не НеОтгружатьЧастями И
				ЗначениеЗаполнено(ТекущаяСтрокаЗаменяющиеТовары.ДатаОтгрузки)	И 
				ТекущаяСтрокаЗаменяющиеТовары.ДатаОтгрузки < НачалоДня(Дата) Тогда

				ТекстОшибки = НСтр("ru = 'Дата отгрузки должна быть не меньше даты документа ""%Дата%""';
				|en = 'Shipment date cannot be less than document date ""%Дата%""'");
				ТекстОшибки = СтрЗаменить(ТекстОшибки,"%Дата%", Формат(Дата, "ДЛФ=DD"));

				ОбщегоНазначения.СообщитьПользователю(
				ТекстОшибки + АдресОшибки,
				ЭтотОбъект,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ЗаменяющиеТовары", ТекущаяСтрокаЗаменяющиеТовары.НомерСтроки, "ДатаОтгрузки"),
				,
				Отказ);

			КонецЕсли;

			ЗаказыСервер.ПроверитьДублиКодовСтрокВТаблице(ЭтотОбъект,
			ТекущаяСтрокаЗаменяющиеТовары.КодСтроки,
			ТекущаяСтрокаЗаменяющиеТовары.НомерСтроки,
			СоответствиеКодовСтрок,
			Отказ,
			"ЗаменяющиеТовары");
		КонецЦикла;

	КонецЕсли;

	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтКомиссионера Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Подразделение");
		МассивНепроверяемыхРеквизитов.Добавить("ЗаменяющиеТовары.ПроцентРучнойСкидки");
		МассивНепроверяемыхРеквизитов.Добавить("ЗаменяющиеТовары.СуммаРучнойСкидки");
		МассивНепроверяемыхРеквизитов.Добавить("ЗаменяющиеТовары.ПроцентАвтоматическойСкидки");
		МассивНепроверяемыхРеквизитов.Добавить("ЗаменяющиеТовары.СуммаАвтоматическойСкидки");
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Договор");
	КонецЕсли;

	ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект, Документы.ЗаявкаНаВозвратТоваровОтКлиента);

	ПараметрыПроверки = НоменклатураСервер.ПараметрыПроверкиЗаполненияХарактеристик();
	ПараметрыПроверки.ИмяТЧ = "ВозвращаемыеТовары";
	ПараметрыПроверки.ИменаПолейССуффиксом.Вставить("Номенклатура", "НоменклатураОприходование");
	ПараметрыПроверки.ИменаПолейССуффиксом.Вставить("Характеристика", "ХарактеристикаОприходование");
	НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект,МассивНепроверяемыхРеквизитов,Отказ,ПараметрыПроверки);
	НоменклатураСервер.ПроверитьЗаполнениеСерий(ЭтотОбъект,
	ПараметрыУказанияСерий.Возвращаемые,
	Отказ,
	МассивНепроверяемыхРеквизитов);

	Если СпособКомпенсации = Перечисления.СпособыКомпенсацииВозвратовТоваров.ЗаменитьТовары Тогда
		ПараметрыПроверки = НоменклатураСервер.ПараметрыПроверкиЗаполненияХарактеристик();
		ПараметрыПроверки.ИмяТЧ = "ЗаменяющиеТовары";
		НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект,МассивНепроверяемыхРеквизитов,Отказ,ПараметрыПроверки);
		НоменклатураСервер.ПроверитьЗаполнениеСерий(ЭтотОбъект,
		ПараметрыУказанияСерий.Заменяющие,
		Отказ,
		МассивНепроверяемыхРеквизитов);
	КонецЕсли;

	МассивНепроверяемыхРеквизитов.Добавить("Подразделение");

	Если СпособКомпенсации <> Перечисления.СпособыКомпенсацииВозвратовТоваров.ЗаменитьТовары 
		ИЛИ ПользователиКлиентСервер.ЭтоСеансВнешнегоПользователя() Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ЗаменяющиеТовары");
		МассивНепроверяемыхРеквизитов.Добавить("ЗаменяющиеТовары.Номенклатура");
		МассивНепроверяемыхРеквизитов.Добавить("ЗаменяющиеТовары.Характеристика");
		МассивНепроверяемыхРеквизитов.Добавить("ЗаменяющиеТовары.КоличествоУпаковок");
		МассивНепроверяемыхРеквизитов.Добавить("ЗаменяющиеТовары.Количество");
		МассивНепроверяемыхРеквизитов.Добавить("ЗаменяющиеТовары.СтавкаНДС");
		МассивНепроверяемыхРеквизитов.Добавить("ЗаменяющиеТовары.Цена");
	КонецЕсли;

	НоменклатураСервер.ПроверитьВидНоменклатурыОприходования(ЭтотОбъект,Отказ,"ВозвращаемыеТовары");

	ДоставкаТоваров.ПроверитьЗаполнениеРеквизитовДоставки(ЭтотОбъект, МассивНепроверяемыхРеквизитов, Отказ);

	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты,МассивНепроверяемыхРеквизитов);

	Если Не Отказ И ОбщегоНазначенияУТ.ПроверитьЗаполнениеРеквизитовОбъекта(ЭтотОбъект, ПроверяемыеРеквизиты) Тогда
		Отказ = Истина;
	КонецЕсли;
	СуммаЗамены = ПолучитьСуммуЗаменяющихСтрок();
	СуммаВозвратнойТары = ПолучитьСуммуВозвратнойТары();

	ПродажиСервер.ПроверитьКорректностьЗаполненияДокументаПродажи(ЭтотОбъект, Отказ);
	Если ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ВозвратОтХранителя Тогда
		#Вставка
		// vvv Галфинд \ Sakovich 22.11.2022
		гф_ОтказКэш = Отказ;
		#КонецВставки
		ПродажиСервер.ПроверитьКорректностьВозвращаемыхТоваров(ЭтотОбъект, "ВозвращаемыеТовары", Отказ);
		#Вставка
		// vvv Галфинд \ Sakovich 22.11.2022
		Отказ = гф_ОтказКэш;
		#КонецВставки
	КонецЕсли;
	КонтрольЗаполненияЦенВозвращаемыхТоваров(Отказ);

	Если (Статус = Перечисления.СтатусыЗаявокНаВозвратТоваровОтКлиентов.КОбеспечению
		ИЛИ Статус = Перечисления.СтатусыЗаявокНаВозвратТоваровОтКлиентов.КОтгрузке
		ИЛИ Статус = Перечисления.СтатусыЗаявокНаВозвратТоваровОтКлиентов.Выполнена)
		И ЗаменяющиеТовары.Количество() > 0 Тогда

		ПродажиСервер.ПроверитьЗапретОтгрузки(Партнер, Отказ);

	КонецЕсли;

	ЗаявкаНаВозвратТоваровОтКлиентаЛокализация.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);

КонецПроцедуры

#КонецОбласти

#КонецЕсли
