
&Вместо("ЗаполнитьОтгружаемыеТоварыПоТоварамПоРаспоряжениям")
Процедура гф_ЗаполнитьОтгружаемыеТоварыПоТоварамПоРаспоряжениям(Объект)
	
	Если ТипЗнч(Объект) = Тип("ДокументОбъект.РасходныйОрдерНаТовары") И Объект.ДополнительныеСвойства.Свойство("гф_УпаковочныйЛист") Тогда
		
		УпаковочныеЛисты = Объект.ДополнительныеСвойства.гф_УпаковочныйЛист;
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	УпаковочныйЛист.Ссылка КАК Ссылка,
		|	УпаковочныйЛист.гф_Агрегация КАК гф_Агрегация,
		|	УпаковочныйЛист.Товары.(
		|		Ссылка КАК Ссылка,
		|		НомерСтроки КАК НомерСтроки,
		|		Номенклатура КАК Номенклатура,
		|		Характеристика КАК Характеристика,
		|		Серия КАК Серия,
		|		Упаковка КАК Упаковка,
		|		КоличествоУпаковок КАК КоличествоУпаковок,
		|		Количество КАК Количество,
		|		УпаковочныйЛист КАК УпаковочныйЛист,
		|		НоменклатураПартнера КАК НоменклатураПартнера,
		|		Комментарий КАК Комментарий,
		|		ЭтоУпаковочныйЛист КАК ЭтоУпаковочныйЛист,
		|		ЭтоСлужебнаяСтрокаПустогоУпаковочногоЛиста КАК ЭтоСлужебнаяСтрокаПустогоУпаковочногоЛиста,
		|		УпаковочныйЛистРодитель КАК УпаковочныйЛистРодитель,
		|		СтатусУказанияСерий КАК СтатусУказанияСерий,
		|		Назначение КАК Назначение
		|	) КАК Товары
		|ИЗ
		|	Документ.УпаковочныйЛист КАК УпаковочныйЛист
		|ГДЕ
		|	УпаковочныйЛист.Ссылка В(&Ссылка)";
		
		Запрос.УстановитьПараметр("Ссылка", УпаковочныеЛисты);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			НоваяСтрока = Объект.ОтгружаемыеТовары.Добавить();
			НоваяСтрока.УпаковочныйЛист 		= ВыборкаДетальныеЗаписи.Ссылка;
			НоваяСтрока.ЭтоУпаковочныйЛист 		= Истина;
			НоваяСтрока.Действие 				= Перечисления.ДействияСоСтрокамиОрдеровНаОтгрузку.Отгрузить;
			НоваяСтрока.КоличествоУпаковок 		= 1;
			НоваяСтрока.Количество 				= 1;

			ВыборкаДетальныеЗаписи2 = ВыборкаДетальныеЗаписи.Товары.Выбрать();
			
			Пока ВыборкаДетальныеЗаписи2.Следующий() Цикл
				
				НоваяСтрока = Объект.ОтгружаемыеТовары.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаДетальныеЗаписи2);
				НоваяСтрока.УпаковочныйЛистРодитель 	= ВыборкаДетальныеЗаписи.Ссылка;
				НоваяСтрока.Действие 					= Перечисления.ДействияСоСтрокамиОрдеровНаОтгрузку.Отгрузить;
				
			КонецЦикла;
			
			НоваяСтрокаШтрихКодыУпаковок = Объект.ШтрихКодыУпаковок.Добавить();
			НоваяСтрокаШтрихКодыУпаковок.ШтрихкодУпаковки = ВыборкаДетальныеЗаписи.гф_Агрегация;
			
		КонецЦикла;
	Иначе
		ПродолжитьВызов(Объект);
	КонецЕсли;

КонецПроцедуры

&После("ЗарегистрироватьУчетныеМеханизмы")
Процедура гф_ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента)
	// vvv Галфинд \ Sakovich 27.01.2023
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры") Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(МеханизмыДокумента, "СерийныйУчет");
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьАдресноеХранение") Тогда
		// ++ Галфинд Volkov 10.03.2023 Временно решено не использовать
		//ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(МеханизмыДокумента, "АдресныйСклад");
		// -- Галфинд Volkov 10.03.2023
	КонецЕсли;
	// ^^^ Галфинд \ Sakovich 27.01.2023 
КонецПроцедуры

&ИзменениеИКонтроль("ПереносимыеСтроки")
Функция гф_ПереносимыеСтроки(ИсточникОбъект, СтрокиДляПриемника)

	Результат = Новый Структура("СтрокиДляПереноса,ЕстьОшибка", Новый Массив, Ложь);

	Для Каждого СтрМас Из СтрокиДляПриемника Цикл

		ТекущаяСтрока = ИсточникОбъект.ОтгружаемыеТовары[СтрМас - 1];
		
		#Вставка
		// #wortmann {
		// Не нужно проверять при обработке ОбменСWMS
		// e1cib/data/Задача.ЗадачаИсполнителя?ref=8ea8b083fed1320811ee045d251fd110
		// Галфинд Домнышева КР 2023/06/30
		Если НЕ ИсточникОбъект.ДополнительныеСвойства.Свойство("гф_ОбменСоСкладом") Тогда
		#КонецВставки
		Если Не СкладыКлиентСервер.СтрокуРасходногоОрдераМожноПереноситьВДругойОрдер(ТекущаяСтрока) Тогда
			Результат.ЕстьОшибка = Истина;
			Возврат Результат;
		КонецЕсли;
		#Вставка
		КонецЕсли;
		// } #wortmann
		#КонецВставки

		Результат.СтрокиДляПереноса.Добавить(ТекущаяСтрока);

		Если ТекущаяСтрока.ЭтоУпаковочныйЛист Тогда

			ПодчиненныеСтроки = Новый Массив;
			УпаковочныеЛистыСервер.РекурсивноОбойтиПодчиненныеСтроки(ИсточникОбъект.ОтгружаемыеТовары, ТекущаяСтрока.УпаковочныйЛист, ,ПодчиненныеСтроки);
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат.СтрокиДляПереноса, ПодчиненныеСтроки);

		КонецЕсли;

	КонецЦикла;

	Возврат Результат;
КонецФункции
