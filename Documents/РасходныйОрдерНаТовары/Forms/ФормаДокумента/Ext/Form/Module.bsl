
&НаСервере
&ИзменениеИКонтроль("ПриЧтенииСозданииНаСервере")
Процедура гф_ПриЧтенииСозданииНаСервере()

	УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("Склад,Помещение",Объект.Склад,Объект.Помещение));

	ПараметрыУказанияСерий = Новый ФиксированнаяСтруктура(НоменклатураСервер.ПараметрыУказанияСерий(Объект, Документы.РасходныйОрдерНаТовары));

	НачинатьОтгрузкуПослеФормированияЗаданияНаПеревозку = ПолучитьФункциональнуюОпцию("НачинатьОтгрузкуПослеФормированияЗаданияНаПеревозку", Новый Структура("Склад", Объект.Склад));

	УстановитьЗависимыеОтАдресногоХранения();

	СобытияФорм.ПриЧтенииНаСервере(ЭтотОбъект, Объект);

	РасходныйОрдерНаТоварыЛокализация.УстановитьПризнакИспользованияМаркируемойПродукции(ЭтаФорма);
	#Вставка
	// #wortmann {
	// #Автоматическое заполнение табличной части документа Расходный ордер 
	// Номенклатура и упаковочный лист одновременно являются маркируемыми товарами, иначе в РасходномОрдере в ТЧ только номенклатура
	// Галфинд Volkov 2022/09/10
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ЭтаФорма, "ЕстьМаркируемаяПродукция") Тогда
		
		ТЗ = Новый ТаблицаЗначений;
		ТЗ = Объект.ОтгружаемыеТовары.Выгрузить(,"ЭтоУпаковочныйЛист");
		
		УпаковочныйЛистНайден = ТЗ.Найти(Истина, "ЭтоУпаковочныйЛист");
		
		Если Не УпаковочныйЛистНайден = Неопределено И УпаковочныйЛистНайден.ЭтоУпаковочныйЛист Тогда
			ЭтаФорма.ИспользоватьУпаковочныеЛисты = Истина;
			ЭтаФорма.ЕстьМаркируемаяПродукция = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	// } #wortmann
	#КонецВставки
	УстановитьВидимостьЭлементовУпаковкиПриМаркировке();

	УпаковочныеЛистыСервер.ПриЧтенииСозданииФормыСУпаковочнымиЛистами(ЭтаФорма, Объект.ОтгружаемыеТовары,
	Объект.Ссылка.Метаданные().ПредставлениеОбъекта);

	ЗаполнитьСлужебныеРеквизитыТЧТовары("ТоварыПоРаспоряжениям", Ложь);
	ЗаполнитьСлужебныеРеквизитыТЧТовары("ОтгружаемыеТовары", Ложь);

	Если Объект.ОтгрузкаПоЗаданиюНаПеревозку Тогда
		Элементы.ПорядокДоставки.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Авто;
		ТипОтгрузки = "ОтгрузкаПоЗаданиюНаПеревозку";
	Иначе
		Элементы.ПорядокДоставки.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		ТипОтгрузки = "Самовывоз";
	КонецЕсли;

	Элементы.ГруппаИнформацияИКомментарий.Картинка = ОбщегоНазначенияКлиентСервер.КартинкаКомментария(Объект.Комментарий);
	УстановитьДоступность();

	ЕстьДоставкаПоСкладскойОперации       = ДоставкаТоваров.ЕстьДоставкаПоСкладскойОперации(Объект.СкладскаяОперация);

	Элементы.ТипОтгрузки.Видимость        = ЕстьДоставкаПоСкладскойОперации Или Объект.ОтгрузкаПоЗаданиюНаПеревозку;
	Элементы.ЗаданиеНаПеревозку.Видимость = ЕстьДоставкаПоСкладскойОперации Или Объект.ОтгрузкаПоЗаданиюНаПеревозку;
	Элементы.ПорядокДоставки.Видимость    = ЕстьДоставкаПоСкладскойОперации Или Объект.ОтгрузкаПоЗаданиюНаПеревозку;

	РаботаСТабличнымиЧастями.ИнициализироватьКэшСтрок(Элементы.ОтгружаемыеТовары);

КонецПроцедуры
