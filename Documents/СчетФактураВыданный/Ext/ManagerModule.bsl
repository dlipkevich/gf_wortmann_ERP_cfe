
&ИзменениеИКонтроль("ТаблицаТоваров")
Функция гф_ТаблицаТоваров(ПараметрыЗаполнения)

	// Заполняем табличную часть Товары только для Корректировочных или исправленных счетов-фактур.
	// Если признаки переданы в данных заполнения, то берем оттуда, иначе из реквизитов заполняемого документа.

	ЭтоКорректировочный = ПараметрыЗаполнения.Корректировочный;
	ЭтоИсправление = ПараметрыЗаполнения.Исправление;
	ЭтоПеревыставление = ПараметрыЗаполнения.Перевыставленный;
	ВалютаСчетаФактуры = ПараметрыЗаполнения.Валюта;
	РеализацияЧерезКомиссионера = ПараметрыЗаполнения.РеализацияЧерезКомиссионера;

	Результат = Новый Структура("СчетФактураОснование,Корректировочный,Товары");
	Результат.СчетФактураОснование = Документы.СчетФактураВыданный.ПустаяСсылка();
	Результат.Корректировочный = ПараметрыЗаполнения.Корректировочный;
	Результат.Товары = Документы.СчетФактураВыданный.ПустаяСсылка().Товары.Выгрузить();

	Если НЕ ЭтоКорректировочный И НЕ ЭтоИсправление И НЕ ЭтоПеревыставление Тогда
		Возврат Результат;
	КонецЕсли;

	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;

	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ЭтоКорректировочный", ЭтоКорректировочный);
	ДополнительныеПараметры.Вставить("ВалютаСчетаФактуры", ВалютаСчетаФактуры);
	ДополнительныеПараметры.Вставить("ЭтоПеревыставление", ЭтоПеревыставление);
	ДополнительныеПараметры.Вставить("РеализацияЧерезКомиссионера", РеализацияЧерезКомиссионера);

	// Получаем предварительную таблицу товаров по всем документам-основаниям.

	ТаблицаТорговыхДокументов = ПараметрыЗаполнения.ДокументыОснования.Скопировать();
	Если ЭтоПеревыставление Тогда
		ДополнительныеПараметры.Вставить("СчетаФактурыПолученные", ТаблицаТорговыхДокументов.ВыгрузитьКолонку("СчетФактураПолученныйОтПродавца"));
	КонецЕсли;
	ТаблицаТорговыхДокументов.Свернуть("ДокументОснование");

	ПоместитьТаблицуТоваровТорговыхДокументов(ТаблицаТорговыхДокументов.ВыгрузитьКолонку("ДокументОснование"),
	МенеджерВременныхТаблиц, "вт_ТаблицаТоваровДокументовОснований", ДополнительныеПараметры);

	Если ЭтоПеревыставление И Не ЭтоКорректировочный Тогда
		Результат.Товары = ТаблицаТоваровДокументовОснований(МенеджерВременныхТаблиц);
		Возврат Результат;
	КонецЕсли;

	// Ищем предыдущие счета-фактуры. Если по таблице товаров счет-фактура не найден,
	// то считаем, что предыдущий счет-фактура - это исходный счет-фактура.

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТаблицаТорговыхДокументов", ТаблицаТорговыхДокументов);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаТорговыхДокументов.ДокументОснование КАК ДокументОснование
	|ПОМЕСТИТЬ вт_ТорговыеДокументыОснования
	|ИЗ
	|	&ТаблицаТорговыхДокументов КАК ТаблицаТорговыхДокументов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	вт_ТаблицаТоваров.ИсходныйСчетФактура КАК ИсходныйСчетФактура,
	|	вт_ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	вт_ТаблицаТоваров.Характеристика КАК Характеристика,
	|	вт_ТаблицаТоваров.Серия КАК Серия,
	|	вт_ТаблицаТоваров.НоменклатураНабора КАК НоменклатураНабора,
	|	вт_ТаблицаТоваров.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	вт_ТаблицаТоваров.Содержание КАК Содержание,
	|	вт_ТаблицаТоваров.ТипЗапасов КАК ТипЗапасов,
	|	вт_ТаблицаТоваров.КодТНВЭД КАК КодТНВЭД,
	|	вт_ТаблицаТоваров.НомерГТД КАК НомерГТД,
	|	вт_ТаблицаТоваров.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	вт_ТаблицаТоваров.СтавкаНДС КАК СтавкаНДС,
	|	МАКСИМУМ(СчетФактураВыданныйТовары.Ссылка.Дата) КАК ПредыдущийСчетФактураДата
	|ПОМЕСТИТЬ вт_КрайниеПериоды
	|ИЗ
	|	вт_ТаблицаТоваровДокументовОснований КАК вт_ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.Товары КАК СчетФактураВыданныйТовары
	|		ПО вт_ТаблицаТоваров.ИсходныйСчетФактура = СчетФактураВыданныйТовары.ИсходныйСчетФактура
	|			И вт_ТаблицаТоваров.Номенклатура = СчетФактураВыданныйТовары.Номенклатура
	|			И вт_ТаблицаТоваров.Характеристика = СчетФактураВыданныйТовары.Характеристика
	|			И вт_ТаблицаТоваров.Серия = СчетФактураВыданныйТовары.Серия
	|			И вт_ТаблицаТоваров.НоменклатураНабора = СчетФактураВыданныйТовары.НоменклатураНабора
	|			И вт_ТаблицаТоваров.ХарактеристикаНабора = СчетФактураВыданныйТовары.ХарактеристикаНабора
	|			И вт_ТаблицаТоваров.Содержание = СчетФактураВыданныйТовары.Содержание
	|			И вт_ТаблицаТоваров.ТипЗапасов = СчетФактураВыданныйТовары.ТипЗапасов
	|			И вт_ТаблицаТоваров.КодТНВЭД = СчетФактураВыданныйТовары.КодТНВЭД
	|			И вт_ТаблицаТоваров.НомерГТД = СчетФактураВыданныйТовары.НомерГТД
	|			И вт_ТаблицаТоваров.ЕдиницаИзмерения = СчетФактураВыданныйТовары.ЕдиницаИзмерения
	|			И вт_ТаблицаТоваров.СтавкаНДС = СчетФактураВыданныйТовары.СтавкаНДС
	|			И (СчетФактураВыданныйТовары.Ссылка.Проведен)
	|ГДЕ
	|	СчетФактураВыданныйТовары.Ссылка.МоментВремени < &МоментВремени
	|	И СчетФактураВыданныйТовары.Ссылка <> &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	вт_ТаблицаТоваров.ИсходныйСчетФактура,
	|	вт_ТаблицаТоваров.Номенклатура,
	|	вт_ТаблицаТоваров.Характеристика,
	|	вт_ТаблицаТоваров.Серия,
	|	вт_ТаблицаТоваров.НоменклатураНабора,
	|	вт_ТаблицаТоваров.ХарактеристикаНабора,
	|	вт_ТаблицаТоваров.Содержание,
	|	вт_ТаблицаТоваров.ТипЗапасов,
	|	вт_ТаблицаТоваров.КодТНВЭД,
	|	вт_ТаблицаТоваров.НомерГТД,
	|	вт_ТаблицаТоваров.ЕдиницаИзмерения,
	|	вт_ТаблицаТоваров.СтавкаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	вт_КрайниеПериоды.ИсходныйСчетФактура КАК ИсходныйСчетФактура,
	|	вт_КрайниеПериоды.Номенклатура КАК Номенклатура,
	|	вт_КрайниеПериоды.Характеристика КАК Характеристика,
	|	вт_КрайниеПериоды.Серия КАК Серия,
	|	вт_КрайниеПериоды.НоменклатураНабора КАК НоменклатураНабора,
	|	вт_КрайниеПериоды.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	вт_КрайниеПериоды.Содержание КАК Содержание,
	|	вт_КрайниеПериоды.ТипЗапасов КАК ТипЗапасов,
	|	вт_КрайниеПериоды.КодТНВЭД КАК КодТНВЭД,
	|	вт_КрайниеПериоды.НомерГТД КАК НомерГТД,
	|	вт_КрайниеПериоды.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	вт_КрайниеПериоды.СтавкаНДС КАК СтавкаНДС,
	|	МАКСИМУМ(СчетФактураВыданныйТовары.Ссылка) КАК ПредыдущийСчетФактура
	|ПОМЕСТИТЬ вт_КрайниеСчетаФактуры
	|ИЗ
	|	вт_КрайниеПериоды КАК вт_КрайниеПериоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.Товары КАК СчетФактураВыданныйТовары
	|		ПО вт_КрайниеПериоды.ИсходныйСчетФактура = СчетФактураВыданныйТовары.ИсходныйСчетФактура
	|			И вт_КрайниеПериоды.Номенклатура = СчетФактураВыданныйТовары.Номенклатура
	|			И вт_КрайниеПериоды.Характеристика = СчетФактураВыданныйТовары.Характеристика
	|			И вт_КрайниеПериоды.Серия = СчетФактураВыданныйТовары.Серия
	|			И вт_КрайниеПериоды.НоменклатураНабора = СчетФактураВыданныйТовары.НоменклатураНабора
	|			И вт_КрайниеПериоды.ХарактеристикаНабора = СчетФактураВыданныйТовары.ХарактеристикаНабора
	|			И вт_КрайниеПериоды.Содержание = СчетФактураВыданныйТовары.Содержание
	|			И вт_КрайниеПериоды.ТипЗапасов = СчетФактураВыданныйТовары.ТипЗапасов
	|			И вт_КрайниеПериоды.КодТНВЭД = СчетФактураВыданныйТовары.КодТНВЭД
	|			И вт_КрайниеПериоды.НомерГТД = СчетФактураВыданныйТовары.НомерГТД
	|			И вт_КрайниеПериоды.ЕдиницаИзмерения = СчетФактураВыданныйТовары.ЕдиницаИзмерения
	|			И вт_КрайниеПериоды.СтавкаНДС = СчетФактураВыданныйТовары.СтавкаНДС
	|			И вт_КрайниеПериоды.ПредыдущийСчетФактураДата = СчетФактураВыданныйТовары.Ссылка.Дата
	|			И (СчетФактураВыданныйТовары.Ссылка.Проведен)
	|
	|СГРУППИРОВАТЬ ПО
	|	вт_КрайниеПериоды.ИсходныйСчетФактура,
	|	вт_КрайниеПериоды.Номенклатура,
	|	вт_КрайниеПериоды.Характеристика,
	|	вт_КрайниеПериоды.Серия,
	|	вт_КрайниеПериоды.НоменклатураНабора,
	|	вт_КрайниеПериоды.ХарактеристикаНабора,
	|	вт_КрайниеПериоды.Содержание,
	|	вт_КрайниеПериоды.ТипЗапасов,
	|	вт_КрайниеПериоды.КодТНВЭД,
	|	вт_КрайниеПериоды.НомерГТД,
	|	вт_КрайниеПериоды.ЕдиницаИзмерения,
	|	вт_КрайниеПериоды.СтавкаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	вт_ТаблицаТоваров.ДокументРеализации КАК ДокументРеализации,
	|	вт_ТаблицаТоваров.ИсходныйСчетФактура КАК ИсходныйСчетФактура,
	|	ЕСТЬNULL(вт_КрайниеСчетаФактуры.ПредыдущийСчетФактура, вт_ТаблицаТоваров.ИсходныйСчетФактура) КАК ПредыдущийСчетФактура,
	|	ЕСТЬNULL(вт_КрайниеСчетаФактуры.ПредыдущийСчетФактура.Корректировочный, ЛОЖЬ) КАК Корректировочный,
	|	ЕСТЬNULL(вт_КрайниеСчетаФактуры.ПредыдущийСчетФактура.Исправление, ЛОЖЬ) КАК Исправление,
	|	вт_ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	вт_ТаблицаТоваров.Характеристика КАК Характеристика,
	|	вт_ТаблицаТоваров.Серия КАК Серия,
	|	вт_ТаблицаТоваров.НоменклатураНабора КАК НоменклатураНабора,
	|	вт_ТаблицаТоваров.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	вт_ТаблицаТоваров.Содержание КАК Содержание,
	|	вт_ТаблицаТоваров.ТипЗапасов КАК ТипЗапасов,
	|	вт_ТаблицаТоваров.КодТНВЭД КАК КодТНВЭД,
	|	вт_ТаблицаТоваров.НомерГТД КАК НомерГТД,
	|	вт_ТаблицаТоваров.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	вт_ТаблицаТоваров.СтавкаНДС КАК СтавкаНДС
	|ПОМЕСТИТЬ вт_ТаблицаТоваровПредварительная
	|ИЗ
	|	вт_ТаблицаТоваровДокументовОснований КАК вт_ТаблицаТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_КрайниеСчетаФактуры КАК вт_КрайниеСчетаФактуры
	|		ПО вт_ТаблицаТоваров.ИсходныйСчетФактура = вт_КрайниеСчетаФактуры.ИсходныйСчетФактура
	|			И вт_ТаблицаТоваров.Номенклатура = вт_КрайниеСчетаФактуры.Номенклатура
	|			И вт_ТаблицаТоваров.Характеристика = вт_КрайниеСчетаФактуры.Характеристика
	|			И вт_ТаблицаТоваров.Серия = вт_КрайниеСчетаФактуры.Серия
	|			И вт_ТаблицаТоваров.НоменклатураНабора = вт_КрайниеСчетаФактуры.НоменклатураНабора
	|			И вт_ТаблицаТоваров.ХарактеристикаНабора = вт_КрайниеСчетаФактуры.ХарактеристикаНабора
	|			И вт_ТаблицаТоваров.Содержание = вт_КрайниеСчетаФактуры.Содержание
	|			И вт_ТаблицаТоваров.ТипЗапасов = вт_КрайниеСчетаФактуры.ТипЗапасов
	|			И вт_ТаблицаТоваров.КодТНВЭД = вт_КрайниеСчетаФактуры.КодТНВЭД
	|			И вт_ТаблицаТоваров.НомерГТД = вт_КрайниеСчетаФактуры.НомерГТД
	|			И вт_ТаблицаТоваров.ЕдиницаИзмерения = вт_КрайниеСчетаФактуры.ЕдиницаИзмерения
	|			И вт_ТаблицаТоваров.СтавкаНДС = вт_КрайниеСчетаФактуры.СтавкаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫБОР
	|		КОГДА вт_ТаблицаТоваровПредварительная.ПредыдущийСчетФактура.Исправление
	|			ТОГДА вт_ТаблицаТоваровПредварительная.ПредыдущийСчетФактура.СчетФактураОснование
	|		ИНАЧЕ вт_ТаблицаТоваровПредварительная.ПредыдущийСчетФактура
	|	КОНЕЦ КАК СчетФактура,
	|	ВЫБОР
	|		КОГДА вт_ТаблицаТоваровПредварительная.ПредыдущийСчетФактура.Исправление
	|			ТОГДА вт_ТаблицаТоваровПредварительная.ПредыдущийСчетФактура.СчетФактураОснование.Корректировочный
	|		ИНАЧЕ вт_ТаблицаТоваровПредварительная.ПредыдущийСчетФактура.Корректировочный
	|	КОНЕЦ КАК Корректировочный
	|ИЗ
	|	вт_ТаблицаТоваровПредварительная КАК вт_ТаблицаТоваровПредварительная
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_ТаблицаТоваровПредварительная.ПредыдущийСчетФактура КАК СчетФактура,
	|	вт_ТаблицаТоваровПредварительная.ПредыдущийСчетФактура.Корректировочный КАК Корректировочный,
	|	вт_ТаблицаТоваровПредварительная.ПредыдущийСчетФактура.Исправление КАК Исправление,
	|	МИНИМУМ(ЕСТЬNULL(ДокументыОснования.ДокументОснование = вт_ТорговыеДокументыОснования.ДокументОснование, ЛОЖЬ)) КАК ИсправлениеНаОснованииСФ
	|ИЗ
	|	вт_ТаблицаТоваровПредварительная КАК вт_ТаблицаТоваровПредварительная
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК ДокументыОснования
	|		ПО ДокументыОснования.Ссылка = вт_ТаблицаТоваровПредварительная.ПредыдущийСчетФактура
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ТорговыеДокументыОснования КАК вт_ТорговыеДокументыОснования
	|		ПО ДокументыОснования.ДокументОснование = вт_ТорговыеДокументыОснования.ДокументОснование
	|СГРУППИРОВАТЬ ПО
	|	вт_ТаблицаТоваровПредварительная.ПредыдущийСчетФактура
	|УПОРЯДОЧИТЬ ПО
	|	вт_ТаблицаТоваровПредварительная.ПредыдущийСчетФактура УБЫВ
	|АВТОУПОРЯДОЧИВАНИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	вт_ТаблицаТоваровПредварительная.ДокументРеализации КАК ДокументРеализации
	|ИЗ
	|	вт_ТаблицаТоваровПредварительная КАК вт_ТаблицаТоваровПредварительная
	|ГДЕ
	|	НЕ вт_ТаблицаТоваровПредварительная.Корректировочный
	|	И НЕ вт_ТаблицаТоваровПредварительная.Исправление
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументыОснования.ДокументОснование КАК ДокументРеализации
	|ИЗ
	|	вт_ТаблицаТоваровПредварительная КАК вт_ТаблицаТоваровПредварительная
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК ДокументыОснования
	|		ПО ДокументыОснования.Ссылка = вт_ТаблицаТоваровПредварительная.ПредыдущийСчетФактура
	|ГДЕ
	|	НЕ вт_ТаблицаТоваровПредварительная.Корректировочный
	|	И НЕ вт_ТаблицаТоваровПредварительная.Исправление
	|	И НЕ &РеализацияЧерезКомиссионера
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ вт_КрайниеПериоды
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ вт_КрайниеСчетаФактуры
	|";

	Запрос.УстановитьПараметр("МоментВремени", ПараметрыЗаполнения.МоментВремени);
	Запрос.УстановитьПараметр("Ссылка", ПараметрыЗаполнения.МоментВремени.Ссылка);
	Запрос.УстановитьПараметр("РеализацияЧерезКомиссионера", РеализацияЧерезКомиссионера);

	МассивРезультатов = Запрос.ВыполнитьПакет();

	ТаблицаСчетаФактурыОснования = МассивРезультатов[4].Выгрузить();
	#Вставка
	// ++ Галфинд_Домнышева 2023/04/10
	// e1cib/data/Задача.ЗадачаИсполнителя?ref=8131bcee7bda45d711edd1f8febddfd6
	// так как запрос будет пустой при формировании на осн КорректировкаРеализации (отсутствуют движения при гф_возвратWMN)
	// ниже берем вручную документ-основание -Реализацию и находим строки по нему.
	Если ТипЗнч(ТаблицаТорговыхДокументов[0].ДокументОснование) <> Тип("ДокументСсылка.КорректировкаРеализации") 
			И НЕ ТаблицаТорговыхДокументов[0].ДокументОснование.гф_возвратWMN Тогда
	// -- Галфинд_Домнышева 2023/04/10
	#КонецВставки
	Если ТаблицаСчетаФактурыОснования.Количество() = 0 Тогда
		Возврат Результат;
	КонецЕсли;
	#Вставка
	// ++ Галфинд_Домнышева 2023/04/10
	КонецЕсли;
	// -- Галфинд_Домнышева 2023/04/10
	#КонецВставки

	Если ЭтоИсправление И ТаблицаСчетаФактурыОснования.Количество() > 1 Тогда
		ТекстСообщения = НСтр("ru = 'По выбранным документам-основаниям необходимо выставить несколько исправленных счетов-фактур.';
		|en = 'Several adjusted tax invoices must be drawn by selected base documents.'") + Символы.ПС 
		+ НСтр("ru = 'Необходимо зарегистрировать по документам-основаниям отдельные счета-фактуры.';
		|en = 'Separate tax invoices must be registered by base documents.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);

		ВызватьИсключение ТекстСообщения;
	КонецЕсли;

	ТаблицаПредыдущиеСчетаФактуры = МассивРезультатов[5].Выгрузить();
	Если ЭтоПеревыставление Тогда
		ДокументыРеализации = Новый Массив;
	#Вставка
	// ++ Галфинд_Домнышева 2023/04/10
    // e1cib/data/Задача.ЗадачаИсполнителя?ref=8131bcee7bda45d711edd1f8febddfd6
	ИначеЕсли ТипЗнч(ТаблицаТорговыхДокументов[0].ДокументОснование) = Тип("ДокументСсылка.КорректировкаРеализации") 
			И ТаблицаТорговыхДокументов[0].ДокументОснование.гф_возвратWMN Тогда  
			ДокументыРеализации = Новый Массив;
			ДокументыРеализации.Добавить(ТаблицаТорговыхДокументов[0].ДокументОснование.ДокументОснование);
	// -- Галфинд_Домнышева 2023/04/10
	#КонецВставки	
	Иначе
		ДокументыРеализации = МассивРезультатов[6].Выгрузить().ВыгрузитьКолонку("ДокументРеализации");
	КонецЕсли;

	ЭтоИсправлениеНаОснованииСФ = Ложь;

	Если ЭтоИсправление И ТаблицаПредыдущиеСчетаФактуры.Количество() > 0 Тогда
		// Для исправления берем данные о товарах последнего исправления или исходного счета-фактуры.
		ДанныеПредыдущегоСчетаФактуры = ТаблицаПредыдущиеСчетаФактуры[0];
		ПредыдущиеСчетаФактуры = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ДанныеПредыдущегоСчетаФактуры.СчетФактура);

		// Если предыдущий счет-фактура - исправление или корректировка, то все товары есть в нем самом,
		// поэтому данные о товарах исходного торгового документа получать не нужно.
		Если ДанныеПредыдущегоСчетаФактуры.Корректировочный Или ДанныеПредыдущегоСчетаФактуры.Исправление Тогда
			ДокументыРеализации = Новый Массив;
		КонецЕсли;
		// Отслеживаем случай, когда исправленный счет-фактура создается по счету-фактуре, а не по корректировке.
		// В этом случае таблица товаров измениться не может и нужно просто скопировать таблицу предыдущего счета-фактуры
		Если ДанныеПредыдущегоСчетаФактуры.ИсправлениеНаОснованииСФ Тогда
			ЭтоИсправлениеНаОснованииСФ = Истина;
		КонецЕсли;
	Иначе
		// Для корректировки берем данные о товарах из каждой найденной предыдущей счет-фактуры.
		ПредыдущиеСчетаФактуры = ТаблицаПредыдущиеСчетаФактуры.ВыгрузитьКолонку("СчетФактура");
	КонецЕсли;

	// Формируем вспомогательные временные таблицы для дальнейшего заполнения.

	ДополнительныеПараметры.Вставить("ЭтоКорректировочный", Результат.Корректировочный);
	ДополнительныеПараметры.Вставить("ЭтоИсправление", ЭтоИсправление);
	ДополнительныеПараметры.Вставить("ЭтоИсправлениеНаОснованииСФ", ЭтоИсправлениеНаОснованииСФ);
	ПоместитьТаблицуТоваровТорговыхДокументов(ДокументыРеализации, МенеджерВременныхТаблиц, "вт_ТаблицаТоваровИсходныхТорговыхДокументов", ДополнительныеПараметры);
	ПоместитьТаблицуТоваровСчетовФактур(ПредыдущиеСчетаФактуры, МенеджерВременныхТаблиц, "вт_ТаблицаТоваровПредыдущихСчетовФактур", ДополнительныеПараметры);
	СвернутьТаблицуТоваровТорговыхДокументов(МенеджерВременныхТаблиц, ДополнительныеПараметры);

	Если ЭтоИсправление Тогда
		Результат.СчетФактураОснование = ТаблицаСчетаФактурыОснования[0].СчетФактура;
		Результат.Корректировочный = ТаблицаСчетаФактурыОснования[0].Корректировочный; // Меняем признак корректировочный, если изменили счет-фактуру основание

		Результат.Товары = ТаблицаТоваровИсправление(МенеджерВременныхТаблиц, ДополнительныеПараметры);
		Если Результат.Корректировочный <> NULL И Не Результат.Корректировочный Тогда
			Результат.Вставить("ТаблицаТоваровДокументовОснований",ТаблицаТоваровДокументовОснований(МенеджерВременныхТаблиц));
		КонецЕсли;
	Иначе
		Результат.Товары = ТаблицаТоваровКорректировка(МенеджерВременныхТаблиц, ДополнительныеПараметры);
	КонецЕсли;

	Возврат Результат;

КонецФункции

&ИзменениеИКонтроль("ПоместитьТаблицуТоваровТорговыхДокументов")
Процедура гф_ПоместитьТаблицуТоваровТорговыхДокументов(МассивТорговыхДокументов, МенеджерВременныхТаблиц, ИмяВременнойТаблицы, ДополнительныеПараметры)

	ТаблицаТоваров = Документы.СчетФактураВыданный.ПустаяСсылка().Товары.ВыгрузитьКолонки();
	ТаблицаТоваров.Колонки.Добавить("ДокументРеализации", Документы.ТипВсеСсылки());
	ТаблицаТоваров.Колонки.Добавить("Валюта", Новый ОписаниеТипов("СправочникСсылка.Валюты"));
	ТаблицаТоваров.Колонки.Добавить("СуммаРегл", Новый ОписаниеТипов("Число"));
	ТаблицаТоваров.Колонки.Добавить("СуммаНДСРегл", Новый ОписаниеТипов("Число"));

	Если ДополнительныеПараметры.ЭтоПеревыставление Тогда
		ИмяТаблицыСФ = "ЗаполнениеТоваровСФВыданныйПеревыставление";
	Иначе
		ИмяТаблицыСФ = "ЗаполнениеТоваровСФВыданный";
	КонецЕсли;
	Для Каждого Основание Из МассивТорговыхДокументов Цикл
		Если Не ЗначениеЗаполнено(Основание) Тогда
			Продолжить;
		КонецЕсли;
		
		#Вставка
		// ++ Галфинд_Домнышева 2023/04/10
		// e1cib/data/Задача.ЗадачаИсполнителя?ref=8131bcee7bda45d711edd1f8febddfd6
		Если ТипЗнч(Основание) = Тип("ДокументСсылка.КорректировкаРеализации") 
			И Основание.гф_возвратWMN Тогда
			Продолжить;
		КонецЕсли;
		// -- Галфинд_Домнышева 2023/04/10
		#КонецВставки
		// При эмулировании механизма проведения документа для заполнения таблицы товаров необходимо устанавливать привилегированный режим.

		УстановитьПривилегированныйРежим(Истина);
		ТаблицыДляДвижений = ПроведениеДокументов.ДанныеДокументаДляПроведения(Основание, ИмяТаблицыСФ);
		УстановитьПривилегированныйРежим(Ложь);

		Если ТаблицыДляДвижений.Свойство("Таблица" + ИмяТаблицыСФ) Тогда
			ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТаблицыДляДвижений["Таблица" + ИмяТаблицыСФ], ТаблицаТоваров);
		КонецЕсли;
	КонецЦикла;

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаТоваров.ИсходныйСчетФактура КАК ИсходныйСчетФактура,
	|	ТаблицаТоваров.НомерСтрокиПриПечати КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика КАК Характеристика,
	|	ТаблицаТоваров.Серия КАК Серия,
	|	ТаблицаТоваров.НоменклатураНабора КАК НоменклатураНабора,
	|	ТаблицаТоваров.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	ТаблицаТоваров.Содержание КАК Содержание,
	|	ТаблицаТоваров.ТипЗапасов КАК ТипЗапасов,
	|	ТаблицаТоваров.КодТНВЭД КАК КодТНВЭД,
	|	ТаблицаТоваров.НомерГТД КАК НомерГТД,
	|	ТаблицаТоваров.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаТоваров.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаТоваров.НомерСтрокиПриПечати КАК НомерСтрокиПриПечати,
	|	ТаблицаТоваров.НоменклатураПартнера КАК НоменклатураПартнера,	
	|
	|	ТаблицаТоваров.Количество КАК Количество,
	|	ТаблицаТоваров.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = ТаблицаТоваров.Валюта
	|			ТОГДА ТаблицаТоваров.Сумма
	|		ИНАЧЕ ТаблицаТоваров.СуммаРегл
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = ТаблицаТоваров.Валюта
	|			ТОГДА ТаблицаТоваров.СуммаНДС
	|		ИНАЧЕ ТаблицаТоваров.СуммаНДСРегл
	|	КОНЕЦ КАК СуммаНДС,
	|	ТаблицаТоваров.СчетФактураПолученныйОтПродавца,
	|	ТаблицаТоваров.ДокументРеализации
	|//ПОМЕСТИТЬ
	|ИЗ
	|	&ТаблицаТоваров КАК ТаблицаТоваров
	|//УСЛОВИЕ";

	Запрос.Текст = СтрЗаменить(Запрос.Текст, "//ПОМЕСТИТЬ", "ПОМЕСТИТЬ " + ИмяВременнойТаблицы);

	Если ДополнительныеПараметры.ЭтоПеревыставление Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "//УСЛОВИЕ","
		|ГДЕ
		|	ТаблицаТоваров.СчетФактураПолученныйОтПродавца В (&СчетаФактурыПолученные)");
		Запрос.УстановитьПараметр("СчетаФактурыПолученные", ДополнительныеПараметры.СчетаФактурыПолученные);
	КонецЕсли;

	ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(Запрос.Параметры, ДополнительныеПараметры, Истина);

	// упорядочиваем как это происходит при печати
	ТаблицаТоваров.Сортировать("ИсходныйСчетФактура,ДокументРеализации,НомерСтроки");

	// определяем номера строк исходного СФ 
	ГруппировкиПечати = ГруппировкиПечатиСчетаФактуры();
	ГруппировкиПечати = ГруппировкиПечати + ",ИсходныйСчетФактура";
	ИсходныеСФ = ТаблицаТоваров.ВыгрузитьКолонку("ИсходныйСчетФактура");
	ИсходныеСФ = ОбщегоНазначенияУТ.УдалитьПовторяющиесяЭлементыМассива(ИсходныеСФ);

	Если ДополнительныеПараметры.РеализацияЧерезКомиссионера Тогда
		ГруппировкиПечати = ГруппировкиПечати + ",ДокументРеализации";
	КонецЕсли;

	Для Каждого ИсходныйСФ Из ИсходныеСФ Цикл

		ТЧСвернуто = ТаблицаТоваров.Скопировать(Новый Структура("ИсходныйСчетФактура",ИсходныйСФ),ГруппировкиПечати);
		ТЧСвернуто.Свернуть(ГруппировкиПечати);

		Для Каждого СтрокаПечати Из ТЧСвернуто Цикл
			СтруктураОтбора = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(СтрокаПечати);
			СтрокиТоваров = ТаблицаТоваров.НайтиСтроки(СтруктураОтбора);
			Для Каждого СтрокаТоваров Из СтрокиТоваров Цикл
				СтрокаТоваров.НомерСтрокиПриПечати = ТЧСвернуто.Индекс(СтрокаПечати)+1;
			КонецЦикла;
		КонецЦикла;

	КонецЦикла;

	Запрос.УстановитьПараметр("ТаблицаТоваров", ТаблицаТоваров);
	Запрос.Выполнить();

КонецПроцедуры
