#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

&ИзменениеИКонтроль("ТаблицаТоваров")
Функция гф_ТаблицаТоваров(ПараметрыЗаполнения)
	
	// Заполняем табличную часть Товары только для Корректировочных или исправленных счетов-фактур, а также для счетов-фактур, сформированных по документам с налогообложением "Облагается НДС с межценовой разницы".
	// Если признаки переданы в данных заполнения, то берем оттуда, иначе из реквизитов заполняемого документа.
	
	ЭтоКорректировочный = ПараметрыЗаполнения.Корректировочный;
	ЭтоИсправление = ПараметрыЗаполнения.Исправление;
	ЭтоПеревыставление = ПараметрыЗаполнения.Перевыставленный;
	ВалютаСчетаФактуры = ПараметрыЗаполнения.Валюта;
	РеализацияЧерезКомиссионера = ПараметрыЗаполнения.РеализацияЧерезКомиссионера;
	НДССМежценовойРазницы = ?(ПараметрыЗаполнения.Свойство("НДССМежценовойРазницы"), ПараметрыЗаполнения.НДССМежценовойРазницы, Ложь);
	НалогообложениеНДС = ?(ПараметрыЗаполнения.Свойство("НалогообложениеНДС"), ПараметрыЗаполнения.НалогообложениеНДС, Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка());
	
	Результат = Новый Структура("СчетФактураОснование,Корректировочный,Товары");
	Результат.СчетФактураОснование = Документы.СчетФактураВыданный.ПустаяСсылка();
	Результат.Корректировочный = ПараметрыЗаполнения.Корректировочный;
	Результат.Товары = Документы.СчетФактураВыданный.ПустаяСсылка().Товары.Выгрузить();
	
	Если НЕ ЭтоКорректировочный И НЕ ЭтоИсправление И НЕ ЭтоПеревыставление
		И НЕ НДССМежценовойРазницы Тогда
		Возврат Результат;
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ЭтоКорректировочный", ЭтоКорректировочный);
	ДополнительныеПараметры.Вставить("ВалютаСчетаФактуры", ВалютаСчетаФактуры);
	ДополнительныеПараметры.Вставить("ЭтоПеревыставление", ЭтоПеревыставление);
	ДополнительныеПараметры.Вставить("РеализацияЧерезКомиссионера", РеализацияЧерезКомиссионера);
	ДополнительныеПараметры.Вставить("НДССМежценовойРазницы", НДССМежценовойРазницы);
	
	// Получаем предварительную таблицу товаров по всем документам-основаниям.
	
	ТаблицаТорговыхДокументов = ПараметрыЗаполнения.ДокументыОснования.Скопировать();
	Если ЭтоПеревыставление Тогда
		ДополнительныеПараметры.Вставить("СчетаФактурыПолученные", ТаблицаТорговыхДокументов.ВыгрузитьКолонку("СчетФактураПолученныйОтПродавца"));
	КонецЕсли;
	ТаблицаТорговыхДокументов.Свернуть("ДокументОснование");
	Если ТаблицаТорговыхДокументов.Количество() = 0 Тогда
		Возврат Результат;
	КонецЕсли;
	ДополнительныеПараметры.Вставить("ДокументОснование", ТаблицаТорговыхДокументов[0].ДокументОснование);
	
	ПоместитьТаблицуТоваровТорговыхДокументов(ТаблицаТорговыхДокументов.ВыгрузитьКолонку("ДокументОснование"),
		МенеджерВременныхТаблиц, "вт_ТаблицаТоваровДокументовОснований", ДополнительныеПараметры);
		
	Если ЭтоПеревыставление И Не ЭтоКорректировочный И Не ЭтоИсправление Тогда
		Результат.Товары = ТаблицаТоваровДокументовОснований(МенеджерВременныхТаблиц);
		Возврат Результат;
	КонецЕсли;
	
	// Ищем предыдущие счета-фактуры. Если по таблице товаров счет-фактура не найден,
	// то считаем, что предыдущий счет-фактура - это исходный счет-фактура.
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТаблицаТорговыхДокументов", ТаблицаТорговыхДокументов);
	Запрос.УстановитьПараметр("НДССМежценовойРазницы", НДССМежценовойРазницы);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаТорговыхДокументов.ДокументОснование КАК ДокументОснование
	|ПОМЕСТИТЬ вт_ТорговыеДокументыОснования
	|ИЗ
	|	&ТаблицаТорговыхДокументов КАК ТаблицаТорговыхДокументов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	вт_ТаблицаТоваров.ИсходныйСчетФактура КАК ИсходныйСчетФактура,
	|	вт_ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	вт_ТаблицаТоваров.Характеристика КАК Характеристика,
	|	вт_ТаблицаТоваров.Серия КАК Серия,
	|	вт_ТаблицаТоваров.НоменклатураНабора КАК НоменклатураНабора,
	|	вт_ТаблицаТоваров.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	вт_ТаблицаТоваров.Содержание КАК Содержание,
	|	вт_ТаблицаТоваров.ТипЗапасов КАК ТипЗапасов,
	|	вт_ТаблицаТоваров.КодТНВЭД КАК КодТНВЭД,
	|	вт_ТаблицаТоваров.НомерГТД КАК НомерГТД,
	|	вт_ТаблицаТоваров.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	вт_ТаблицаТоваров.СтавкаНДС КАК СтавкаНДС,
	|	МАКСИМУМ(СчетФактураВыданныйТовары.Ссылка.Дата) КАК ПредыдущийСчетФактураДата
	|ПОМЕСТИТЬ вт_КрайниеПериоды
	|ИЗ
	|	вт_ТаблицаТоваровДокументовОснований КАК вт_ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.Товары КАК СчетФактураВыданныйТовары
	|		ПО вт_ТаблицаТоваров.ИсходныйСчетФактура = СчетФактураВыданныйТовары.ИсходныйСчетФактура
	|			И вт_ТаблицаТоваров.Номенклатура = СчетФактураВыданныйТовары.Номенклатура
	|			И вт_ТаблицаТоваров.Характеристика = СчетФактураВыданныйТовары.Характеристика
	|			И вт_ТаблицаТоваров.Серия = СчетФактураВыданныйТовары.Серия
	|			И вт_ТаблицаТоваров.НоменклатураНабора = СчетФактураВыданныйТовары.НоменклатураНабора
	|			И вт_ТаблицаТоваров.ХарактеристикаНабора = СчетФактураВыданныйТовары.ХарактеристикаНабора
	|			И вт_ТаблицаТоваров.Содержание = СчетФактураВыданныйТовары.Содержание
	|			И вт_ТаблицаТоваров.ТипЗапасов = СчетФактураВыданныйТовары.ТипЗапасов
	|			И вт_ТаблицаТоваров.КодТНВЭД = СчетФактураВыданныйТовары.КодТНВЭД
	|			И вт_ТаблицаТоваров.НомерГТД = СчетФактураВыданныйТовары.НомерГТД
	|			И вт_ТаблицаТоваров.ЕдиницаИзмерения = СчетФактураВыданныйТовары.ЕдиницаИзмерения
	|			И вт_ТаблицаТоваров.СтавкаНДС = СчетФактураВыданныйТовары.СтавкаНДС
	|			И (СчетФактураВыданныйТовары.Ссылка.Проведен)
	|ГДЕ
	|	СчетФактураВыданныйТовары.Ссылка.МоментВремени < &МоментВремени
	|	И СчетФактураВыданныйТовары.Ссылка <> &Ссылка
	|	И НЕ &НДССМежценовойРазницы
	|
	|СГРУППИРОВАТЬ ПО
	|	вт_ТаблицаТоваров.ИсходныйСчетФактура,
	|	вт_ТаблицаТоваров.Номенклатура,
	|	вт_ТаблицаТоваров.Характеристика,
	|	вт_ТаблицаТоваров.Серия,
	|	вт_ТаблицаТоваров.НоменклатураНабора,
	|	вт_ТаблицаТоваров.ХарактеристикаНабора,
	|	вт_ТаблицаТоваров.Содержание,
	|	вт_ТаблицаТоваров.ТипЗапасов,
	|	вт_ТаблицаТоваров.КодТНВЭД,
	|	вт_ТаблицаТоваров.НомерГТД,
	|	вт_ТаблицаТоваров.ЕдиницаИзмерения,
	|	вт_ТаблицаТоваров.СтавкаНДС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	вт_ТаблицаТоваров.ИсходныйСчетФактура КАК ИсходныйСчетФактура,
	|	вт_ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	вт_ТаблицаТоваров.Характеристика КАК Характеристика,
	|	вт_ТаблицаТоваров.Серия КАК Серия,
	|	вт_ТаблицаТоваров.НоменклатураНабора КАК НоменклатураНабора,
	|	вт_ТаблицаТоваров.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	вт_ТаблицаТоваров.Содержание КАК Содержание,
	|	вт_ТаблицаТоваров.ТипЗапасов КАК ТипЗапасов,
	|	вт_ТаблицаТоваров.КодТНВЭД КАК КодТНВЭД,
	|	вт_ТаблицаТоваров.НомерГТД КАК НомерГТД,
	|	вт_ТаблицаТоваров.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СчетФактураВыданныйТовары.СтавкаНДС КАК СтавкаНДС,
	|	МАКСИМУМ(СчетФактураВыданныйТовары.Ссылка.Дата) КАК ПредыдущийСчетФактураДата
	|ИЗ
	|	вт_ТаблицаТоваровДокументовОснований КАК вт_ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.Товары КАК СчетФактураВыданныйТовары
	|		ПО вт_ТаблицаТоваров.ИсходныйСчетФактура = СчетФактураВыданныйТовары.ИсходныйСчетФактура
	|			И вт_ТаблицаТоваров.Номенклатура = СчетФактураВыданныйТовары.Номенклатура
	|			И вт_ТаблицаТоваров.Характеристика = СчетФактураВыданныйТовары.Характеристика
	|			И вт_ТаблицаТоваров.Серия = СчетФактураВыданныйТовары.Серия
	|			И вт_ТаблицаТоваров.НоменклатураНабора = СчетФактураВыданныйТовары.НоменклатураНабора
	|			И вт_ТаблицаТоваров.ХарактеристикаНабора = СчетФактураВыданныйТовары.ХарактеристикаНабора
	|			И вт_ТаблицаТоваров.Содержание = СчетФактураВыданныйТовары.Содержание
	|			И вт_ТаблицаТоваров.ТипЗапасов = СчетФактураВыданныйТовары.ТипЗапасов
	|			И вт_ТаблицаТоваров.КодТНВЭД = СчетФактураВыданныйТовары.КодТНВЭД
	|			И вт_ТаблицаТоваров.НомерГТД = СчетФактураВыданныйТовары.НомерГТД
	|			И вт_ТаблицаТоваров.ЕдиницаИзмерения = СчетФактураВыданныйТовары.ЕдиницаИзмерения
	|			И (СчетФактураВыданныйТовары.Ссылка.Проведен)
	|ГДЕ
	|	СчетФактураВыданныйТовары.Ссылка.МоментВремени < &МоментВремени
	|	И СчетФактураВыданныйТовары.Ссылка <> &Ссылка
	|	И &НДССМежценовойРазницы
	|
	|СГРУППИРОВАТЬ ПО
	|	вт_ТаблицаТоваров.ИсходныйСчетФактура,
	|	вт_ТаблицаТоваров.Номенклатура,
	|	вт_ТаблицаТоваров.Характеристика,
	|	вт_ТаблицаТоваров.Серия,
	|	вт_ТаблицаТоваров.НоменклатураНабора,
	|	вт_ТаблицаТоваров.ХарактеристикаНабора,
	|	вт_ТаблицаТоваров.Содержание,
	|	вт_ТаблицаТоваров.ТипЗапасов,
	|	вт_ТаблицаТоваров.КодТНВЭД,
	|	вт_ТаблицаТоваров.НомерГТД,
	|	вт_ТаблицаТоваров.ЕдиницаИзмерения,
	|	СчетФактураВыданныйТовары.СтавкаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	вт_КрайниеПериоды.ИсходныйСчетФактура КАК ИсходныйСчетФактура,
	|	вт_КрайниеПериоды.Номенклатура КАК Номенклатура,
	|	вт_КрайниеПериоды.Характеристика КАК Характеристика,
	|	вт_КрайниеПериоды.Серия КАК Серия,
	|	вт_КрайниеПериоды.НоменклатураНабора КАК НоменклатураНабора,
	|	вт_КрайниеПериоды.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	вт_КрайниеПериоды.Содержание КАК Содержание,
	|	вт_КрайниеПериоды.ТипЗапасов КАК ТипЗапасов,
	|	вт_КрайниеПериоды.КодТНВЭД КАК КодТНВЭД,
	|	вт_КрайниеПериоды.НомерГТД КАК НомерГТД,
	|	вт_КрайниеПериоды.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	вт_КрайниеПериоды.СтавкаНДС КАК СтавкаНДС,
	|	МАКСИМУМ(СчетФактураВыданныйТовары.Ссылка) КАК ПредыдущийСчетФактура
	|ПОМЕСТИТЬ вт_КрайниеСчетаФактуры
	|ИЗ
	|	вт_КрайниеПериоды КАК вт_КрайниеПериоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.Товары КАК СчетФактураВыданныйТовары
	|		ПО вт_КрайниеПериоды.ИсходныйСчетФактура = СчетФактураВыданныйТовары.ИсходныйСчетФактура
	|			И вт_КрайниеПериоды.Номенклатура = СчетФактураВыданныйТовары.Номенклатура
	|			И вт_КрайниеПериоды.Характеристика = СчетФактураВыданныйТовары.Характеристика
	|			И вт_КрайниеПериоды.Серия = СчетФактураВыданныйТовары.Серия
	|			И вт_КрайниеПериоды.НоменклатураНабора = СчетФактураВыданныйТовары.НоменклатураНабора
	|			И вт_КрайниеПериоды.ХарактеристикаНабора = СчетФактураВыданныйТовары.ХарактеристикаНабора
	|			И вт_КрайниеПериоды.Содержание = СчетФактураВыданныйТовары.Содержание
	|			И вт_КрайниеПериоды.ТипЗапасов = СчетФактураВыданныйТовары.ТипЗапасов
	|			И вт_КрайниеПериоды.КодТНВЭД = СчетФактураВыданныйТовары.КодТНВЭД
	|			И вт_КрайниеПериоды.НомерГТД = СчетФактураВыданныйТовары.НомерГТД
	|			И вт_КрайниеПериоды.ЕдиницаИзмерения = СчетФактураВыданныйТовары.ЕдиницаИзмерения
	|			И вт_КрайниеПериоды.СтавкаНДС = СчетФактураВыданныйТовары.СтавкаНДС
	|			И вт_КрайниеПериоды.ПредыдущийСчетФактураДата = СчетФактураВыданныйТовары.Ссылка.Дата
	|			И (СчетФактураВыданныйТовары.Ссылка.Проведен)
	|
	|СГРУППИРОВАТЬ ПО
	|	вт_КрайниеПериоды.ИсходныйСчетФактура,
	|	вт_КрайниеПериоды.Номенклатура,
	|	вт_КрайниеПериоды.Характеристика,
	|	вт_КрайниеПериоды.Серия,
	|	вт_КрайниеПериоды.НоменклатураНабора,
	|	вт_КрайниеПериоды.ХарактеристикаНабора,
	|	вт_КрайниеПериоды.Содержание,
	|	вт_КрайниеПериоды.ТипЗапасов,
	|	вт_КрайниеПериоды.КодТНВЭД,
	|	вт_КрайниеПериоды.НомерГТД,
	|	вт_КрайниеПериоды.ЕдиницаИзмерения,
	|	вт_КрайниеПериоды.СтавкаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	вт_ТаблицаТоваров.ДокументРеализации КАК ДокументРеализации,
	|	вт_ТаблицаТоваров.ИсходныйСчетФактура КАК ИсходныйСчетФактура,
	|	ЕСТЬNULL(вт_КрайниеСчетаФактуры.ПредыдущийСчетФактура, вт_ТаблицаТоваров.ИсходныйСчетФактура) КАК ПредыдущийСчетФактура,
	|	ЕСТЬNULL(вт_КрайниеСчетаФактуры.ПредыдущийСчетФактура.Корректировочный, ЛОЖЬ) КАК Корректировочный,
	|	ЕСТЬNULL(вт_КрайниеСчетаФактуры.ПредыдущийСчетФактура.Исправление, ЛОЖЬ) КАК Исправление,
	|	вт_ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	вт_ТаблицаТоваров.Характеристика КАК Характеристика,
	|	вт_ТаблицаТоваров.Серия КАК Серия,
	|	вт_ТаблицаТоваров.НоменклатураНабора КАК НоменклатураНабора,
	|	вт_ТаблицаТоваров.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	вт_ТаблицаТоваров.Содержание КАК Содержание,
	|	вт_ТаблицаТоваров.ТипЗапасов КАК ТипЗапасов,
	|	вт_ТаблицаТоваров.КодТНВЭД КАК КодТНВЭД,
	|	вт_ТаблицаТоваров.НомерГТД КАК НомерГТД,
	|	вт_ТаблицаТоваров.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	вт_ТаблицаТоваров.СтавкаНДС КАК СтавкаНДС
	|ПОМЕСТИТЬ вт_ТаблицаТоваровПредварительная
	|ИЗ
	|	вт_ТаблицаТоваровДокументовОснований КАК вт_ТаблицаТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_КрайниеСчетаФактуры КАК вт_КрайниеСчетаФактуры
	|		ПО вт_ТаблицаТоваров.ИсходныйСчетФактура = вт_КрайниеСчетаФактуры.ИсходныйСчетФактура
	|			И вт_ТаблицаТоваров.Номенклатура = вт_КрайниеСчетаФактуры.Номенклатура
	|			И вт_ТаблицаТоваров.Характеристика = вт_КрайниеСчетаФактуры.Характеристика
	|			И вт_ТаблицаТоваров.Серия = вт_КрайниеСчетаФактуры.Серия
	|			И вт_ТаблицаТоваров.НоменклатураНабора = вт_КрайниеСчетаФактуры.НоменклатураНабора
	|			И вт_ТаблицаТоваров.ХарактеристикаНабора = вт_КрайниеСчетаФактуры.ХарактеристикаНабора
	|			И вт_ТаблицаТоваров.Содержание = вт_КрайниеСчетаФактуры.Содержание
	|			И вт_ТаблицаТоваров.ТипЗапасов = вт_КрайниеСчетаФактуры.ТипЗапасов
	|			И вт_ТаблицаТоваров.КодТНВЭД = вт_КрайниеСчетаФактуры.КодТНВЭД
	|			И вт_ТаблицаТоваров.НомерГТД = вт_КрайниеСчетаФактуры.НомерГТД
	|			И вт_ТаблицаТоваров.ЕдиницаИзмерения = вт_КрайниеСчетаФактуры.ЕдиницаИзмерения
	|			И вт_ТаблицаТоваров.СтавкаНДС = вт_КрайниеСчетаФактуры.СтавкаНДС
	|
	|ГДЕ
	|	НЕ &НДССМежценовойРазницы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	вт_ТаблицаТоваров.ДокументРеализации КАК ДокументРеализации,
	|	вт_ТаблицаТоваров.ИсходныйСчетФактура КАК ИсходныйСчетФактура,
	|	ЕСТЬNULL(вт_КрайниеСчетаФактуры.ПредыдущийСчетФактура, вт_ТаблицаТоваров.ИсходныйСчетФактура) КАК ПредыдущийСчетФактура,
	|	ЕСТЬNULL(вт_КрайниеСчетаФактуры.ПредыдущийСчетФактура.Корректировочный, ЛОЖЬ) КАК Корректировочный,
	|	ЕСТЬNULL(вт_КрайниеСчетаФактуры.ПредыдущийСчетФактура.Исправление, ЛОЖЬ) КАК Исправление,
	|	вт_ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	вт_ТаблицаТоваров.Характеристика КАК Характеристика,
	|	вт_ТаблицаТоваров.Серия КАК Серия,
	|	вт_ТаблицаТоваров.НоменклатураНабора КАК НоменклатураНабора,
	|	вт_ТаблицаТоваров.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	вт_ТаблицаТоваров.Содержание КАК Содержание,
	|	вт_ТаблицаТоваров.ТипЗапасов КАК ТипЗапасов,
	|	вт_ТаблицаТоваров.КодТНВЭД КАК КодТНВЭД,
	|	вт_ТаблицаТоваров.НомерГТД КАК НомерГТД,
	|	вт_ТаблицаТоваров.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	вт_КрайниеСчетаФактуры.СтавкаНДС КАК СтавкаНДС
	|ИЗ
	|	вт_ТаблицаТоваровДокументовОснований КАК вт_ТаблицаТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_КрайниеСчетаФактуры КАК вт_КрайниеСчетаФактуры
	|		ПО вт_ТаблицаТоваров.ИсходныйСчетФактура = вт_КрайниеСчетаФактуры.ИсходныйСчетФактура
	|			И вт_ТаблицаТоваров.Номенклатура = вт_КрайниеСчетаФактуры.Номенклатура
	|			И вт_ТаблицаТоваров.Характеристика = вт_КрайниеСчетаФактуры.Характеристика
	|			И вт_ТаблицаТоваров.Серия = вт_КрайниеСчетаФактуры.Серия
	|			И вт_ТаблицаТоваров.НоменклатураНабора = вт_КрайниеСчетаФактуры.НоменклатураНабора
	|			И вт_ТаблицаТоваров.ХарактеристикаНабора = вт_КрайниеСчетаФактуры.ХарактеристикаНабора
	|			И вт_ТаблицаТоваров.Содержание = вт_КрайниеСчетаФактуры.Содержание
	|			И вт_ТаблицаТоваров.ТипЗапасов = вт_КрайниеСчетаФактуры.ТипЗапасов
	|			И вт_ТаблицаТоваров.КодТНВЭД = вт_КрайниеСчетаФактуры.КодТНВЭД
	|			И вт_ТаблицаТоваров.НомерГТД = вт_КрайниеСчетаФактуры.НомерГТД
	|			И вт_ТаблицаТоваров.ЕдиницаИзмерения = вт_КрайниеСчетаФактуры.ЕдиницаИзмерения
	|
	|ГДЕ
	|	&НДССМежценовойРазницы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫБОР
	|		КОГДА вт_ТаблицаТоваровПредварительная.ПредыдущийСчетФактура.Исправление
	|			ТОГДА вт_ТаблицаТоваровПредварительная.ПредыдущийСчетФактура.СчетФактураОснование
	|		ИНАЧЕ вт_ТаблицаТоваровПредварительная.ПредыдущийСчетФактура
	|	КОНЕЦ КАК СчетФактура,
	|	ВЫБОР
	|		КОГДА вт_ТаблицаТоваровПредварительная.ПредыдущийСчетФактура.Исправление
	|			ТОГДА вт_ТаблицаТоваровПредварительная.ПредыдущийСчетФактура.СчетФактураОснование.Корректировочный
	|		ИНАЧЕ вт_ТаблицаТоваровПредварительная.ПредыдущийСчетФактура.Корректировочный
	|	КОНЕЦ КАК Корректировочный
	|ИЗ
	|	вт_ТаблицаТоваровПредварительная КАК вт_ТаблицаТоваровПредварительная
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_ТаблицаТоваровПредварительная.ПредыдущийСчетФактура КАК СчетФактура,
	|	вт_ТаблицаТоваровПредварительная.ПредыдущийСчетФактура.Корректировочный КАК Корректировочный,
	|	вт_ТаблицаТоваровПредварительная.ПредыдущийСчетФактура.Исправление КАК Исправление,
	|	МИНИМУМ(ЕСТЬNULL(ДокументыОснования.ДокументОснование = вт_ТорговыеДокументыОснования.ДокументОснование
	|		И НЕ ДокументыОснования.ДокументОснование ССЫЛКА Документ.ОтчетКомитентуОЗакупках, ЛОЖЬ)) КАК ИсправлениеНаОснованииСФ
	|ИЗ
	|	вт_ТаблицаТоваровПредварительная КАК вт_ТаблицаТоваровПредварительная
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК ДокументыОснования
	|		ПО ДокументыОснования.Ссылка = вт_ТаблицаТоваровПредварительная.ПредыдущийСчетФактура
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ТорговыеДокументыОснования КАК вт_ТорговыеДокументыОснования
	|		ПО ДокументыОснования.ДокументОснование = вт_ТорговыеДокументыОснования.ДокументОснование
	|СГРУППИРОВАТЬ ПО
	|	вт_ТаблицаТоваровПредварительная.ПредыдущийСчетФактура
	|УПОРЯДОЧИТЬ ПО
	|	вт_ТаблицаТоваровПредварительная.ПредыдущийСчетФактура УБЫВ
	|АВТОУПОРЯДОЧИВАНИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	вт_ТаблицаТоваровПредварительная.ДокументРеализации КАК ДокументРеализации
	|ИЗ
	|	вт_ТаблицаТоваровПредварительная КАК вт_ТаблицаТоваровПредварительная
	|ГДЕ
	|	НЕ вт_ТаблицаТоваровПредварительная.Корректировочный
	|	И НЕ вт_ТаблицаТоваровПредварительная.Исправление
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументыОснования.ДокументОснование КАК ДокументРеализации
	|ИЗ
	|	вт_ТаблицаТоваровПредварительная КАК вт_ТаблицаТоваровПредварительная
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК ДокументыОснования
	|		ПО ДокументыОснования.Ссылка = вт_ТаблицаТоваровПредварительная.ПредыдущийСчетФактура
	|ГДЕ
	|	НЕ вт_ТаблицаТоваровПредварительная.Корректировочный
	|	И НЕ вт_ТаблицаТоваровПредварительная.Исправление
	|	И НЕ &РеализацияЧерезКомиссионера
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ вт_КрайниеПериоды
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ вт_КрайниеСчетаФактуры
	|";
	
	Запрос.УстановитьПараметр("МоментВремени", ПараметрыЗаполнения.МоментВремени);
	Запрос.УстановитьПараметр("Ссылка", ПараметрыЗаполнения.МоментВремени.Ссылка);
	Запрос.УстановитьПараметр("РеализацияЧерезКомиссионера", РеализацияЧерезКомиссионера);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ТаблицаСчетаФактурыОснования = МассивРезультатов[4].Выгрузить();
	#Вставка
	// ++ Галфинд_Домнышева 2023/04/10
	// e1cib/data/Задача.ЗадачаИсполнителя?ref=8131bcee7bda45d711edd1f8febddfd6
	// так как запрос будет пустой при формировании на осн КорректировкаРеализации (отсутствуют движения при гф_возвратWMN)
	// ниже берем вручную документ-основание -Реализацию и находим строки по нему.

	// vvv Галфинд \ Sakovich 03.05.2023
	//Если ТипЗнч(ТаблицаТорговыхДокументов[0].ДокументОснование) <> Тип("ДокументСсылка.КорректировкаРеализации")
	//	И НЕ ТаблицаТорговыхДокументов[0].ДокументОснование.гф_возвратWMN Тогда
	Если ТипЗнч(ТаблицаТорговыхДокументов[0].ДокументОснование) <> Тип("ДокументСсылка.КорректировкаРеализации")
		Или Не(ТипЗнч(ТаблицаТорговыхДокументов[0].ДокументОснование) = Тип("ДокументСсылка.КорректировкаРеализации")
		И ТаблицаТорговыхДокументов[0].ДокументОснование.гф_возвратWMN) Тогда
	// ^^^ Галфинд \ Sakovich 03.05.2023
		
	// -- Галфинд_Домнышева 2023/04/10
	#КонецВставки
	Если ТаблицаСчетаФактурыОснования.Количество() = 0 Тогда
		Возврат Результат;
	КонецЕсли;
	#Вставка
	// ++ Галфинд_Домнышева 2023/04/10
	КонецЕсли;
	// -- Галфинд_Домнышева 2023/04/10
	#КонецВставки
	
	Если ЭтоИсправление И ТаблицаСчетаФактурыОснования.Количество() > 1 Тогда
		ТекстСообщения = НСтр("ru = 'По выбранным документам-основаниям необходимо выставить несколько исправленных счетов-фактур.';
								|en = 'Several adjusted tax invoices must be drawn by selected base documents.'") + Символы.ПС 
			+ НСтр("ru = 'Необходимо зарегистрировать по документам-основаниям отдельные счета-фактуры.';
					|en = 'Separate tax invoices must be registered by base documents.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	ТаблицаПредыдущиеСчетаФактуры = МассивРезультатов[5].Выгрузить();
	Если ЭтоПеревыставление Тогда
		ДокументыРеализации = Новый Массив;
	#Вставка
	// ++ Галфинд_Домнышева 2023/04/10
    // e1cib/data/Задача.ЗадачаИсполнителя?ref=8131bcee7bda45d711edd1f8febddfd6
	ИначеЕсли ТипЗнч(ТаблицаТорговыхДокументов[0].ДокументОснование) = Тип("ДокументСсылка.КорректировкаРеализации") 
			И ТаблицаТорговыхДокументов[0].ДокументОснование.гф_возвратWMN Тогда  
			ДокументыРеализации = Новый Массив;
			ДокументыРеализации.Добавить(ТаблицаТорговыхДокументов[0].ДокументОснование.ДокументОснование);
	// -- Галфинд_Домнышева 2023/04/10
	#КонецВставки	
	Иначе
		ДокументыРеализации = МассивРезультатов[6].Выгрузить().ВыгрузитьКолонку("ДокументРеализации");
	КонецЕсли;
	
	ЭтоИсправлениеНаОснованииСФ = Ложь;
	
	Если ЭтоИсправление И ТаблицаПредыдущиеСчетаФактуры.Количество() > 0 Тогда
		// Для исправления берем данные о товарах последнего исправления или исходного счета-фактуры.
		ДанныеПредыдущегоСчетаФактуры = ТаблицаПредыдущиеСчетаФактуры[0];
		ПредыдущиеСчетаФактуры = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ДанныеПредыдущегоСчетаФактуры.СчетФактура);
		
		// Если предыдущий счет-фактура - исправление или корректировка, то все товары есть в нем самом,
		// поэтому данные о товарах исходного торгового документа получать не нужно.
		Если ДанныеПредыдущегоСчетаФактуры.Корректировочный Или ДанныеПредыдущегоСчетаФактуры.Исправление Тогда
			ДокументыРеализации = Новый Массив;
		КонецЕсли;
		// Отслеживаем случай, когда исправленный счет-фактура создается по счету-фактуре, а не по корректировке.
		// В этом случае таблица товаров измениться не может и нужно просто скопировать таблицу предыдущего счета-фактуры
		Если ДанныеПредыдущегоСчетаФактуры.ИсправлениеНаОснованииСФ Тогда
			ЭтоИсправлениеНаОснованииСФ = Истина;
		КонецЕсли;
	Иначе
		// Для корректировки берем данные о товарах из каждой найденной предыдущей счет-фактуры.
		ПредыдущиеСчетаФактуры = ТаблицаПредыдущиеСчетаФактуры.ВыгрузитьКолонку("СчетФактура");
	КонецЕсли;
	
	// Формируем вспомогательные временные таблицы для дальнейшего заполнения.
	
	ДополнительныеПараметры.Вставить("ЭтоКорректировочный", Результат.Корректировочный);
	ДополнительныеПараметры.Вставить("ЭтоИсправление", ЭтоИсправление);
	ДополнительныеПараметры.Вставить("ЭтоИсправлениеНаОснованииСФ", ЭтоИсправлениеНаОснованииСФ);
	ПоместитьТаблицуТоваровТорговыхДокументов(ДокументыРеализации, МенеджерВременныхТаблиц, "вт_ТаблицаТоваровИсходныхТорговыхДокументов", ДополнительныеПараметры);
	ПоместитьТаблицуТоваровСчетовФактур(ПредыдущиеСчетаФактуры, МенеджерВременныхТаблиц, "вт_ТаблицаТоваровПредыдущихСчетовФактур", ДополнительныеПараметры);
	СвернутьТаблицуТоваровТорговыхДокументов(МенеджерВременныхТаблиц, ДополнительныеПараметры);
	
	Если ЭтоИсправление Тогда
		Результат.СчетФактураОснование = ТаблицаСчетаФактурыОснования[0].СчетФактура;
		Результат.Корректировочный = ТаблицаСчетаФактурыОснования[0].Корректировочный; // Меняем признак корректировочный, если изменили счет-фактуру основание
		
		Результат.Товары = ТаблицаТоваровИсправление(МенеджерВременныхТаблиц, ДополнительныеПараметры);
		Если Результат.Корректировочный <> NULL И Не Результат.Корректировочный Тогда
			Результат.Вставить("ТаблицаТоваровДокументовОснований",ТаблицаТоваровДокументовОснований(МенеджерВременныхТаблиц));
		КонецЕсли;
	Иначе
		Результат.Товары = ТаблицаТоваровКорректировка(МенеджерВременныхТаблиц, ДополнительныеПараметры);
	КонецЕсли;
	
	Если НДССМежценовойРазницы Тогда
		РассчитатьМежценовуюРазницу(Результат.Товары, ПараметрыЗаполнения);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&ИзменениеИКонтроль("ПоместитьТаблицуТоваровТорговыхДокументов")
Процедура гф_ПоместитьТаблицуТоваровТорговыхДокументов(МассивТорговыхДокументов, МенеджерВременныхТаблиц, ИмяВременнойТаблицы, ДополнительныеПараметры)
	
	ТаблицаТоваров = Документы.СчетФактураВыданный.ПустаяСсылка().Товары.ВыгрузитьКолонки();
	ТаблицаТоваров.Колонки.Добавить("ДокументРеализации", Документы.ТипВсеСсылки());
	ТаблицаТоваров.Колонки.Добавить("Валюта", Новый ОписаниеТипов("СправочникСсылка.Валюты"));
	ТаблицаТоваров.Колонки.Добавить("СуммаРегл", Новый ОписаниеТипов("Число"));
	ТаблицаТоваров.Колонки.Добавить("СуммаНДСРегл", Новый ОписаниеТипов("Число"));
	
	Если ДополнительныеПараметры.ЭтоПеревыставление Тогда
		ИмяТаблицыСФ = "ЗаполнениеТоваровСФВыданныйПеревыставление";
	Иначе
		ИмяТаблицыСФ = "ЗаполнениеТоваровСФВыданный";
	КонецЕсли;
	Для Каждого Основание Из МассивТорговыхДокументов Цикл
		Если Не ЗначениеЗаполнено(Основание) Тогда
			Продолжить;
		ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ПервичныйДокумент") Тогда
			
			// ТЧ первичного документа берем из строк "до корректировки" текущего документа-основания
			Если ТипЗнч(ДополнительныеПараметры.ДокументОснование) = Тип("ДокументСсылка.КорректировкаРеализации") Тогда
				
				ДанныеКорректировки = Документы.КорректировкаРеализации.ДанныеКорректировкиДоВводаОстатков(ДополнительныеПараметры.ДокументОснование);
				
				РеквизитыПервичногоДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Основание, "Организация,Валюта,СуммаДокумента,СуммаРегл");
				ВалютаРегламентированногоУчета = ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(
													РеквизитыПервичногоДокумента.Организация);
				
				Запрос = Новый Запрос();
				Запрос.УстановитьПараметр("ДанныеКорректировки", ДанныеКорректировки);
				Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", ВалютаРегламентированногоУчета);
				Запрос.УстановитьПараметр("ПервичныйДокумент", Основание);
				Запрос.УстановитьПараметр("ВыводитьБазовыеЕдиницыИзмерения", Константы.ВыводитьБазовыеЕдиницыИзмерения.Получить());
				Запрос.УстановитьПараметр("ТипыНоменклатурыТовар", УчетНДСУПСлужебный.ТипыНоменклатурыТовар());
				Запрос.Текст = 
				"ВЫБРАТЬ
				|	ВЫРАЗИТЬ(&ПервичныйДокумент КАК Документ.ПервичныйДокумент) КАК ДокументРеализации,
				|	ДанныеКорректировки.СтавкаНДС      КАК СтавкаНДС,
				|	ДанныеКорректировки.СуммаСНДС      КАК Сумма,
				|	ДанныеКорректировки.СуммаНДС       КАК СуммаНДС,
				|	ДанныеКорректировки.Количество     КАК Количество,
				|	ДанныеКорректировки.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
				|	ДанныеКорректировки.Упаковка       КАК Упаковка,
				|	ДанныеКорректировки.Характеристика КАК Характеристика,
				|	ДанныеКорректировки.НоменклатураНабора КАК НоменклатураНабора,
				|	ДанныеКорректировки.ХарактеристикаНабора КАК ХарактеристикаНабора,
				|	ДанныеКорректировки.Серия          КАК Серия,
				|	ДанныеКорректировки.Содержание     КАК Содержание,
				|	ДанныеКорректировки.КодТНВЭД       КАК КодТНВЭД,
				|	ДанныеКорректировки.НомерГТД       КАК НомерГТД,
				|	ДанныеКорректировки.НоменклатураПартнера КАК НоменклатураПартнера,
				|	ВЫРАЗИТЬ(ДанныеКорректировки.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура
				|ПОМЕСТИТЬ вт_ПервичногоДокумента
				|ИЗ
				|	&ДанныеКорректировки КАК ДанныеКорректировки
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	вт_ПервичногоДокумента.ДокументРеализации КАК ДокументРеализации,
				|	вт_ПервичногоДокумента.ДокументРеализации.Организация КАК Организация,
				|	вт_ПервичногоДокумента.ДокументРеализации.Валюта КАК Валюта,
				|	вт_ПервичногоДокумента.СтавкаНДС      КАК СтавкаНДС,
				|	вт_ПервичногоДокумента.Сумма          КАК Сумма,
				|	вт_ПервичногоДокумента.СуммаНДС       КАК СуммаНДС,
				|	ВЫБОР КОГДА вт_ПервичногоДокумента.ДокументРеализации.Валюта = &ВалютаРегламентированногоУчета 
				|		ИЛИ вт_ПервичногоДокумента.ДокументРеализации.СуммаДокумента = 0 ТОГДА
				|		вт_ПервичногоДокумента.Сумма
				|	ИНАЧЕ 
				|		вт_ПервичногоДокумента.Сумма * 
				|			вт_ПервичногоДокумента.ДокументРеализации.СуммаРегл / вт_ПервичногоДокумента.ДокументРеализации.СуммаДокумента
				|	КОНЕЦ КАК СуммаРегл,
				|	ВЫБОР КОГДА вт_ПервичногоДокумента.ДокументРеализации.Валюта = &ВалютаРегламентированногоУчета 
				|		ИЛИ вт_ПервичногоДокумента.ДокументРеализации.СуммаДокумента = 0 ТОГДА
				|		вт_ПервичногоДокумента.СуммаНДС
				|	ИНАЧЕ 
				|		вт_ПервичногоДокумента.СуммаНДС * 
				|			вт_ПервичногоДокумента.ДокументРеализации.СуммаРегл / вт_ПервичногоДокумента.ДокументРеализации.СуммаДокумента
				|	КОНЕЦ КАК СуммаНДСРегл,
				|	ВЫБОР
				|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
				|			ТОГДА вт_ПервичногоДокумента.Номенклатура.ЕдиницаИзмерения
				|		ИНАЧЕ &ТекстЗапросаЕдиницаИзмерения
				|	КОНЕЦ КАК ЕдиницаИзмерения,
				|	вт_ПервичногоДокумента.Номенклатура КАК Номенклатура,
				|	вт_ПервичногоДокумента.Характеристика КАК Характеристика,
				|	вт_ПервичногоДокумента.НоменклатураНабора КАК НоменклатураНабора,
				|	вт_ПервичногоДокумента.ХарактеристикаНабора КАК ХарактеристикаНабора,
				|	вт_ПервичногоДокумента.Содержание КАК Содержание,
				|	вт_ПервичногоДокумента.КодТНВЭД КАК КодТНВЭД,
				|	вт_ПервичногоДокумента.НомерГТД КАК НомерГТД,
				|	вт_ПервичногоДокумента.Количество КАК Количество,
				|	вт_ПервичногоДокумента.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
				|	вт_ПервичногоДокумента.Серия КАК Серия,
				|	вт_ПервичногоДокумента.НоменклатураПартнера КАК НоменклатураПартнера,
				|	ВЫБОР
				|		КОГДА СпрНоменклатура.ТипНоменклатуры ЕСТЬ NULL
				|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка)
				|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
				|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
				|		КОГДА (ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = НЕОПРЕДЕЛЕНО
				|				ИЛИ ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = вт_ПервичногоДокумента.ДокументРеализации.Организация) ТОГДА
				|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
				|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.АгентскаяУслуга)
				|	КОНЕЦ КАК ТипЗапасов,
				|	СФ.Ссылка КАК ИсходныйСчетФактура,
				|	0 КАК НомерСтрокиПриПечати,
				|	НЕОПРЕДЕЛЕНО КАК СчетФактураПолученныйОтПродавца
				|ИЗ
				|	вт_ПервичногоДокумента КАК вт_ПервичногоДокумента
				|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК СФ
				|		ПО вт_ПервичногоДокумента.ДокументРеализации = СФ.ДокументОснование
				|			И (СФ.Ссылка.Проведен)
				|			И (СФ.НомерСтроки = 1)
				|	ЛЕВОЕ СОЕДИНЕНИЕ
				|		Справочник.Номенклатура КАК СпрНоменклатура
				|	ПО
				|		вт_ПервичногоДокумента.Номенклатура = СпрНоменклатура.Ссылка
				|
				|	ЛЕВОЕ СОЕДИНЕНИЕ
				|		Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
				|	ПО
				|		вт_ПервичногоДокумента.Характеристика = ХарактеристикиНоменклатуры.Ссылка
				|";
				
				Запрос.Текст = СтрЗаменить(
					Запрос.Текст,
					"&ТекстЗапросаЕдиницаИзмерения",
					Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
						"Ссылка",
						"вт_ПервичногоДокумента.Упаковка",
						"вт_ПервичногоДокумента.Номенклатура"));
				ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Запрос.Выполнить().Выгрузить(), ТаблицаТоваров);
			КонецЕсли;
			
		Иначе
			
		#Вставка
		// ++ Галфинд_Домнышева 2023/04/10
		// e1cib/data/Задача.ЗадачаИсполнителя?ref=8131bcee7bda45d711edd1f8febddfd6
		Если ТипЗнч(Основание) = Тип("ДокументСсылка.КорректировкаРеализации") 
			И Основание.гф_возвратWMN Тогда
			Продолжить;
		КонецЕсли;
		// -- Галфинд_Домнышева 2023/04/10
		#КонецВставки
			// При эмулировании механизма проведения документа для заполнения таблицы товаров необходимо устанавливать привилегированный режим.
			
			УстановитьПривилегированныйРежим(Истина);
			ТаблицыДляДвижений = ПроведениеДокументов.ДанныеДокументаДляПроведения(Основание, ИмяТаблицыСФ);
			УстановитьПривилегированныйРежим(Ложь);
			
			Если ТаблицыДляДвижений.Свойство("Таблица" + ИмяТаблицыСФ) Тогда
				ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТаблицыДляДвижений["Таблица" + ИмяТаблицыСФ], ТаблицаТоваров);
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаТоваров.ИсходныйСчетФактура КАК ИсходныйСчетФактура,
	|	ТаблицаТоваров.НомерСтрокиПриПечати КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика КАК Характеристика,
	|	ТаблицаТоваров.Серия КАК Серия,
	|	ТаблицаТоваров.НоменклатураНабора КАК НоменклатураНабора,
	|	ТаблицаТоваров.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	ТаблицаТоваров.Содержание КАК Содержание,
	|	ТаблицаТоваров.ТипЗапасов КАК ТипЗапасов,
	|	ТаблицаТоваров.КодТНВЭД КАК КодТНВЭД,
	|	ТаблицаТоваров.НомерГТД КАК НомерГТД,
	|	ТаблицаТоваров.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаТоваров.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаТоваров.НомерСтрокиПриПечати КАК НомерСтрокиПриПечати,
	|	ТаблицаТоваров.НоменклатураПартнера КАК НоменклатураПартнера,	
	|
	|	ТаблицаТоваров.Количество КАК Количество,
	|	ТаблицаТоваров.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = ТаблицаТоваров.Валюта
	|			ТОГДА ТаблицаТоваров.Сумма
	|		ИНАЧЕ ТаблицаТоваров.СуммаРегл
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = ТаблицаТоваров.Валюта
	|			ТОГДА ТаблицаТоваров.СуммаНДС
	|		ИНАЧЕ ТаблицаТоваров.СуммаНДСРегл
	|	КОНЕЦ КАК СуммаНДС,
	|	ТаблицаТоваров.СчетФактураПолученныйОтПродавца,
	|	ТаблицаТоваров.ДокументРеализации
	|//ПОМЕСТИТЬ
	|ИЗ
	|	&ТаблицаТоваров КАК ТаблицаТоваров
	|//УСЛОВИЕ";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "//ПОМЕСТИТЬ", "ПОМЕСТИТЬ " + ИмяВременнойТаблицы);
	
	Если ДополнительныеПараметры.ЭтоПеревыставление Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "//УСЛОВИЕ","
		|ГДЕ
		|	ТаблицаТоваров.СчетФактураПолученныйОтПродавца В (&СчетаФактурыПолученные)");
		Запрос.УстановитьПараметр("СчетаФактурыПолученные", ДополнительныеПараметры.СчетаФактурыПолученные);
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(Запрос.Параметры, ДополнительныеПараметры, Истина);
	
	// упорядочиваем как это происходит при печати
	ТаблицаТоваров.Сортировать("ИсходныйСчетФактура,ДокументРеализации,НомерСтроки");
	
	// определяем номера строк исходного СФ 
	ГруппировкиПечати = ГруппировкиПечатиСчетаФактуры();
	ГруппировкиПечати = ГруппировкиПечати + ",ИсходныйСчетФактура";
	ИсходныеСФ = ТаблицаТоваров.ВыгрузитьКолонку("ИсходныйСчетФактура");
	ИсходныеСФ = ОбщегоНазначенияУТ.УдалитьПовторяющиесяЭлементыМассива(ИсходныеСФ);
	
	Если ДополнительныеПараметры.РеализацияЧерезКомиссионера Тогда
		ГруппировкиПечати = ГруппировкиПечати + ",ДокументРеализации";
	КонецЕсли;
	
	Для Каждого ИсходныйСФ Из ИсходныеСФ Цикл
		
		ТЧСвернуто = ТаблицаТоваров.Скопировать(Новый Структура("ИсходныйСчетФактура",ИсходныйСФ),ГруппировкиПечати);
		ТЧСвернуто.Свернуть(ГруппировкиПечати);
		
		Для Каждого СтрокаПечати Из ТЧСвернуто Цикл
			СтруктураОтбора = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(СтрокаПечати);
			СтрокиТоваров = ТаблицаТоваров.НайтиСтроки(СтруктураОтбора);
			Для Каждого СтрокаТоваров Из СтрокиТоваров Цикл
				СтрокаТоваров.НомерСтрокиПриПечати = ТЧСвернуто.Индекс(СтрокаПечати)+1;
			КонецЦикла;
		КонецЦикла;
		
	КонецЦикла;
	
	Запрос.УстановитьПараметр("ТаблицаТоваров", ТаблицаТоваров);
	Запрос.Выполнить();
	
	ВыводитьСерии = Константы.ВыводитьСерииВПечатныхФормах.Получить();
	Если Не ВыводитьСерии Тогда
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаТоваров.ИсходныйСчетФактура КАК ИсходныйСчетФактура,
		|	ТаблицаТоваров.НомерСтрокиПриПечати КАК НомерСтроки,
		|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
		|	ТаблицаТоваров.Характеристика КАК Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
		|	ТаблицаТоваров.НоменклатураНабора КАК НоменклатураНабора,
		|	ТаблицаТоваров.ХарактеристикаНабора КАК ХарактеристикаНабора,
		|	ТаблицаТоваров.Содержание КАК Содержание,
		|	ТаблицаТоваров.ТипЗапасов КАК ТипЗапасов,
		|	ТаблицаТоваров.КодТНВЭД КАК КодТНВЭД,
		|	ТаблицаТоваров.НомерГТД КАК НомерГТД,
		|	ТаблицаТоваров.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ТаблицаТоваров.СтавкаНДС КАК СтавкаНДС,
		|	ТаблицаТоваров.НомерСтрокиПриПечати КАК НомерСтрокиПриПечати,
		|	ТаблицаТоваров.НоменклатураПартнера КАК НоменклатураПартнера,
		|
		|	ТаблицаТоваров.Количество КАК Количество,
		|	ТаблицаТоваров.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
		|	ТаблицаТоваров.Сумма КАК Сумма,
		|	ТаблицаТоваров.СуммаНДС КАК СуммаНДС,
		|	ТаблицаТоваров.СчетФактураПолученныйОтПродавца КАК СчетФактураПолученныйОтПродавца,
		|	ТаблицаТоваров.ДокументРеализации КАК ДокументРеализации
		|//ПОМЕСТИТЬБЕЗГРУППИРОВКИ
		|ИЗ
		|	&ТаблицаТоваров КАК ТаблицаТоваров
		|//УНИЧТОЖИТЬ
		|;
		|
		|//////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаТоваров.ИсходныйСчетФактура КАК ИсходныйСчетФактура,
		|	ТаблицаТоваров.НомерСтрокиПриПечати КАК НомерСтроки,
		|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
		|	ТаблицаТоваров.Характеристика КАК Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
		|	ТаблицаТоваров.НоменклатураНабора КАК НоменклатураНабора,
		|	ТаблицаТоваров.ХарактеристикаНабора КАК ХарактеристикаНабора,
		|	ТаблицаТоваров.Содержание КАК Содержание,
		|	ТаблицаТоваров.ТипЗапасов КАК ТипЗапасов,
		|	ТаблицаТоваров.КодТНВЭД КАК КодТНВЭД,
		|	ТаблицаТоваров.НомерГТД КАК НомерГТД,
		|	ТаблицаТоваров.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ТаблицаТоваров.СтавкаНДС КАК СтавкаНДС,
		|	ТаблицаТоваров.НомерСтрокиПриПечати КАК НомерСтрокиПриПечати,
		|	ТаблицаТоваров.НоменклатураПартнера КАК НоменклатураПартнера,
		|
		|	СУММА(ТаблицаТоваров.Количество) КАК Количество,
		|	СУММА(ТаблицаТоваров.КоличествоПоРНПТ) КАК КоличествоПоРНПТ,
		|	СУММА(ТаблицаТоваров.Сумма) КАК Сумма,
		|	СУММА(ТаблицаТоваров.СуммаНДС) КАК СуммаНДС,
		|	ТаблицаТоваров.СчетФактураПолученныйОтПродавца КАК СчетФактураПолученныйОтПродавца,
		|	ТаблицаТоваров.ДокументРеализации КАК ДокументРеализации
		|//ПОМЕСТИТЬ
		|ИЗ
		|	&ТаблицаТоваровБезГруппировки КАК ТаблицаТоваров
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаТоваров.ИсходныйСчетФактура,
		|	ТаблицаТоваров.НомерСтрокиПриПечати,
		|	ТаблицаТоваров.Номенклатура,
		|	ТаблицаТоваров.Характеристика,
		|	ТаблицаТоваров.НоменклатураНабора,
		|	ТаблицаТоваров.ХарактеристикаНабора,
		|	ТаблицаТоваров.Содержание,
		|	ТаблицаТоваров.ТипЗапасов,
		|	ТаблицаТоваров.КодТНВЭД,
		|	ТаблицаТоваров.НомерГТД,
		|	ТаблицаТоваров.ЕдиницаИзмерения,
		|	ТаблицаТоваров.СтавкаНДС,
		|	ТаблицаТоваров.НомерСтрокиПриПечати,
		|	ТаблицаТоваров.НоменклатураПартнера,
		|	ТаблицаТоваров.СчетФактураПолученныйОтПродавца,
		|	ТаблицаТоваров.ДокументРеализации
		|//УНИЧТОЖИТЬБЕЗГРУППИРОВКИ
		|";
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "//ПОМЕСТИТЬБЕЗГРУППИРОВКИ", "ПОМЕСТИТЬ " + ИмяВременнойТаблицы + "БезГруппировки");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "//ПОМЕСТИТЬ", "ПОМЕСТИТЬ " + ИмяВременнойТаблицы);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТаблицаТоваров", ИмяВременнойТаблицы);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТаблицаТоваровБезГруппировки", ИмяВременнойТаблицы + "БезГруппировки");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "//УНИЧТОЖИТЬ", ";
		|
		|//////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ " + ИмяВременнойТаблицы);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "//УНИЧТОЖИТЬ", ";
		|
		|//////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ " + ИмяВременнойТаблицы + "БезГруппировки");
		
		Запрос.Выполнить();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецЕсли