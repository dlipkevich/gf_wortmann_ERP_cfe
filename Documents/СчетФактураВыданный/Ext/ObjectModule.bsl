
&После("ЗаполнитьПоДокументуОснованию")
Процедура гф_ЗаполнитьПоДокументуОснованию(ДанныеЗаполнения)
	// ++ Галфинд_Домнышева 2023/04/10
	// e1cib/data/Задача.ЗадачаИсполнителя?ref=8131bcee7bda45d711edd1f8febddfd6
	// При формировании на осн КорректировкаРеализации (отсутствуют движения при гф_возвратWMN)
	// рквизиты КППКонтрагента и ИННКонтрагента не заполнены - заполняем их.
	Если ЗначениеЗаполнено(ДанныеЗаполнения.Контрагент) И
		(Не ДанныеЗаполнения.Свойство("ИННКонтрагента") ИЛИ Не ДанныеЗаполнения.Свойство("КППКонтрагента")) Тогда
		ДанныеЗаполнения.Вставить("КППКонтрагента", ДанныеЗаполнения.Контрагент.КПП);
		ДанныеЗаполнения.Вставить("ИННКонтрагента", ДанныеЗаполнения.Контрагент.ИНН);
	КонецЕсли;
    // -- Галфинд_Домнышева 2023/04/10
КонецПроцедуры

&После("ПриЗаписи")
Процедура гф_ПриЗаписи(Отказ)
	// Галфинд СадомцевСА 14.02.2024 Перенес код в процедуру Процедура гф_ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	//Если Отказ Тогда
	//	Возврат;
	//КонецЕсли;

	//Если ДополнительныеСвойства.Свойство("гф_УстановленНовыйНомер") Тогда
	//	НомерОрдера = "0000000";
	//	ЕстьРТиУ = Ложь;
	//	// Номер ордера
	//	Для каждого СтрДок Из ЭтотОбъект.ДокументыОснования Цикл
	//		ТекДок = СтрДок.ДокументОснование;
	//		Если ТипЗнч(ТекДок) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
	//			ЕстьРТиУ = Истина;
	//			текРасходныйОрдер = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекДок, "гф_РасходныйОрдер");
	//			Если ЗначениеЗаполнено(текРасходныйОрдер) Тогда
	//				НомерОрдера = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(текРасходныйОрдер, "Номер");
	//			КонецЕсли;
	//			Прервать;
	//		КонецЕсли;
	//	КонецЦикла;
	//	Если ЕстьРТиУ Тогда
	//		Номер =  Документы.РеализацияТоваровУслуг.ПолучитьНомерДокументаСУчетомРасходногоОрдера(Номер, НомерОрдера);
	//		УстановитьПредставлениеНомера();
	//	КонецЕсли;
	//	
	//	ДополнительныеСвойства.Удалить("гф_УстановленНовыйНомер");
	//	Записать(РежимЗаписиДокумента.Запись);
	//КонецЕсли;
КонецПроцедуры

&После("ПриУстановкеНовогоНомера")
Процедура гф_ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	ДополнительныеСвойства.Вставить("гф_УстановленНовыйНомер"); 
КонецПроцедуры


&После("ПередЗаписью")
Процедура гф_ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	// ++ Галфинд СадомцевСА 14.02.2024 Перенес код из процедуры Процедура гф_ПриЗаписи(Отказ)
	// в процедуру Процедура гф_ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	// e1cib/data/Задача.ЗадачаИсполнителя?ref=8eabb083fed1320811eec0143b77b47b
	Если Отказ Тогда
		Возврат;
	КонецЕсли;

	Если ДополнительныеСвойства.Свойство("гф_УстановленНовыйНомер") Тогда
		НомерОрдера = "0000000";
		ЕстьРТиУ = Ложь;
		// Номер ордера
		Для каждого СтрДок Из ЭтотОбъект.ДокументыОснования Цикл
			ТекДок = СтрДок.ДокументОснование;
			Если ТипЗнч(ТекДок) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
				ЕстьРТиУ = Истина;
				текРасходныйОрдер = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекДок, "гф_РасходныйОрдер");
				Если ЗначениеЗаполнено(текРасходныйОрдер) Тогда
					НомерОрдера = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(текРасходныйОрдер, "Номер");
				КонецЕсли;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если ЕстьРТиУ Тогда
			Номер =  Документы.РеализацияТоваровУслуг.ПолучитьНомерДокументаСУчетомРасходногоОрдера(Номер, НомерОрдера);
			УстановитьПредставлениеНомера();
		КонецЕсли;
		
		ДополнительныеСвойства.Удалить("гф_УстановленНовыйНомер");
		// Убрал лишний вызов т.к. платформа сама запишет изменения
		// Записать(РежимЗаписиДокумента.Запись);
	КонецЕсли;
	// -- Галфинд СадомцевСА
КонецПроцедуры


&ИзменениеИКонтроль("ПередЗаписью")
Процедура гф_ПередЗаписью1(Отказ, РежимЗаписи, РежимПроведения)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);

	ПроведениеДокументов.ПередЗаписьюДокумента(ЭтотОбъект, РежимЗаписи, РежимПроведения);

	СформироватьМассивОснованийДляПроверки();

	Если ДокументыОснования.Количество() = 0 
		Или ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПервичныйДокумент") Тогда
		ДополнительныеСвойства.Вставить("ПропуститьПроверкуЗапретаИзменения", Истина);
	КонецЕсли;

	Если Не Исправление Тогда
		НомерИсправления = "";
		СчетФактураОснование = Неопределено;
	КонецЕсли;

	Если НалогообложениеНДС.Пустая() Тогда
		НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;
	КонецЕсли;
	
	#Вставка
	// Галфинд_ДомнышеваКР_22_03_2024
    // Необходимо не менять дату если это перенос сч-факт от корректировки к возврату
	Если НЕ ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ВозвратТоваровОтКлиента") 
		ИЛИ (ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ВозвратТоваровОтКлиента") 
		И НЕ ЗначениеЗаполнено(ДокументОснование.ЗаявкаНаВозвратТоваровОтКлиента)) Тогда
	#КонецВставки
	// Проверим время документа относительно времени документа-основания
	Если Не Перевыставленный И Не РеализацияЧерезКомиссионера
		И ЗначениеЗаполнено(ДокументОснование) И Не ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ЗаписьКнигиПродаж") Тогда
		ДатаПоследнегоДокументаОснования = ПолучитьДатуПоследнегоДокументаОснования();
		Если Дата < ДатаПоследнегоДокументаОснования
			ИЛИ Не ЗначениеЗаполнено(Дата) Тогда

			Дата = ?(ДатаПоследнегоДокументаОснования = КонецДня(ДатаПоследнегоДокументаОснования),
			ДатаПоследнегоДокументаОснования,
			ДатаПоследнегоДокументаОснования + 1);

		КонецЕсли;
	КонецЕсли;
	#Вставка
	КонецЕсли;
	#КонецВставки

	Если Не ПометкаУдаления И Не Перевыставленный Тогда
		ПроверитьДублиСчетФактуры(Отказ);
	КонецЕсли;

	Если (РежимЗаписи = РежимЗаписиДокумента.Проведение И Не Проведен)
		Или РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда

		ПроверитьБудущиеСчетаФактурыВЦепочке(Отказ);
	КонецЕсли;

	РезультатЗаполнения = Неопределено;
	Если Не Отказ
		И Не РучнаяКорректировкаСуммДокумента
		И (РежимЗаписи = РежимЗаписиДокумента.Проведение
		Или (РежимЗаписи = РежимЗаписиДокумента.Запись И Проведен))
		И (Корректировочный Или Исправление) Тогда

		// Перезаполнение таблицы товаров корректировочных и исправлений счетов-фактур.

		РезультатЗаполнения = ТаблицаТоваров();
		ЗаполнитьТаблицуТоваров(РезультатЗаполнения);
	КонецЕсли;

	НоменклатураСервер.ОчиститьНеиспользуемыеСерии(ЭтотОбъект,
	НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект,
	Документы.СчетФактураВыданный));

	Если Товары.Количество() Тогда
		ЗаполнитьНомераСтрокПриПечати();
	КонецЕсли;

	Если ЭтоНовый() И Не ЗначениеЗаполнено(Номер) Тогда
		УстановитьНовыйНомер();
	КонецЕсли;

	Если ЭтоНовый() И Не ЗначениеЗаполнено(ПредставлениеНомера) Или Исправление Тогда
		УстановитьПредставлениеНомера();
	КонецЕсли;

	ОбщегоНазначенияУТ.ЗаполнитьИдентификаторыДокумента(ЭтотОбъект);

	Если РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
		РучнаяКорректировкаЖурналаСФ = Ложь;
	КонецЕсли;

	ЗаполнитьПризнакСводныйКорректировочный();
	ЗаполнитьХозяйственнуюОперациюДокументовОснований();
	ИдентификаторПлатежа = ОбщегоНазначенияУТ.ПолучитьУникальныйИдентификаторПлатежа(ЭтотОбъект);

	Если Не ПометкаУдаления
		И Не Отказ
		И РежимЗаписи = РежимЗаписиДокумента.Проведение 
		И Перевыставленный Тогда

		ПроверитьСчетФактурыПоОтчетуКомитентуОЗакупках(Отказ);

	КонецЕсли;

	Если Не ЗначениеЗаполнено(Автор) И ЭтоНовый() Тогда
		Автор = Пользователи.ТекущийПользователь();
	КонецЕсли;

КонецПроцедуры

