#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриОткрытииНаСервере()
	// #wortmann { 
	// Устанавливаем отбор для РС гф_СтрокиДокументаДанныеЗагрузки по Ссылке 
	// Галфинд_Домнышева 2022/09/19
	
	ЭлементОтбора = СтрокиРС.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Документ");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	ЭлементОтбора.ПравоеЗначение = Объект.Ссылка;
	
	// } #wortmann
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// #wortmann { 
	// Вызов процедур на Сервере для контроля доступности кнопок и правильного отображения значений ТЧ 
	// Галфинд_Домнышева 2022/09/19
	ПриОткрытииНаСервере();
	ДоступностьКнопок();
	// } #wortmann
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// #wortmann { 
// Устанавливает доступность кнопок формы 
// Галфинд_Домнышева 2022/09/19
&НаКлиенте
Процедура ДоступностьКнопок() 
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда 			
		СтатусЗагружено = ПолучитьСтатусДокумента();
		Если  СтатусЗагружено Тогда
			Элементы.СтрокиРС.КоманднаяПанель.ПодчиненныеЭлементы.СтрокиРСЗагрузить.Доступность 	= Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда 
		Pricat = ПолучитьИнтерфейс();
		Если Pricat Тогда
			Элементы.СтрокиРС.КоманднаяПанель.ПодчиненныеЭлементы.ОбработкаPricat.Доступность = Истина; 
		КонецЕсли;
	Иначе	
		Элементы.СтрокиРС.КоманднаяПанель.ПодчиненныеЭлементы.ОбработкаPricat.Доступность = Ложь;
	КонецЕсли;
	
	Модифицированность = Истина;
	
КонецПроцедуры// } #wortmann

// #wortmann { 
// Функция получает реквизит СтатусДокумента и возваращает Истина или Ложь
// Галфинд_Домнышева 2022/09/19
//
// Возвращаемое значение:
//  - Булево - возвращает Истина, если найденный статусДокумента соответсвует значениям Загружено ил ЗагруженоСОшибками
&НаСервере
Функция ПолучитьСтатусДокумента()
	 
	 Запрос = Новый Запрос;
	 Запрос.Текст = 
	 "ВЫБРАТЬ
	 |	гф_ДанныеЗагрузки.СтатусДокумента КАК СтатусДокумента
	 |ИЗ
	 |	Документ.гф_ДанныеЗагрузки КАК гф_ДанныеЗагрузки
	 |ГДЕ
	 |	гф_ДанныеЗагрузки.Ссылка = &Ссылка";
	 
	 Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	 
	 РезультатЗапроса = Запрос.Выполнить();
	 
	 Выборка = РезультатЗапроса.Выбрать();
	 
	 Если Не РезультатЗапроса.Пустой() Тогда
		 Выборка.Следующий();
		 СтатусДокумента = Выборка.СтатусДокумента;
		 Если СтатусДокумента = Перечисления.гф_СтатусыДокументовЗагрузки.ЗагруженоСОшибками ИЛИ
			 СтатусДокумента = Перечисления.гф_СтатусыДокументовЗагрузки.Загружено Тогда
			 Возврат Истина;
		 Иначе
			 Возврат Ложь;
		 КонецЕсли;
	 КонецЕсли;

КонецФункции// } #wortmann

// #wortmann { 
// Функция получает реквизит Интерфейс и возваращает Истина или Ложь
// Галфинд_Домнышева 2022/09/19
//
// Возвращаемое значение:
//  - Булево - возвращает Истина, если найденный Интерфейс соответсвует значению PRICAT
&НаСервере
Функция ПолучитьИнтерфейс()
	 
	 Запрос = Новый Запрос;
	 Запрос.Текст = 
	 "ВЫБРАТЬ
	 |	гф_ДанныеЗагрузки.Интерфейс КАК Интерфейс
	 |ИЗ
	 |	Документ.гф_ДанныеЗагрузки КАК гф_ДанныеЗагрузки
	 |ГДЕ
	 |	гф_ДанныеЗагрузки.Ссылка = &Ссылка";
	 
	 Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	 
	 РезультатЗапроса = Запрос.Выполнить();
	 
	 Выборка = РезультатЗапроса.Выбрать();
	 
	 Если Не РезультатЗапроса.Пустой() Тогда
		 Выборка.Следующий();
		 Интерфейс = Выборка.Интерфейс;
		 Если Интерфейс = Перечисления.гф_Интерфейсы.PRICAT Тогда
			 Возврат Истина;
		 Иначе
			 Возврат Ложь;
		 КонецЕсли;
	 КонецЕсли;

КонецФункции// } #wortmann

#КонецОбласти