
#Область ОбработчикиСобытийФормы 

&НаСервере
Процедура гф_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка) 
	
	гф_СоздатьНовыеРеквизиты();
	
КонецПроцедуры	

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура гф_СоздатьНовыеРеквизиты()
	
	ОписаниеТиповУпаковочныйЛист	= Новый ОписаниеТипов("ДокументСсылка.УпаковочныйЛист");
	
	ДобавляемыеРеквизиты = Новый Массив;
	
	РеквизитФормы_гф_ИДКороба			= Новый РеквизитФормы("гф_ИДКороба",
	ОписаниеТиповУпаковочныйЛист, , "ID короба", Истина);
	
	ДобавляемыеРеквизиты.Добавить(РеквизитФормы_гф_ИДКороба);
	
	// #wortmann {
	// #учет Кодов Маркиовки (КМ)
	// Галфинд Sakovich 2022/11/02
	ОписаниеТиповБулево = Новый ОписаниеТипов("Булево");
	РеквизитФормы_гф_ЗаполнятьШтрихкодыУпаковок = 
	Новый РеквизитФормы("гф_ЗаполнятьШтрихкодыУпаковок", ОписаниеТиповБулево);
	ДобавляемыеРеквизиты.Добавить(РеквизитФормы_гф_ЗаполнятьШтрихкодыУпаковок);
	// } #wortmann
	
	ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	ТипПолеФормы = Тип("ПолеФормы");
	
	НовоеПоле = Элементы.Добавить("гф_ИДКороба", ТипПолеФормы,
	Элементы.Товары);
	
	НовоеПоле.Вид			= ВидПоляФормы.ПолеВвода;
	НовоеПоле.Видимость		= Истина;
	НовоеПоле.ПутьКДанным	= "Объект.Товары.гф_IDКороба"; 
	
КонецПроцедуры	

&НаКлиенте
Процедура гф_ВопросЗаполнитьШтрихкодыУпаковокЗавершение (Результат, ДополнительныеПараметры) Экспорт
	Команда = ДополнительныеПараметры["Команда"];
	гф_ЗаполнятьШтрихкодыУпаковок = Результат = КодВозвратаДиалога.Да;
	ЗаполнитьШтрихкодыУпаковок();

	Если Команда["Имя"] = "ПровестиДокумент" Тогда
		ОбщегоНазначенияУТКлиент.Провести(ЭтаФорма, Истина);
	КонецЕсли;
	
	Если Команда["Имя"] = "ПровестиИЗакрыть" Тогда
		ОбщегоНазначенияУТКлиент.ПровестиИЗакрыть(ЭтаФорма, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьШтрихкодыУпаковок()
	
	Если ЭтотОбъект.гф_ЗаполнятьШтрихкодыУпаковок Тогда
		
		Объект.ШтрихкодыУпаковок.Очистить();
		
		Распоряжение = Объект.Распоряжение;
		Если Не (ТипЗнч(Распоряжение) = Тип("ДокументСсылка.ПеремещениеТоваров")
			ИЛИ ТипЗнч(Распоряжение) = Тип("ДокументСсылка.ПроизводствоБезЗаказа")) Тогда
			Возврат;
		КонецЕсли;
		Если ТипЗнч(Распоряжение) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
			СкладОтправитель = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Распоряжение, "СкладОтправитель");
			СкладПолучатель = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Распоряжение, "СкладПолучатель");
			СкладОтправительКоробочный = 
			УправлениеСвойствами.ЗначениеСвойства(СкладОтправитель, "гф_СкладыТоварыВКоробах") = Истина;
			СкладПолучательКоробочный = 
			УправлениеСвойствами.ЗначениеСвойства(СкладПолучатель, "гф_СкладыТоварыВКоробах") = Истина;
		КонецЕсли;
		Если ТипЗнч(Распоряжение) = Тип("ДокументСсылка.ПроизводствоБезЗаказа") Тогда
			СкладПолучательКоробочный = 
			УправлениеСвойствами.ЗначениеСвойства(Объект.Склад, "гф_СкладыТоварыВКоробах") = Истина;
			СкладОтправительКоробочный = СкладПолучательКоробочный;
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Если СкладОтправительКоробочный И СкладПолучательКоробочный Тогда
			// заполняем Агрегатами кодов маркировки
			лТовары = Объект.Товары.Выгрузить();
			
			// если склад коробочный:
			// В ситуации, когда в документе "Производство без заказа - нет  ID упаковочного листа"
			// ордер создается без строк "ЭтоУпаковочныйЛист = Истина", соответственно ШтрихкодыУпаковок
			// ордера не могут быть заполнены. По этой же причине невозможно собрать ШК по УЛ из Распоряжения
			// ВЫЯСНИТЬ ЭТОТ МОМЕНТ...
			
			ТекстЗапроса = "ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	т.УпаковочныйЛист КАК УпаковочныйЛист,
			|	т.ЭтоУпаковочныйЛист
			|ПОМЕСТИТЬ УпЛисты
			|ИЗ
			|	&Товары КАК т
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ШтрихкодыУпаковокТоваров.Ссылка КАК ШтрихкодУпаковки
			|ИЗ
			|	УпЛисты КАК УпЛисты
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ШтрихкодыУпаковокТоваров КАК ШтрихкодыУпаковокТоваров
			|		ПО УпЛисты.УпаковочныйЛист.Код = ШтрихкодыУпаковокТоваров.ЗначениеШтрихкода
			|ГДЕ
			|	УпЛисты.ЭтоУпаковочныйЛист
			|	И ШтрихкодыУпаковокТоваров.Ссылка ЕСТЬ НЕ NULL 
			|	И ШтрихкодыУпаковокТоваров.ТипУпаковки = ЗНАЧЕНИЕ(Перечисление.ТипыУпаковок.МультитоварнаяУпаковка)";
			Запрос.Текст = ТекстЗапроса;
			Запрос.УстановитьПараметр("Товары", лТовары);
			
		ИначеЕсли ТипЗнч(Распоряжение) = Тип("ДокументСсылка.ПеремещениеТоваров")
			И (СкладОтправительКоробочный И Не СкладПолучательКоробочный) Тогда
			// заполняем Кодами маркировки
			ТекстЗапроса = "ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ШтрихкодыУпаковокТоваровВложенныеШтрихкоды.Штрихкод КАК ШтрихкодУпаковки
			|ИЗ
			|	Документ.ПеремещениеТоваров.гф_ТоварыВКоробах КАК ПеремещениеТоваровгф_ТоварыВКоробах
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ШтрихкодыУпаковокТоваров.ВложенныеШтрихкоды КАК ШтрихкодыУпаковокТоваровВложенныеШтрихкоды
			|		ПО ПеремещениеТоваровгф_ТоварыВКоробах.УпаковочныйЛист.Код = ШтрихкодыУпаковокТоваровВложенныеШтрихкоды.Ссылка.ЗначениеШтрихкода
			|ГДЕ
			|	ПеремещениеТоваровгф_ТоварыВКоробах.Ссылка = &Распоряжение";
			Запрос.Текст = ТекстЗапроса;
			Запрос.УстановитьПараметр("Распоряжение", Распоряжение);
			
		ИначеЕсли ТипЗнч(Распоряжение) = Тип("ДокументСсылка.ПроизводствоБезЗаказа")
			И (Не СкладОтправительКоробочный И Не СкладПолучательКоробочный) Тогда
			//если склад НЕ коробочный:
			// В ситуации, когда в документе "Производство без заказа - нет  ID упаковочного листа"
			// невозможно собрать ШК по УЛ из Распоряжения
			// ВЫЯСНИТЬ ЭТОТ МОМЕНТ...
			
			// заполняем Кодами маркировки
			ТекстЗапроса = "ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ШтрихкодыУпаковокТоваровВложенныеШтрихкоды.Штрихкод КАК ШтрихкодУпаковки
			|ИЗ
			|	Документ.ПроизводствоБезЗаказа.гф_ПродукцияВКоробах КАК ПроизводствоБезЗаказа_ПродукцияВКоробах
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ШтрихкодыУпаковокТоваров.ВложенныеШтрихкоды КАК ШтрихкодыУпаковокТоваровВложенныеШтрихкоды
			|		ПО ПроизводствоБезЗаказа_ПродукцияВКоробах.IDКороба.Код = ШтрихкодыУпаковокТоваровВложенныеШтрихкоды.Ссылка.ЗначениеШтрихкода
			|ГДЕ
			|	ПроизводствоБезЗаказа_ПродукцияВКоробах.Ссылка = &Распоряжение";
			Запрос.Текст = ТекстЗапроса;
			Запрос.УстановитьПараметр("Распоряжение", Распоряжение)
			
		Иначе
			Возврат;
		КонецЕсли;
		
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() Тогда
			Возврат;	
		КонецЕсли;
		
		тзШтрихкоды = Результат.Выгрузить();
		Объект.ШтрихкодыУпаковок.Загрузить(тзШтрихкоды);
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция ОпределитьНеобходимостьЗаполненияШтрихкодовУпаковок()

	НужноЗаполнятьШтрихкодыУпаковок = 
	(Объект.Статус = ПредопределенноеЗначение("Перечисление.СтатусыПриходныхОрдеров.Принят")
	И (ТипЗнч(Объект.Распоряжение) = Тип("ДокументСсылка.ПеремещениеТоваров")
	Или ТипЗнч(Объект.Распоряжение) = Тип("ДокументСсылка.ПроизводствоБезЗаказа")));

	Возврат НужноЗаполнятьШтрихкодыУпаковок;

КонецФункции 

&НаКлиенте
Процедура ЗадатьВопросОЗаполненииШтрихкодовУпаковок(Команда)

	ТекстВопроса = НСтр("ru='Табличная часть ""Штрихкоды упаковок"" пустая. Будет выполнена "
	+ "попытка заполнения. Продолжить?'");
	ДопПараметры = Новый Структура("Команда", Команда);
	Оповещение = Новый ОписаниеОповещения("гф_ВопросЗаполнитьШтрихкодыУпаковокЗавершение", ЭтотОбъект, ДопПараметры);
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
	
КонецПроцедуры

&НаКлиенте
Процедура гф_ПровестиДокументВместо(Команда)
	
	// #wortmann {
	// #учет Кодов Маркировки (КМ)
	// Галфинд Sakovich 2022/11/01
	НужноЗаполнятьШтрихкодыУпаковок = ОпределитьНеобходимостьЗаполненияШтрихкодовУпаковок();
	Если НужноЗаполнятьШтрихкодыУпаковок Тогда
		Если Объект.ШтрихкодыУпаковок.Количество() = 0 Тогда
			ЗадатьВопросОЗаполненииШтрихкодовУпаковок(Команда);
		Иначе
			ЭтотОбъект.гф_ЗаполнятьШтрихкодыУпаковок = Истина;
			ЗаполнитьШтрихкодыУпаковок();
			ПродолжитьВызов(Команда);
		КонецЕсли;
	Иначе
		ПродолжитьВызов(Команда);
	КонецЕсли;
	// } #wortmann
	
КонецПроцедуры

&НаКлиенте
Процедура гф_ПровестиИЗакрытьВместо(Команда)
	
	// #wortmann {
	// #учет Кодов Маркировки (КМ)
	// Галфинд Sakovich 2022/11/01
	НужноЗаполнятьШтрихкодыУпаковок = ОпределитьНеобходимостьЗаполненияШтрихкодовУпаковок();
	Если НужноЗаполнятьШтрихкодыУпаковок Тогда
		Если Объект.ШтрихкодыУпаковок.Количество() = 0 Тогда
			ЗадатьВопросОЗаполненииШтрихкодовУпаковок(Команда);
		Иначе
			ЭтотОбъект.гф_ЗаполнятьШтрихкодыУпаковок = Истина;
			ЗаполнитьШтрихкодыУпаковок();
			ПродолжитьВызов(Команда);
		КонецЕсли;
	Иначе
		ПродолжитьВызов(Команда);
	КонецЕсли;
	// } #wortmann
	
КонецПроцедуры

#КонецОбласти