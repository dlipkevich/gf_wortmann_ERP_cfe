#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

// #wortmann {
// #3.3.19 ТЗ_Приходный ордер_v2.docx
// группировка номенклатуры по Упаковочным листам,
// если они присутствуют в распоряжении.
// Галфинд Sakovich 2022/08/25
&После("ЗаполнитьТоварыПоТоварамКПоступлению")
Процедура гф_ЗаполнитьТоварыПоТоварамКПоступлению(ВидЗаполнения, ДатаПоступления)
	Если (ВидЗаполнения = "Номенклатура"
		Или ВидЗаполнения = "НоменклатураКоличество") 
		И ЗначениеЗаполнено(Распоряжение) 
		И (ТипЗнч(Распоряжение) = Тип("ДокументСсылка.ПриобретениеТоваровУслуг")
		ИЛИ ТипЗнч(Распоряжение) = Тип("ДокументСсылка.ПеремещениеТоваров")) Тогда
		
		Запрос = Новый Запрос;
		Если ТипЗнч(Распоряжение) = Тип("ДокументСсылка.ПриобретениеТоваровУслуг") Тогда
			ТекстЗапроса = "ВЫБРАТЬ
			|	ПТиУ.Ссылка КАК ПТиУ,
			|	УпаковочныйЛист.Ссылка КАК УпЛист
			|ПОМЕСТИТЬ УпакЛисты
			|ИЗ
			|	Документ.УпаковочныйЛист КАК УпаковочныйЛист
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг КАК ПТиУ
			|		ПО (УпаковочныйЛист.гф_Поставка = ПТиУ.Ссылка)
			|ГДЕ
			|	ПТиУ.Ссылка = &Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	УпакЛисты.УпЛист КАК УпЛист,
			|	УпаковочныйЛистТовары.Номенклатура КАК Номенклатура,
			|	УпаковочныйЛистТовары.Характеристика КАК Характеристика,
			|	УпаковочныйЛистТовары.Назначение КАК Назначение,
			|	УпаковочныйЛистТовары.КоличествоУпаковок КАК КоличествоУпаковок,
			|	УпаковочныйЛистТовары.Количество КАК Количество
			|ИЗ
			|	УпакЛисты КАК УпакЛисты
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УпаковочныйЛист.Товары КАК УпаковочныйЛистТовары
			|		ПО УпакЛисты.УпЛист = УпаковочныйЛистТовары.Ссылка
			|ИТОГИ ПО
			|	УпЛист";
		КонецЕсли;
		
		Если ТипЗнч(Распоряжение) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
			ТекстЗапроса = " ВЫБРАТЬ
			|	Перемещение.УпаковочныйЛист КАК УпЛист,
			|	УпаковочныйЛистТовары.Номенклатура КАК Номенклатура,
			|	УпаковочныйЛистТовары.Характеристика КАК Характеристика,
			|	УпаковочныйЛистТовары.Назначение КАК Назначение,
			|	УпаковочныйЛистТовары.КоличествоУпаковок КАК КоличествоУпаковок,
			|	УпаковочныйЛистТовары.Количество КАК Количество
			|ИЗ
			|	Документ.ПеремещениеТоваров.гф_ТоварыВКоробах КАК Перемещение
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УпаковочныйЛист.Товары КАК УпаковочныйЛистТовары
			|		ПО (Перемещение.УпаковочныйЛист = УпаковочныйЛистТовары.Ссылка)
			|ГДЕ
			|	Перемещение.Ссылка = &Ссылка
			|ИТОГИ ПО
			|	УпЛист";
		КонецЕсли;
		
		Запрос.Текст = ТекстЗапроса;
		Запрос.УстановитьПараметр("Ссылка", Распоряжение);
		Результат = Запрос.Выполнить();
		Если Не Результат.Пустой() Тогда
			Товары.Очистить();
			ВыборкаУпЛист = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаУпЛист.Следующий() Цикл
				стрУпЛист = Товары.Добавить();
				стрУпЛист.УпаковочныйЛист = ВыборкаУпЛист.УпЛист;
				стрУпЛист.ЭтоУпаковочныйЛист = Истина;
				стрУпЛист.КоличествоУпаковок = 1;
				стрУпЛист.Количество = 1;
				ВыборкаДетали = ВыборкаУпЛист.Выбрать();
				Пока ВыборкаДетали.Следующий() Цикл
					стрТовары = Товары.Добавить();
					стрТовары.Номенклатура = ВыборкаДетали.Номенклатура;
					стрТовары.Характеристика = ВыборкаДетали.Характеристика;
					стрТовары.КоличествоУпаковок = ВыборкаДетали.КоличествоУпаковок;
					стрТовары.Количество = ВыборкаДетали.Количество;
					стрТовары.УпаковочныйЛистРодитель = ВыборкаУпЛист.УпЛист;
					стрТовары.ЭтоУпаковочныйЛист = Ложь;
					стрТовары.Назначение = ВыборкаДетали.Назначение;
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
		
		ВсегоМест = УпаковочныеЛистыСервер.КоличествоМестВТЧ(Товары);
	КонецЕсли;
	
КонецПроцедуры // } #wortmann

// #wortmann {
// #Монитор логиста
// Запись истории статусов ордеров
// Галфинд Окунев 2022/09/13
&После("ПриЗаписи")
Процедура гф_ПриЗаписи(Отказ)
	
	Если Отказ Тогда
		
		Возврат;
		
	КонецЕсли;	
	
	//Если Не Ссылка.Пустая() Тогда 
	//	
	//	Запрос = Новый Запрос;
	//	
	//	Запрос.Текст = "";
	//	
	//	Отбор = Новый Структура("Объект", Ссылка);
	//	
	//	ТекущийСтатус = РегистрыСведений.гф_ИсторияСтатусовПриходныхОрдеров.СрезПоследних(, Отбор);
	//	
	//Иначе	
	//	
	//	ТекущийСтатус = Неопределено;
	//	
	//КонецЕсли;
	
КонецПроцедуры // } #wortmann
	
#КонецОбласти
	
#КонецЕсли