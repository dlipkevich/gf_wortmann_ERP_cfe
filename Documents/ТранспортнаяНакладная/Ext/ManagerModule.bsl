#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

&ИзменениеИКонтроль("Печать")
Процедура гф_Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода)

	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТранспортнаяНакладная") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"ТранспортнаяНакладная", НСтр("ru = 'Транспортная накладная';
		|en = 'Consignment note'"),
		СформироватьПечатнуюФормуТранспортнойНакладной(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;

	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТТН") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"ТТН",
		НСтр("ru = 'Товарно-транспортная накладная';
		|en = 'Waybill'"),
		СформироватьПечатнуюФормуТТН(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));	
	КонецЕсли;
	#Вставка
	//++ ЕсиповАВ
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СМР") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"СМР",
		НСтр("ru = 'Накладная CMR';
		|en = 'CMR'"),
		СформироватьПечатнуюФормуСМР(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));	
	КонецЕсли;
	//-- ЕсиповАВ
	#КонецВставки

	ФормированиеПечатныхФорм.ЗаполнитьПараметрыОтправки(ПараметрыВывода.ПараметрыОтправки, МассивОбъектов, КоллекцияПечатныхФорм);

КонецПроцедуры

Функция СформироватьПечатнуюФормуСМР(МассивОбъектов, ОбъектыПечати, ПараметрыПечати) Экспорт
	
	Для Каждого МассивОбъект Из МассивОбъектов Цикл
		
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.РазмерКолонтитулаСверху = 0;
	ТабличныйДокумент.РазмерКолонтитулаСнизу = 0;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	МакетОбработки = ПолучитьМакет("гф_CMR");
	ОбластьШапка = МакетОбработки.ПолучитьОбласть("Шапка|ШапкаКолонки");
	ОбластьСтрока = МакетОбработки.ПолучитьОбласть("Строка|ШапкаКолонки");
	ОбластьПодвал = МакетОбработки.ПолучитьОбласть("Подвал|ШапкаКолонки");
	ОбластьТекст = МакетОбработки.ПолучитьОбласть("ТекстКолонка");
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РеализацияТоваровУслуг.АдресДоставки КАК АдресДоставки,
	|	РеализацияТоваровУслуг.ПеревозчикПартнер КАК ПеревозчикПартнер,
	|	РеализацияТоваровУслуг.Организация КАК Организация,
	|	РеализацияТоваровУслуг.ЗаказКлиента КАК ЗаказКлиента,
	|	РеализацияТоваровУслуг.Товары.(
	|		Ссылка КАК Ссылка
	|	) КАК Товары,
	|	РеализацияТоваровУслуг.гф_ТоварыВКоробах.(
	|		УпаковочныйЛист КАК УпаковочныйЛист
	|	) КАК гф_ТоварыВКоробах,
	|	РеализацияТоваровУслуг.Валюта КАК Валюта,
	|	РеализацияТоваровУслуг.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка = &Ссылка";
	Запрос.Параметры.Вставить("Ссылка",МассивОбъектов[0].Ссылка);
	Таб = Запрос.Выполнить().Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТранспортнаяНакладная.Грузоотправитель КАК Грузоотправитель,
	|	ТранспортнаяНакладная.Организация КАК Организация,
	|	ТранспортнаяНакладная.Грузополучатель КАК Грузополучатель,
	|	ТранспортнаяНакладная.Дата КАК Дата,
	|	ТранспортнаяНакладная.Номер КАК Номер,
	|	ТранспортнаяНакладная.МассаБрутто КАК МассаБрутто
	|ИЗ
	|	Документ.ТранспортнаяНакладная КАК ТранспортнаяНакладная
	|ГДЕ
	|	ТранспортнаяНакладная.ДокументыОснования.ДокументОснование.Ссылка = &Ссылка";
	Запрос.Параметры.Вставить("Ссылка",МассивОбъектов[0].Ссылка);
	ТабНакладная = Запрос.Выполнить().Выгрузить();
	
	КолНакл = ТабНакладная.Количество();
	Кол     = Таб.Количество();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СчетФактураВыданный.Дата КАК Дата,
	|	СчетФактураВыданный.Номер КАК Номер
	|ИЗ
	|	Документ.СчетФактураВыданный КАК СчетФактураВыданный
	|ГДЕ
	|	СчетФактураВыданный.ДокументОснование = &ДокументОснование";
	Запрос.Параметры.Вставить("ДокументОснование",МассивОбъектов[0].Ссылка);
	ТабФакт = Запрос.Выполнить().Выгрузить();
	
	//Заполнение области Шапка, области Строка и области Подвал
	Если Не КолНакл = 0 Тогда
		ОбластьШапка.Параметры.НаименованиеОрганизации    = ТабНакладная[0].Грузоотправитель.Наименование;
		ОбластьШапка.Параметры.АдресОрганизации           = ТабНакладная[0].Организация.СтранаРегистрации.НаименованиеПолное;
		ОбластьШапка.Параметры.ПолучательНаименование     = ТабНакладная[0].Грузополучатель.НаименованиеПолное;
		ОбластьШапка.Параметры.ПолучательСтрана           = ТабНакладная[0].Грузополучатель.СтранаРегистрации.НаименованиеПолное;
		ОбластьШапка.Параметры.ДатаПогрузкиГруза          = ТабНакладная[0].Дата;
		ОбластьШапка.Параметры.НомерДокументаОтгрузки     = ТабНакладная[0].Номер;
		ОбластьСтрока.Параметры.Вес                       = ТабНакладная[0].МассаБрутто;
	КонецЕсли;
	Если Не Кол = 0 Тогда
		ИсходнаяСтрока                                    = Таб[0].АдресДоставки;
		Результат                                         = Сред(ИсходнаяСтрока, СтрНайти(ИсходнаяСтрока, " ") + 1);
		ОбластьШапка.Параметры.ПолучательАдрес            = Результат;
		ОбластьШапка.Параметры.ПеревозчикНаименование     = Таб[0].ПеревозчикПартнер.Наименование;
		ОбластьШапка.Параметры.СтранаПогрузкиГруза        = Таб[0].Организация.СтранаРегистрации.НаименованиеПолное;
		ОбластьШапка.Параметры.ПеревозчикНаименование     = Таб[0].ЗаказКлиента.ПеревозчикПартнер.НаименованиеПолное;
		КоличествоПар                                     = Таб[0].Товары.Количество(); 
		ОбластьСтрока.Параметры.КоличествоМест            = КоличествоПар;
		ОбластьСтрока.Параметры.Упаковка                  = Таб[0].гф_ТоварыВКоробах[0].УпаковочныйЛист.гф_Агрегация.ТипУпаковки;
		ОбластьПодвал.Параметры.Валюта                    = Таб[0].Валюта.НаименованиеПолное;
		ОбластьПодвал.Параметры.СуммаЗаказа               = Таб[0].СуммаВзаиморасчетов;
	КонецЕсли;
	
	ОбластьШапка.Параметры.АдресПогрузкиГруза         = "г.Москва";
	
	Если Не ТабФакт.Количество() = 0 Тогда
		ОбластьШапка.Параметры.ДатаПогрузкиГруза          = ТабФакт[0].Дата;
		ОбластьШапка.Параметры.НаименованиеНомерДокумента = "Универсальный передаточный документ № " + ТабФакт[0].Номер;
	КонецЕсли;
	
	ОбщийОбъемММ = 0;
	Для Каждого СтрОбъем Из МассивОбъектов[0].гф_ТоварыВКоробах Цикл
		ОбщийОбъемММ = ОбщийОбъемММ + СтрОбъем.УпаковочныйЛист.гф_Комплектация.гф_ОбъемКороба;
		ОбщийОбъемМ  = ОбщийОбъемММ * 0.000000001;
	КонецЦикла;
	ОбластьСтрока.Параметры.Объем = ОбщийОбъемМ;
	
	ТабличныйДокумент.Вывести(ОбластьШапка);
	ТабличныйДокумент.Вывести(ОбластьСтрока);
	ТабличныйДокумент.Вывести(ОбластьПодвал);
	ТабличныйДокумент.Вывести(ОбластьТекст);
	
	КонецЦикла;
	//
	Возврат ТабличныйДокумент;
	
КонецФункции	

&После("ДобавитьКомандыПечати")
Процедура гф_ДобавитьКомандыПечати(КомандыПечати, Порядок, УсловиеВидимости)
	// ++ ЕсиповАВ 26.01.24
	// Накладная CMR
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.ТранспортнаяНакладная";
	КомандаПечати.Идентификатор = "СМР";
	КомандаПечати.Представление = НСтр("ru = 'Накладная CMR';
	|en = 'CMR'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	// -- ЕсиповАВ 26.01.24
КонецПроцедуры

#КонецЕсли