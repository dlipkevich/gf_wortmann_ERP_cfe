#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

&ИзменениеИКонтроль("Печать")
Процедура гф_Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода)

	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТранспортнаяНакладная") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"ТранспортнаяНакладная", НСтр("ru = 'Транспортная накладная';
		|en = 'Consignment note'"),
		СформироватьПечатнуюФормуТранспортнойНакладной(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;

	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТТН") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"ТТН",
		НСтр("ru = 'Товарно-транспортная накладная';
		|en = 'Waybill'"),
		СформироватьПечатнуюФормуТТН(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));	
	КонецЕсли;
	#Вставка
	//++ ЕсиповАВ
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СМР") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"СМР",
		НСтр("ru = 'Накладная CMR';
		|en = 'CMR'"),
		СформироватьПечатнуюФормуСМР(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));	
	КонецЕсли;
	//-- ЕсиповАВ
	#КонецВставки

	ФормированиеПечатныхФорм.ЗаполнитьПараметрыОтправки(ПараметрыВывода.ПараметрыОтправки, МассивОбъектов, КоллекцияПечатныхФорм);

КонецПроцедуры

Функция СформироватьПечатнуюФормуСМР(МассивОбъектов, ОбъектыПечати, ПараметрыПечати) Экспорт
	
	Для Каждого МассивОбъект Из МассивОбъектов Цикл
		
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.РазмерКолонтитулаСверху = 0;
	ТабличныйДокумент.РазмерКолонтитулаСнизу = 0;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	МакетОбработки = ПолучитьМакет("гф_CMR");
	ОбластьШапка = МакетОбработки.ПолучитьОбласть("Шапка|ШапкаКолонки");
	ОбластьСтрока = МакетОбработки.ПолучитьОбласть("Строка|ШапкаКолонки");
	ОбластьПодвал = МакетОбработки.ПолучитьОбласть("Подвал|ШапкаКолонки");
	ОбластьТекст = МакетОбработки.ПолучитьОбласть("ТекстКолонка");
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТранспортнаяНакладная.Грузоотправитель КАК Грузоотправитель,
	|	ТранспортнаяНакладная.Организация КАК Организация,
	|	ТранспортнаяНакладная.Грузополучатель КАК Грузополучатель,
	|	ТранспортнаяНакладная.Дата КАК Дата,
	|	ТранспортнаяНакладная.Номер КАК Номер,
	|	ТранспортнаяНакладная.МассаБрутто КАК МассаБрутто
	|ИЗ
	|	Документ.ТранспортнаяНакладная КАК ТранспортнаяНакладная
	|ГДЕ
	|	ТранспортнаяНакладная.ДокументыОснования.ДокументОснование.Ссылка = &Ссылка";
	Запрос.Параметры.Вставить("Ссылка", МассивОбъект.Ссылка);
	ТабНакладная = Запрос.Выполнить().Выгрузить();
	
	КолНакл = ТабНакладная.Количество();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СчетФактураВыданный.Дата КАК Дата,
	|	СчетФактураВыданный.Номер КАК Номер,
	|	СчетФактураВыданный.ПредставлениеНомера Как НомерНаПечать
	|ИЗ
	|	Документ.СчетФактураВыданный КАК СчетФактураВыданный
	|ГДЕ
	|	СчетФактураВыданный.ДокументОснование = &ДокументОснование";
	Запрос.Параметры.Вставить("ДокументОснование", МассивОбъект.Ссылка);
	ТабФакт = Запрос.Выполнить().Выгрузить();
	
	//Заполнение области Шапка, области Строка и области Подвал
	Если Не КолНакл = 0 Тогда
		//ОбластьШапка.Параметры.НаименованиеОрганизации    = ТабНакладная[0].Грузоотправитель.Наименование;
		//Если Не ТабНакладная[0].Грузоотправитель.КонтактнаяИнформация.Количество() = 0 Тогда
		//	ОбластьШапка.Параметры.АдресОрганизации       = ТабНакладная[0].Грузоотправитель.КонтактнаяИнформация[0].Представление;
		//КонецЕСли;
		ОбластьШапка.Параметры.ПолучательНаименование     = ТабНакладная[0].Грузополучатель.НаименованиеПолное;
		//ОбластьШапка.Параметры.ПолучательСтрана           = ТабНакладная[0].Грузополучатель.СтранаРегистрации.НаименованиеПолное;
		ОбластьШапка.Параметры.ДатаПогрузкиГруза          = ТабНакладная[0].Дата;
	КонецЕсли;
	
	//(н)Галфинд/Сефербеков 22.02.2024 ( 
	Если ТипЗнч(МассивОбъект) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		НаименованиеКонтрагентаПолное = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(МассивОбъект.Контрагент, "НаименованиеПолное");
		ОбластьШапка.Параметры.ПолучательНаименование = НаименованиеКонтрагентаПолное ; 
	КонецЕсли;
	//(к)Галфинд/Сефербеков 22.02.2024 ) 
	
	//Если Не Кол = 0 Тогда
	Если ТабНакладная.Количество() = 0 Тогда
		ОбластьСтрока.Параметры.Вес = "--";
	Иначе
		Если ТабНакладная[0].МассаБрутто = 0 Тогда
			ОбластьСтрока.Параметры.Вес = "--";
		Иначе
			ОбластьСтрока.Параметры.Вес = ТабНакладная[0].МассаБрутто;
		КонецЕсли;
	КонецЕсли;
	
		ИсходнаяСтрока                                    = МассивОбъект.АдресДоставки;
		РезультатАдрес                                    = Сред(ИсходнаяСтрока, СтрНайти(ИсходнаяСтрока, ",") + 2);
		РезультатСтрана                                   = Лев(ИсходнаяСтрока, СтрНайти(ИсходнаяСтрока, ",") - 1);
		ОбластьШапка.Параметры.ПолучательАдрес            = РезультатАдрес;
		ОбластьШапка.Параметры.ПолучательСтрана           = РезультатСтрана;
		ОбластьШапка.Параметры.ПеревозчикНаименование     = "Джет Логистик, ООО";
		ОбластьШапка.Параметры.СтранаПогрузкиГруза        = МассивОбъект.Организация.СтранаРегистрации.НаименованиеПолное;
		// ОбластьШапка.Параметры.ПеревозчикНаименование     = МассивОбъект.гф_АдресДоставки.ТК.Наименование;
		ОбластьШапка.Параметры.НаименованиеОрганизации    = МассивОбъект.Организация.Наименование;
		Если Не МассивОбъект.Организация.КонтактнаяИнформация.Количество() = 0 Тогда
			ОбластьШапка.Параметры.АдресОрганизации       = МассивОбъект.Организация.КонтактнаяИнформация[0].Представление;
		КонецЕСли;
		КоличествоПар                                     = МассивОбъект.Товары.Количество();
		Если Не КоличествоПар = 0 Тогда
			ОбластьСтрока.Параметры.Наименование          = МассивОбъект.Товары[0].Номенклатура.ВидНоменклатуры.Наименование
		КонецЕсли;
		ОбластьСтрока.Параметры.КоличествоМест            = КоличествоПар;
		//ОбластьСтрока.Параметры.Упаковка                  = МассивОбъект.гф_ТоварыВКоробах[0].УпаковочныйЛист.гф_Агрегация.ТипУпаковки;
		ОбластьСтрока.Параметры.Упаковка                  = "Короб";
		ОбластьПодвал.Параметры.Валюта                    = МассивОбъект.Валюта.НаименованиеПолное;
		ОбластьПодвал.Параметры.СуммаЗаказа               = МассивОбъект.СуммаВзаиморасчетов;
	//КонецЕсли;
	
	//(н)Галфинд/Сефербеков 22.02.2024 ( 
	Если ТипЗнч(МассивОбъект) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		КолКоробов = МассивОбъект.гф_ТоварыВКоробах.Количество() ;
		ОбластьСтрока.Параметры.КоличествоМест = КолКоробов ;
	КонецЕсли;
	//(к)Галфинд/Сефербеков 22.02.2024 ) 

	ОбластьШапка.Параметры.АдресПогрузкиГруза         = "г.Москва";
	ОбластьШапка.Параметры.НомерДокументаОтгрузки     = Сред(МассивОбъект.Номер, 13, СтрДлина(МассивОбъект.Номер));
	
	Если Не ТабФакт.Количество() = 0 Тогда
		ОбластьШапка.Параметры.ДатаПогрузкиГруза          = Формат(ТабФакт[0].Дата, "ДЛФ=D");
		ОбластьШапка.Параметры.НаименованиеНомерДокумента = "Универсальный передаточный документ № " + ТабФакт[0].Номер;
		
		//(н)Галфинд/Сефербеков 22.02.2024 ( 
		ОбластьШапка.Параметры.НаименованиеНомерДокумента = "Универсальный передаточный документ № " + ТабФакт[0].НомерНаПечать;
		ОбластьШапка.Параметры.НомерДокументаОтгрузки     = ТабФакт[0].НомерНаПечать;
		//(к)Галфинд/Сефербеков 22.02.2024 ) 
	КонецЕсли;
	
	ОбщийОбъем = 0;
	Для Каждого СтрОбъем Из МассивОбъект.гф_ТоварыВКоробах Цикл
		ОбщийОбъем = ОбщийОбъем + СтрОбъем.УпаковочныйЛист.гф_Комплектация.гф_ОбъемКороба;
	КонецЦикла;
	Если ОбщийОбъем = 0 Тогда
		ОбластьСтрока.Параметры.Объем = "--";
	Иначе
		ОбластьСтрока.Параметры.Объем = ОбщийОбъем;
	КонецЕсли;
	ОбластьСтрока.Параметры.Статистика = "--";

	//(н)Галфинд/Сефербеков 22.02.2024 ( 
	Если ТипЗнч(МассивОбъект) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		СтруктураВесОбъем = ПолучитьВесОбъемКоробовРТУ(МассивОбъект) ;
		ОбластьСтрока.Параметры.Объем = ?(СтруктураВесОбъем.Объем <> 0, СтруктураВесОбъем.Объем, "--" )  ;
		ОбластьСтрока.Параметры.Вес = ?(СтруктураВесОбъем.Вес <> 0 , СтруктураВесОбъем.Вес,  "--" )  ;
	КонецЕсли;
	//(к)Галфинд/Сефербеков 22.02.2024 ) 

	ТабличныйДокумент.Вывести(ОбластьШапка);
	ТабличныйДокумент.Вывести(ОбластьСтрока);
	ТабличныйДокумент.Вывести(ОбластьПодвал);
	ТабличныйДокумент.Вывести(ОбластьТекст);
	
	КонецЦикла;
	//
	Возврат ТабличныйДокумент;
	
КонецФункции	

//(н)Галфинд/Сефербеков 22.02.2024 ( 
Функция ПолучитьВесОбъемКоробовРТУ(ДокументРТУ)

	Результат = Новый Структура("Вес, Объем", 0, 0 );
	
	Запрос = Новый Запрос ;
	Запрос.Текст = "	
	|ВЫБРАТЬ
	|	СУММА(ЕСТЬNULL(ВариантыКомплектацииНоменклатуры.гф_ВесКороба, 0)) КАК Вес,
	|	СУММА(ЕСТЬNULL(ВариантыКомплектацииНоменклатуры.гф_ДлинаКороба, 0) * ЕСТЬNULL(ВариантыКомплектацииНоменклатуры.гф_ШиринаКороба, 0) * ЕСТЬNULL(ВариантыКомплектацииНоменклатуры.гф_ВысотаКороба, 0)) / 1000000000  КАК Объем
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.гф_ТоварыВКоробах КАК РеализацияТоваровУслуггф_ТоварыВКоробах
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УпаковочныйЛист КАК УпаковочныйЛисты                                                       
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыКомплектацииНоменклатуры КАК ВариантыКомплектацииНоменклатуры
	|			ПО (УпаковочныйЛисты.гф_Комплектация = ВариантыКомплектацииНоменклатуры.Ссылка)
	|		ПО (РеализацияТоваровУслуггф_ТоварыВКоробах.УпаковочныйЛист = УпаковочныйЛисты.Ссылка)
	|ГДЕ
	|	РеализацияТоваровУслуггф_ТоварыВКоробах.Ссылка = &Ссылка
	|";
	
	Запрос.УстановитьПараметр("Ссылка", ДокументРТУ);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Результат.Вес = Выборка.Вес ;
		Результат.Объем = Выборка.Объем ;
	КонецЕсли;

	Возврат Результат ;
	
КонецФункции // ()
//(к)Галфинд/Сефербеков 22.02.2024 ) 

&После("ДобавитьКомандыПечати")
Процедура гф_ДобавитьКомандыПечати(КомандыПечати, Порядок, УсловиеВидимости)
	// ++ ЕсиповАВ 26.01.24
	// Накладная CMR
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.ТранспортнаяНакладная";
	КомандаПечати.Идентификатор = "СМР";
	КомандаПечати.Представление = НСтр("ru = 'Накладная CMR';
	|en = 'CMR'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	// -- ЕсиповАВ 26.01.24
КонецПроцедуры

#КонецЕсли
