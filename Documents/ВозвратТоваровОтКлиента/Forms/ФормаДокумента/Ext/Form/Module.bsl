#Область ОбработчикиСобытийФормы

&НаСервере
Процедура гф_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	// #wortmann {
	// e1cib/data/Задача.ЗадачаИсполнителя?ref=8121bcee7bda45d711ed43f091be2e6a
	// добавление реквизитов на форму
	// Галфинд_Домнышева 2022/10/07
	ТипГруппаФормы = Тип("ГруппаФормы");
	ТипПолеФормы = Тип("ПолеФормы");
	ТипКнопкаФормы = Тип("КнопкаФормы");
	ТипТаблицаФормы = Тип("ТаблицаФормы");
	
	НовыйЭлемент = Элементы.Вставить("гф_СтраницаТоварыВКоробах", ТипГруппаФормы, Элементы.ГруппаСтраницы, 
					Элементы.ГруппаТовары);
	НовыйЭлемент.Вид = ВидГруппыФормы.Страница;
	НовыйЭлемент.Заголовок = "Товары в коробах";
	НовыйЭлемент.Подсказка = "Товары в коробах";
	НовыйЭлемент.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	
	ТаблицаФормы = Элементы.Вставить("гф_ТоварыВКоробах", ТипТаблицаФормы, Элементы.гф_СтраницаТоварыВКоробах);
	ТаблицаФормы.ПутьКДанным = "Объект.гф_ТоварыВКоробах";
	ТаблицаФормы.УстановитьДействие("ПередУдалением", "гф_ТоварыВКоробахПередУдалением");

	НовыйЭлемент  = Элементы.Добавить("гф_ТоварыВКоробахНомерСтроки", ТипПолеФормы, ТаблицаФормы);
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;      
	НовыйЭлемент.ПутьКДанным = "Объект.гф_ТоварыВКоробах.НомерСтроки";

	НовыйЭлемент  = Элементы.Добавить("гф_ТоварыВКоробахУпаковочныйЛист", ТипПолеФормы, ТаблицаФормы);
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;      
	НовыйЭлемент.ПутьКДанным = "Объект.гф_ТоварыВКоробах.УпаковочныйЛист";
	
	НовыйЭлемент  = Элементы.Добавить("гф_ТоварыВКоробахАртикул", ТипПолеФормы, ТаблицаФормы);
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;      
	НовыйЭлемент.ПутьКДанным = "Объект.гф_ТоварыВКоробах.Артикул";
	
	НовыйЭлемент  = Элементы.Добавить("гф_ТоварыВКоробахIDКороба", ТипПолеФормы, ТаблицаФормы);
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;      
	НовыйЭлемент.ПутьКДанным = "Объект.гф_ТоварыВКоробах.IDКороба";

	НовыйЭлемент  = Элементы.Добавить("гф_ТоварыВКоробахКоличествоПар", ТипПолеФормы, ТаблицаФормы);
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;      
	НовыйЭлемент.ПутьКДанным = "Объект.гф_ТоварыВКоробах.КоличествоПар";
	
	Команда = Команды.Добавить("гф_КомандаПодборТовара");
	Команда.Действие = "гф_КомандаПодборТовара";

	НовыйЭлемент = Элементы.Вставить("гф_ПодборТовара", ТипКнопкаФормы, ТаблицаФормы.КоманднаяПанель);
	НовыйЭлемент.Заголовок = "Подбор";
	НовыйЭлемент.ИмяКоманды = "гф_КомандаПодборТовара";
	НовыйЭлемент.Вид = ВидКнопкиФормы.КнопкаКоманднойПанели;
		
	Если ЗначениеЗаполнено(Объект.Склад) Тогда 
         ВидимостьСтраницыТоварыВКоробах();
	КонецЕсли;
	// } #wortmann   
КонецПроцедуры

&НаСервере
Процедура гф_ПослеЗаписиНаСервереПосле(ТекущийОбъект, ПараметрыЗаписи)
	// ++ Галфинд_Домнышева 2023/04/10 
	//e1cib/data/Задача.ЗадачаИсполнителя?ref=8131bcee7bda45d711edd201ed470fa8
	Если ЗначениеЗаполнено(Объект.ЗаявкаНаВозвратТоваровОтКлиента)
		И Объект.ЗаявкаНаВозвратТоваровОтКлиента.Статус = Перечисления.СтатусыЗаявокНаВозвратТоваровОтКлиентов.КОбеспечению Тогда
		СчетФактура = ПолучитьСчетФактуруПоСвязаннымДокумента(Объект.ДокументРеализации);	
		Если СчетФактура <> Неопределено Тогда
		СчетФактураОбъект = СчетФактура.ПолучитьОбъект();
		СчетФактураОбъект.ДокументОснование = Объект.Ссылка;
		СчетФактураОбъект.Перевыставленный = Ложь;
		СчетФактураОбъект.ДокументыОснования[0].ДокументОснование = Объект.Ссылка;
		СчетФактураОбъект.ОбменДанными.Загрузка = Истина;
		СчетФактураОбъект.Записать();
		ОбновитьТекстСчетаФактурыПолученные();
		КонецЕсли;
	КонецЕсли;
    // -- Галфинд_Домнышева 2023/04/10
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы   

// #wortmann {
// открытие формы подбора УЛ
// e1cib/data/Задача.ЗадачаИсполнителя?ref=8121bcee7bda45d711ed43f091be2e6a
// Галфинд_Домнышева 2022/10/06
&НаКлиенте
Процедура гф_КомандаПодборТовара(Команда)
	
	ПараметрыФормы = Новый Структура;
	
	ПараметрыФормы.Вставить("Реализация",	Объект.ДокументРеализации);
	ПараметрыФормы.Вставить("Организация",			Объект.Организация); 
	ПараметрыФормы.Вставить("Партнер",			Объект.Партнер);
	
	ОповещениеПодбора = Новый ОписаниеОповещения("ПодборЗавершение", ЭтотОбъект);
	
	ОткрытьФорму("Документ.ВозвратТоваровОтКлиента.Форма.гф_ФормаПодбораДокументовИУЛ", ПараметрыФормы, ЭтаФорма, , , ,
	ОповещениеПодбора, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры// } #wortmann 

// #wortmann {
// заполнение ТЧ гф_ТоварыВКоробах по закрытию формы Подбора 
// e1cib/data/Задача.ЗадачаИсполнителя?ref=8121bcee7bda45d711ed43f091be2e6a
// Галфинд_Домнышева 2022/10/06	
&НаКлиенте
Процедура ПодборЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(Результат) Тогда
		// #wortmann { 
		// Будем заполнять массив УпаковочныеЛисты для дальнейшего заполнения ТЧ Товары 
		// e1cib/data/Задача.ЗадачаИсполнителя?ref=8121bcee7bda45d711ed43f091be2e6a
		// Галфинд_Домнышева 2022/10/07
		УпаковочныеЛисты = Новый Массив;
		// } #wortmann
		Для каждого СтруДанных Из Результат Цикл
			
			Если Объект.гф_ТоварыВКоробах.НайтиСтроки(СтруДанных).Количество() = 0 Тогда
				строкаТоваровВКоробах = Объект.гф_ТоварыВКоробах.Добавить();
				ЗаполнитьЗначенияСвойств(строкаТоваровВКоробах, СтруДанных);
				// #wortmann { 
				// Закомментирована часть кода и дописан новый в связи с изменением логики заполнения ТЧ Товары 
				// e1cib/data/Задача.ЗадачаИсполнителя?ref=8121bcee7bda45d711ed43f091be2e6a
				// Галфинд_Домнышева 2022/10/07
				//ЗагрузитьТоварыПоУЛ(СтруДанных.УпаковочныйЛист);
				//ТекущаяСтрока = Элементы.Товары.ТекущиеДанные;
				//
				//СтруктураДействий = Новый Структура;
				//ДобавитьВСтруктуруДействияПриИзмененииКоличестваУпаковок(СтруктураДействий, ЭтаФорма);
				//ОбновитьТЧТовары (СтруктураДействий, КэшированныеЗначения);
				УпаковочныеЛисты.Добавить(СтруДанных.УпаковочныйЛист);
				// } #wortmann
			КонецЕсли;
			
		КонецЦикла;
		// #wortmann { 
		// Будем заполнять массив УпаковочныеЛисты для дальнейшего заполнения ТЧ Товары 
		// e1cib/data/Задача.ЗадачаИсполнителя?ref=8121bcee7bda45d711ed43f091be2e6a
		// Галфинд_Домнышева 2022/10/07
		ЗаполнитьСтрокиТЧТовары(УпаковочныеЛисты);
		// } #wortmann
	КонецЕсли;
	
КонецПроцедуры// } #wortmann

#КонецОбласти
#Область ОбработчикиСобытийЭлементовШапкиФормы

// #wortmann { 
// вызов процедуры по настройке видимости страницы гф_СтраницаТоварыВКоробах 
// e1cib/data/Задача.ЗадачаИсполнителя?ref=8121bcee7bda45d711ed43f091be2e6a
// Галфинд_Домнышева 2022/10/06	
&НаКлиенте
Процедура гф_СкладПриИзмененииПосле(Элемент)
	
	ВидимостьСтраницыТоварыВКоробах();
	
КонецПроцедуры// } #wortmann 

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// #wortmann { 
// настройка видимости созданной страницы гф_СтраницаТоварыВКоробах согласно 
// значению доп.реквизита "Товары в коробах" 
// e1cib/data/Задача.ЗадачаИсполнителя?ref=8121bcee7bda45d711ed43f091be2e6a
// Галфинд_Домнышева 2022/10/06	
&НаСервере
Процедура ВидимостьСтраницыТоварыВКоробах() 
	
	СвойствоТоварыВКоробах = УправлениеСвойствами.ЗначениеСвойства(Объект.Склад, "гф_СкладыТоварыВКоробах"); 
	
	ДоступностьТоварыВКоробах = ?(СвойствоТоварыВКоробах = Неопределено, Ложь, СвойствоТоварыВКоробах);
	
	Элементы["гф_СтраницаТоварыВКоробах"].Доступность = ДоступностьТоварыВКоробах;
	// #wortmann { 
	// Очистка Табличной части Товары заполненной стандартным механизмом если Склад коробной 
	// e1cib/data/Задача.ЗадачаИсполнителя?ref=8121bcee7bda45d711ed43f091be2e6a
	// Галфинд_Домнышева 2022/10/07
	Если ДоступностьТоварыВКоробах Тогда
		
		Объект.Товары.Очистить(); 
		
	КонецЕсли;
	// } #wortmann
	Если Не ДоступностьТоварыВКоробах И Объект.гф_ТоварыВКоробах.Количество() Тогда
		
		Объект.гф_ТоварыВКоробах.Очистить();
		
	КонецЕсли;	
   	
КонецПроцедуры// } #wortmann

// #wortmann { 
// заполняет ТЧ Товары 
// e1cib/data/Задача.ЗадачаИсполнителя?ref=8121bcee7bda45d711ed43f091be2e6a
// Галфинд_Домнышева 2022/10/06	
&НаСервере
Процедура ЗагрузитьТоварыПоУЛ(УпаковочныйЛист)
   	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УпаковочныйЛистТовары.Номенклатура КАК Номенклатура,
		|	УпаковочныйЛистТовары.Характеристика КАК Характеристика,
		|	УпаковочныйЛистТовары.Назначение КАК Назначение,
		|	УпаковочныйЛистТовары.Количество КАК Количество
		|ИЗ
		|	Документ.УпаковочныйЛист.Товары КАК УпаковочныйЛистТовары
		|ГДЕ
		|	УпаковочныйЛистТовары.Ссылка = &УпаковочныйЛист";
	
	Запрос.УстановитьПараметр("УпаковочныйЛист", УпаковочныйЛист);
		
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();

	Пока Выборка.Следующий() Цикл
		СтруВыборки = Новый Структура("Номенклатура, Характеристика, Назначение");
		
		ЗаполнитьЗначенияСвойств(СтруВыборки, Выборка);
		
		Если Объект.Товары.НайтиСтроки(СтруВыборки).Количество() = 0 Тогда
			СтрокаТоваров = Объект.Товары.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТоваров, Выборка);
			СтрокаТоваров.КоличествоУпаковок = Выборка.Количество;			
		ИначеЕсли Объект.Товары.НайтиСтроки(СтруВыборки).Количество() > 0 Тогда	
			Объект.Товары.НайтиСтроки(СтруВыборки)[0].КоличествоУпаковок = 
										Объект.Товары.НайтиСтроки(СтруВыборки)[0].КоличествоУпаковок + Выборка.Количество;
		КонецЕсли;
	КонецЦикла;
		
	ПараметрыЗаполненияРеквизитов = Новый Структура;
	
	ПараметрыЗаполненияРеквизитов.Вставить("ЗаполнитьПризнакХарактеристикиИспользуются",
											Новый Структура("Номенклатура", "ХарактеристикиИспользуются"));
	ПараметрыЗаполненияРеквизитов.Вставить("ЗаполнитьПризнакАртикул",
											Новый Структура("Номенклатура", "Артикул"));
	ПараметрыЗаполненияРеквизитов.Вставить("ЗаполнитьПризнакТипНоменклатуры",
											Новый Структура("Номенклатура", "ТипНоменклатуры"));																				
	НоменклатураСервер.ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВКоллекции(Объект.Товары, ПараметрыЗаполненияРеквизитов);
   
КонецПроцедуры// } #wortmann 

// #wortmann {
// Вызов проц УдалитьТовары при удалении строки из ТЧ гф_ТоварыВКоробах  
// e1cib/data/Задача.ЗадачаИсполнителя?ref=8121bcee7bda45d711ed43f091be2e6a
// Галфинд_Домнышева 2022/10/06	
&НаКлиенте
Процедура гф_ТоварыВКоробахПередУдалением(Элемент, Отказ)
	ТекущиеДанные = Элементы.гф_ТоварыВКоробах.ТекущиеДанные;
	УпаковочныйЛист = ТекущиеДанные.УпаковочныйЛист;
	УдалитьТовары(УпаковочныйЛист);
КонецПроцедуры// } #wortmann

// #wortmann { 
// Удаляем товары из ТЧ Товары при удалении УЛ 
// e1cib/data/Задача.ЗадачаИсполнителя?ref=8121bcee7bda45d711ed43f091be2e6a
// Галфинд_Домнышева 2022/10/06	
&НаСервере
Процедура УдалитьТовары(УпаковочныйЛист)
   	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УпаковочныйЛистТовары.Номенклатура КАК Номенклатура,
		|	УпаковочныйЛистТовары.Характеристика КАК Характеристика,
		|	УпаковочныйЛистТовары.Назначение КАК Назначение,
		|	УпаковочныйЛистТовары.Количество КАК Количество
		|ИЗ
		|	Документ.УпаковочныйЛист.Товары КАК УпаковочныйЛистТовары
		|ГДЕ
		|	УпаковочныйЛистТовары.Ссылка = &УпаковочныйЛист";
	
	Запрос.УстановитьПараметр("УпаковочныйЛист", УпаковочныйЛист);
		
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();

	Пока Выборка.Следующий() Цикл
		СтруВыборки = Новый Структура("Номенклатура, Характеристика, Назначение");
		ЗаполнитьЗначенияСвойств(СтруВыборки, Выборка);
		
		Если Объект.Товары.НайтиСтроки(СтруВыборки).Количество() > 0 Тогда	
			Объект.Товары.НайтиСтроки(СтруВыборки)[0].КоличествоУпаковок = 
			Объект.Товары.НайтиСтроки(СтруВыборки)[0].КоличествоУпаковок - Выборка.Количество;	
			Объект.Товары.НайтиСтроки(СтруВыборки)[0].Количество = Объект.Товары.НайтиСтроки(СтруВыборки)[0].КоличествоУпаковок;							
			Если Объект.Товары.НайтиСтроки(СтруВыборки)[0].Количество = 0 Тогда
				Индекс = Объект.Товары.НайтиСтроки(СтруВыборки)[0].НомерСтроки;
				Объект.Товары.Удалить(Индекс - 1);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	   
КонецПроцедуры// } #wortmann 

// #wortmann { 
// Вызов серверной процедуры из общего модуля по обработке ТЧ Товары 
// e1cib/data/Задача.ЗадачаИсполнителя?ref=8121bcee7bda45d711ed43f091be2e6a
// Галфинд_Домнышева 2022/10/06
&НаСервере
Процедура ОбновитьТЧТовары (СтруктураДействий, КэшированныеЗначения)

	ОбработкаТабличнойЧастиСервер.ОбработатьТЧ(Объект.Товары, СтруктураДействий, КэшированныеЗначения);
	
КонецПроцедуры

// #wortmann { 
// Будем заполнять ТЧ Товары исходя из массива УпаковочныеЛисты
// (Основа процедуры взята из ОМ Документа "ЗаполнитьДокументНаОснованииРеализацииТоваровИУслуг(Знач ДокументОснование)"
// e1cib/data/Задача.ЗадачаИсполнителя?ref=8121bcee7bda45d711ed43f091be2e6a
// Галфинд_Домнышева 2022/10/07
&НаСервере
Процедура ЗаполнитьСтрокиТЧТовары(УпаковочныеЛисты)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УпаковочныйЛистТовары.Номенклатура КАК Номенклатура,
		|	УпаковочныйЛистТовары.Характеристика КАК Характеристика,
		|	УпаковочныйЛистТовары.Назначение КАК Назначение,
		|	СУММА(УпаковочныйЛистТовары.КоличествоУпаковок) КАК КоличествоУпаковок,
		|	СУММА(УпаковочныйЛистТовары.Количество) КАК Количество
		|ПОМЕСТИТЬ НоменклатураУпаковочногоЛиста
		|ИЗ
		|	Документ.УпаковочныйЛист.Товары КАК УпаковочныйЛистТовары
		|ГДЕ
		|	УпаковочныйЛистТовары.Ссылка В(&УпаковочныеЛисты)
		|
		|СГРУППИРОВАТЬ ПО
		|	УпаковочныйЛистТовары.Номенклатура,
		|	УпаковочныйЛистТовары.Характеристика,
		|	УпаковочныйЛистТовары.Назначение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РеализацияТоваровУслуггф_ТоварыВКоробах.Ссылка КАК Документ
		|ПОМЕСТИТЬ РТУ
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.гф_ТоварыВКоробах КАК РеализацияТоваровУслуггф_ТоварыВКоробах
		|ГДЕ
		|	РеализацияТоваровУслуггф_ТоварыВКоробах.УпаковочныйЛист В(&УпаковочныеЛисты)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	КорректировкаРеализации.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ДанныеПоследнейКорректировки
		|ИЗ
		|	Документ.КорректировкаРеализации КАК КорректировкаРеализации
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК РеестрДокументовСторноИсправление
		|		ПО КорректировкаРеализации.Ссылка = РеестрДокументовСторноИсправление.СторнируемыйДокумент
		|			И (РеестрДокументовСторноИсправление.Проведен)
		|			И (НЕ РеестрДокументовСторноИсправление.ДополнительнаяЗапись)
		|ГДЕ
		|	КорректировкаРеализации.Проведен
		|	И КорректировкаРеализации.ДокументОснование В
		|			(ВЫБРАТЬ
		|				РТУ.Документ КАК Документ
		|			ИЗ
		|				РТУ КАК РТУ)
		|	И НЕ КорректировкаРеализации.ВидКорректировки В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияПерепоставленногоТовара), ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратНедопоставленногоТовара))
		|	И РеестрДокументовСторноИсправление.Ссылка ЕСТЬ NULL
		|
		|УПОРЯДОЧИТЬ ПО
		|	КорректировкаРеализации.МоментВремени УБЫВ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаТовары.НоменклатураНабора КАК НоменклатураНабора,
		|	ТаблицаТовары.ХарактеристикаНабора КАК ХарактеристикаНабора,
		|	ТаблицаТовары.Номенклатура КАК Номенклатура,
		|	ТаблицаТовары.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
		|	ТаблицаТовары.Характеристика КАК Характеристика,
		|	ТаблицаТовары.Серия КАК Серия,
		|	ТаблицаТовары.Упаковка КАК Упаковка,
		|	ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
		|	ТаблицаТовары.Цена КАК Цена,
		|	ТаблицаТовары.ВидЦены КАК ВидЦены,
		|	ТаблицаТовары.Количество КАК Количество,
		|	ТаблицаТовары.Сумма КАК Сумма,
		|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
		|	ТаблицаТовары.СуммаНДС КАК СуммаНДС,
		|	ТаблицаТовары.СуммаСНДС КАК СуммаСНДС,
		|	ТаблицаТовары.КодСтроки КАК КодСтроки,
		|	ТаблицаТовары.Склад КАК Склад,
		|	ТаблицаТовары.ЗаказКлиента КАК ЗаказКлиента,
		|	0 КАК СуммаРучнойСкидки,
		|	0 КАК СуммаАвтоматическойСкидки,
		|	ТаблицаТовары.Назначение КАК Назначение
		|ПОМЕСТИТЬ ТоварыДокументаПродажи
		|ИЗ
		|	Документ.КорректировкаРеализации.Товары КАК ТаблицаТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеПоследнейКорректировки КАК ДанныеПоследнейКорректировки
		|		ПО ТаблицаТовары.Ссылка = ДанныеПоследнейКорректировки.Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТаблицаТовары.НоменклатураНабора,
		|	ТаблицаТовары.ХарактеристикаНабора,
		|	ТаблицаТовары.Номенклатура,
		|	ТаблицаТовары.Номенклатура.ТипНоменклатуры,
		|	ТаблицаТовары.Характеристика,
		|	ТаблицаТовары.Серия,
		|	ТаблицаТовары.Упаковка,
		|	ТаблицаТовары.КоличествоУпаковок,
		|	ТаблицаТовары.Цена,
		|	ТаблицаТовары.ВидЦены,
		|	ТаблицаТовары.Количество,
		|	ТаблицаТовары.Сумма,
		|	ТаблицаТовары.СтавкаНДС,
		|	ТаблицаТовары.СуммаНДС,
		|	ТаблицаТовары.СуммаСНДС,
		|	ТаблицаТовары.КодСтроки,
		|	ТаблицаТовары.Склад,
		|	ТаблицаТовары.ЗаказКлиента,
		|	ТаблицаТовары.СуммаРучнойСкидки,
		|	ТаблицаТовары.СуммаАвтоматическойСкидки,
		|	ТаблицаТовары.Назначение
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.Товары КАК ТаблицаТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеПоследнейКорректировки КАК ДанныеПоследнейКорректировки
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК РеестрДокументовСторноИсправление
		|		ПО ТаблицаТовары.Ссылка = РеестрДокументовСторноИсправление.СторнируемыйДокумент
		|			И (РеестрДокументовСторноИсправление.Проведен)
		|			И (НЕ РеестрДокументовСторноИсправление.ДополнительнаяЗапись)
		|ГДЕ
		|	ДанныеПоследнейКорректировки.Ссылка ЕСТЬ NULL
		|	И ТаблицаТовары.Ссылка В
		|			(ВЫБРАТЬ
		|				РТУ.Документ КАК Документ
		|			ИЗ
		|				РТУ КАК РТУ)
		|	И РеестрДокументовСторноИсправление.Ссылка ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыДокументаПродажи.НоменклатураНабора КАК НоменклатураНабора,
		|	ТоварыДокументаПродажи.ХарактеристикаНабора КАК ХарактеристикаНабора,
		|	НоменклатураУпаковочногоЛиста.Номенклатура КАК Номенклатура,
		|	ТоварыДокументаПродажи.ТипНоменклатуры КАК ТипНоменклатуры,
		|	НоменклатураУпаковочногоЛиста.Характеристика КАК Характеристика,
		|	ТоварыДокументаПродажи.Серия КАК Серия,
		|	ТоварыДокументаПродажи.Упаковка КАК Упаковка,
		|	НоменклатураУпаковочногоЛиста.КоличествоУпаковок КАК КоличествоУпаковок,
		|	ТоварыДокументаПродажи.Цена КАК Цена,
		|	ТоварыДокументаПродажи.ВидЦены КАК ВидЦены,
		|	НоменклатураУпаковочногоЛиста.Количество КАК Количество,
		|	ТоварыДокументаПродажи.Сумма КАК Сумма,
		|	ТоварыДокументаПродажи.СтавкаНДС КАК СтавкаНДС,
		|	ТоварыДокументаПродажи.СуммаНДС КАК СуммаНДС,
		|	ТоварыДокументаПродажи.СуммаСНДС КАК СуммаСНДС,
		|	ТоварыДокументаПродажи.КодСтроки КАК КодСтроки,
		|	ТоварыДокументаПродажи.Склад КАК Склад,
		|	ТоварыДокументаПродажи.ЗаказКлиента КАК ЗаказКлиента,
		|	ТоварыДокументаПродажи.СуммаРучнойСкидки КАК СуммаРучнойСкидки,
		|	ТоварыДокументаПродажи.СуммаАвтоматическойСкидки КАК СуммаАвтоматическойСкидки,
		|	НоменклатураУпаковочногоЛиста.Назначение КАК Назначение
		|ПОМЕСТИТЬ ТоварыДокументаПродажи2
		|ИЗ
		|	НоменклатураУпаковочногоЛиста КАК НоменклатураУпаковочногоЛиста
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДокументаПродажи КАК ТоварыДокументаПродажи
		|		ПО НоменклатураУпаковочногоЛиста.Номенклатура = ТоварыДокументаПродажи.Номенклатура
		|			И НоменклатураУпаковочногоЛиста.Характеристика = ТоварыДокументаПродажи.Характеристика
		|			И НоменклатураУпаковочногоЛиста.Назначение = ТоварыДокументаПродажи.Назначение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыДокументаПродажи2.НоменклатураНабора КАК НоменклатураНабора,
		|	ТоварыДокументаПродажи2.ХарактеристикаНабора КАК ХарактеристикаНабора,
		|	ТоварыДокументаПродажи2.Номенклатура КАК Номенклатура,
		|	ТоварыДокументаПродажи2.ТипНоменклатуры КАК ТипНоменклатуры,
		|	ТоварыДокументаПродажи2.Характеристика КАК Характеристика,
		|	ТоварыДокументаПродажи2.Серия КАК Серия,
		|	ТоварыДокументаПродажи2.Упаковка КАК Упаковка,
		|	СУММА(ТоварыДокументаПродажи2.КоличествоУпаковок) КАК КоличествоУпаковок,
		|	СРЕДНЕЕ(ТоварыДокументаПродажи2.Цена) КАК Цена,
		|	СУММА(ТоварыДокументаПродажи2.Количество) КАК Количество,
		|	СУММА(ТоварыДокументаПродажи2.Сумма) КАК Сумма,
		|	ТоварыДокументаПродажи2.СтавкаНДС КАК СтавкаНДС,
		|	СУММА(ТоварыДокументаПродажи2.СуммаНДС) КАК СуммаНДС,
		|	СУММА(ТоварыДокументаПродажи2.СуммаСНДС) КАК СуммаСНДС,
		|	СУММА(ТоварыДокументаПродажи2.СуммаРучнойСкидки) КАК СуммаРучнойСкидки,
		|	СУММА(ТоварыДокументаПродажи2.СуммаАвтоматическойСкидки) КАК СуммаАвтоматическойСКидки,
		|	ТоварыДокументаПродажи2.Назначение КАК Назначение
		|ПОМЕСТИТЬ ТоварыРеализации
		|ИЗ
		|	ТоварыДокументаПродажи2 КАК ТоварыДокументаПродажи2
		|ГДЕ
		|	НЕ ТоварыДокументаПродажи2.КоличествоУпаковок ЕСТЬ NULL
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварыДокументаПродажи2.НоменклатураНабора,
		|	ТоварыДокументаПродажи2.ХарактеристикаНабора,
		|	ТоварыДокументаПродажи2.Номенклатура,
		|	ТоварыДокументаПродажи2.ТипНоменклатуры,
		|	ТоварыДокументаПродажи2.Характеристика,
		|	ТоварыДокументаПродажи2.Серия,
		|	ТоварыДокументаПродажи2.Упаковка,
		|	ТоварыДокументаПродажи2.СтавкаНДС,
		|	ТоварыДокументаПродажи2.Назначение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВозвратТоваровОтКлиентаТовары.НоменклатураНабора КАК НоменклатураНабора,
		|	ВозвратТоваровОтКлиентаТовары.ХарактеристикаНабора КАК ХарактеристикаНабора,
		|	ВозвратТоваровОтКлиентаТовары.Номенклатура КАК Номенклатура,
		|	ВозвратТоваровОтКлиентаТовары.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
		|	ВозвратТоваровОтКлиентаТовары.Характеристика КАК Характеристика,
		|	ВозвратТоваровОтКлиентаТовары.Серия КАК Серия,
		|	ВозвратТоваровОтКлиентаТовары.Упаковка КАК Упаковка,
		|	СУММА(ВозвратТоваровОтКлиентаТовары.КоличествоУпаковок) КАК КоличествоУпаковок,
		|	СУММА(ВозвратТоваровОтКлиентаТовары.Количество) КАК Количество,
		|	СУММА(ВозвратТоваровОтКлиентаТовары.Сумма) КАК Сумма,
		|	ВозвратТоваровОтКлиентаТовары.СтавкаНДС КАК СтавкаНДС,
		|	СУММА(ВозвратТоваровОтКлиентаТовары.СуммаНДС) КАК СуммаНДС,
		|	СУММА(ВозвратТоваровОтКлиентаТовары.СуммаСНДС) КАК СуммаСНДС,
		|	СРЕДНЕЕ(ВозвратТоваровОтКлиентаТовары.Цена) КАК Цена,
		|	ВозвратТоваровОтКлиентаТовары.Назначение КАК Назначение
		|ПОМЕСТИТЬ ТоварыПредыдущихВозвратов
		|ИЗ
		|	Документ.ВозвратТоваровОтКлиента.Товары КАК ВозвратТоваровОтКлиентаТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК РеестрДокументовСторноИсправление
		|		ПО ВозвратТоваровОтКлиентаТовары.Ссылка = РеестрДокументовСторноИсправление.СторнируемыйДокумент
		|			И (РеестрДокументовСторноИсправление.Проведен)
		|			И (НЕ РеестрДокументовСторноИсправление.ДополнительнаяЗапись)
		|ГДЕ
		|	ВозвратТоваровОтКлиентаТовары.ДокументРеализации В
		|			(ВЫБРАТЬ
		|				РТУ.Документ КАК Документ
		|			ИЗ
		|				РТУ КАК РТУ)
		|	И ВозвратТоваровОтКлиентаТовары.Ссылка.Проведен
		|	И РеестрДокументовСторноИсправление.Ссылка ЕСТЬ NULL
		|
		|СГРУППИРОВАТЬ ПО
		|	ВозвратТоваровОтКлиентаТовары.НоменклатураНабора,
		|	ВозвратТоваровОтКлиентаТовары.ХарактеристикаНабора,
		|	ВозвратТоваровОтКлиентаТовары.Номенклатура,
		|	ВозвратТоваровОтКлиентаТовары.Номенклатура.ТипНоменклатуры,
		|	ВозвратТоваровОтКлиентаТовары.Характеристика,
		|	ВозвратТоваровОтКлиентаТовары.Серия,
		|	ВозвратТоваровОтКлиентаТовары.Упаковка,
		|	ВозвратТоваровОтКлиентаТовары.СтавкаНДС,
		|	ВозвратТоваровОтКлиентаТовары.Назначение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(ТоварыРеализации.НоменклатураНабора, ТоварыПредыдущихВозвратов.НоменклатураНабора) КАК НоменклатураНабора,
		|	ЕСТЬNULL(ТоварыРеализации.ХарактеристикаНабора, ТоварыПредыдущихВозвратов.ХарактеристикаНабора) КАК ХарактеристикаНабора,
		|	ЕСТЬNULL(ТоварыРеализации.Номенклатура, ТоварыПредыдущихВозвратов.Номенклатура) КАК Номенклатура,
		|	ЕСТЬNULL(ТоварыРеализации.ТипНоменклатуры, ТоварыПредыдущихВозвратов.ТипНоменклатуры) КАК ТипНоменклатуры,
		|	ЕСТЬNULL(ТоварыРеализации.Характеристика, ТоварыПредыдущихВозвратов.Характеристика) КАК Характеристика,
		|	ЕСТЬNULL(ТоварыРеализации.Серия, ТоварыПредыдущихВозвратов.Серия) КАК Серия,
		|	ЕСТЬNULL(ТоварыРеализации.Количество, 0) - ЕСТЬNULL(ТоварыПредыдущихВозвратов.Количество, 0) КАК Количество,
		|	0 КАК КоличествоУпаковок,
		|	ЕСТЬNULL(ТоварыРеализации.Упаковка, ТоварыПредыдущихВозвратов.Упаковка) КАК Упаковка,
		|	ЕСТЬNULL(ТоварыРеализации.СтавкаНДС, ТоварыПредыдущихВозвратов.СтавкаНДС) КАК СтавкаНДС,
		|	ЕСТЬNULL(ТоварыРеализации.Сумма, 0) - ЕСТЬNULL(ТоварыПредыдущихВозвратов.Сумма, 0) КАК Сумма,
		|	ЕСТЬNULL(ТоварыРеализации.СуммаНДС, 0) - ЕСТЬNULL(ТоварыПредыдущихВозвратов.СуммаНДС, 0) КАК СуммаНДС,
		|	ЕСТЬNULL(ТоварыРеализации.СуммаСНДС, 0) - ЕСТЬNULL(ТоварыПредыдущихВозвратов.СуммаСНДС, 0) КАК СуммаСНДС,
		|	ЕСТЬNULL(ТоварыРеализации.Назначение, ТоварыПредыдущихВозвратов.Назначение) КАК Назначение,
		|	РТУ.Документ КАК ДокументРеализации
		|ИЗ
		|	ТоварыРеализации КАК ТоварыРеализации
		|		ПОЛНОЕ СОЕДИНЕНИЕ ТоварыПредыдущихВозвратов КАК ТоварыПредыдущихВозвратов
		|		ПО ТоварыРеализации.Номенклатура = ТоварыПредыдущихВозвратов.Номенклатура
		|			И ТоварыРеализации.Характеристика = ТоварыПредыдущихВозвратов.Характеристика
		|			И ТоварыРеализации.НоменклатураНабора = ТоварыПредыдущихВозвратов.НоменклатураНабора
		|			И ТоварыРеализации.ХарактеристикаНабора = ТоварыПредыдущихВозвратов.ХарактеристикаНабора
		|			И ТоварыРеализации.Серия = ТоварыПредыдущихВозвратов.Серия
		|			И ТоварыРеализации.Назначение = ТоварыПредыдущихВозвратов.Назначение
		|			И ТоварыРеализации.Упаковка = ТоварыПредыдущихВозвратов.Упаковка,
		|	РТУ КАК РТУ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПереданнаяВозвратнаяТараОстатки.Номенклатура КАК Номенклатура,
		|	ПереданнаяВозвратнаяТараОстатки.Характеристика КАК Характеристика,
		|	ПереданнаяВозвратнаяТараОстатки.Партнер КАК Партнер,
		|	ПереданнаяВозвратнаяТараОстатки.ДокументПередачи КАК ДокументПередачи,
		|	ПереданнаяВозвратнаяТараОстатки.КоличествоОстаток КАК Количество,
		|	ПереданнаяВозвратнаяТараОстатки.СуммаОстаток КАК Сумма
		|ПОМЕСТИТЬ втПереданнаяВозвратнаяТара
		|ИЗ
		|	РегистрНакопления.ПереданнаяВозвратнаяТара.Остатки(
		|			,
		|			ДокументПередачи В
		|				(ВЫБРАТЬ
		|					РТУ.Документ КАК Документ
		|				ИЗ
		|					РТУ КАК РТУ)) КАК ПереданнаяВозвратнаяТараОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втПереданнаяВозвратнаяТара.Номенклатура КАК Номенклатура,
		|	втПереданнаяВозвратнаяТара.Характеристика КАК Характеристика,
		|	втПереданнаяВозвратнаяТара.ДокументПередачи КАК ДокументРеализации,
		|	СУММА(втПереданнаяВозвратнаяТара.Количество) КАК Количество,
		|	СУММА(втПереданнаяВозвратнаяТара.Количество) КАК КоличествоУпаковок,
		|	СУММА(втПереданнаяВозвратнаяТара.Сумма) КАК Сумма,
		|	СУММА(втПереданнаяВозвратнаяТара.Сумма) КАК СуммаСНДС,
		|	ВЫБОР
		|		КОГДА СУММА(втПереданнаяВозвратнаяТара.Количество) = 0
		|			ТОГДА СУММА(втПереданнаяВозвратнаяТара.Сумма)
		|		ИНАЧЕ СУММА(втПереданнаяВозвратнаяТара.Сумма) / СУММА(втПереданнаяВозвратнаяТара.Количество)
		|	КОНЕЦ КАК Цена,
		|	ЗНАЧЕНИЕ(Справочник.СтавкиНДС.БезНДС) КАК СтавкаНДС
		|ИЗ
		|	втПереданнаяВозвратнаяТара КАК втПереданнаяВозвратнаяТара
		|
		|СГРУППИРОВАТЬ ПО
		|	втПереданнаяВозвратнаяТара.Номенклатура,
		|	втПереданнаяВозвратнаяТара.Характеристика,
		|	втПереданнаяВозвратнаяТара.ДокументПередачи
		|
		|ИМЕЮЩИЕ
		|	СУММА(втПереданнаяВозвратнаяТара.Количество) > 0";
	
	Запрос.УстановитьПараметр("УпаковочныеЛисты", УпаковочныеЛисты);
	
	ПакетЗапросов = Запрос.ВыполнитьПакет();
			
	ТаблицаТоваров 	= ПакетЗапросов[7].Выгрузить();
	// #wortmann { 
	// Блок вынесен в отдельную процедуру для уменьшения когнетивности 
	// Галфинд_Домнышева 2022/10/14
	ПересчетСтрокВыгруженнойТаблицы(ТаблицаТоваров); 
	// } #wortmann
	МассивУдаляемыхСтрок = Новый Массив();
	Для Каждого Строка Из ТаблицаТоваров Цикл 
		Если Строка.Количество <= 0 Тогда
			МассивУдаляемыхСтрок.Добавить(Строка);
		КонецЕсли;
	КонецЦикла;
	Для Каждого Строка Из МассивУдаляемыхСтрок Цикл
		ТаблицаТоваров.Удалить(Строка);
	КонецЦикла;
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьКоличествоУпаковок");
	
	Для Каждого ТекСтрока Из ТаблицаТоваров Цикл
		
		ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(ТекСтрока, СтруктураДействий, Неопределено);
		
		Если ТекСтрока.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Товар
			Или (ТекСтрока.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.МногооборотнаяТара) Тогда
			
			НоваяСтрока = Объект.Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,ТекСтрока);
			НоваяСтрока.СпособОпределенияСебестоимости = ?(ЗначениеЗаполнено(НоваяСтрока.ДокументРеализации),
				Перечисления.СпособыОпределенияСебестоимости.ИзДокументаПродажи,
				Перечисления.СпособыОпределенияСебестоимости.ИзТекущегоДокумента);
			Ценообразование.ПересчитатьСуммыВСтрокеПоСуммеСНДС(
				НоваяСтрока,
				Объект.ЦенаВключаетНДС,
				Ложь,
				Ложь,
				Истина);
				
		КонецЕсли;
		
	КонецЦикла;
	
	ТаблицаТары = ПакетЗапросов[9].Выгрузить();
	
	Для каждого ТекущаяСтрока Из ТаблицаТары Цикл
		
		НоваяСтрока = Объект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,ТекущаяСтрока);
		НоваяСтрока.СпособОпределенияСебестоимости = ?(ЗначениеЗаполнено(НоваяСтрока.ДокументРеализации),
				Перечисления.СпособыОпределенияСебестоимости.ИзДокументаПродажи,
				Перечисления.СпособыОпределенияСебестоимости.ИзТекущегоДокумента);
		
		Ценообразование.ПересчитатьСуммыВСтрокеПоСуммеСНДС(НоваяСтрока, Объект.ЦенаВключаетНДС, Ложь, Ложь, Истина);
		
	КонецЦикла;
	
	ТоварыДо = Объект.Товары.Выгрузить();
	
	ЗаполнитьНомераГТДПоРаспоряжениям();
	
	// из-за округления при распределении номеров ГТД общая сумма НДС может не совпасть с суммой НДС построчно
	Для каждого СтрокаДо Из ТоварыДо Цикл
		
		ПоляПоиска = "Номенклатура, Характеристика, Серия, Назначение, СтавкаНДС, Цена, ДокументРеализации, Упаковка";
		СтруктураПоиска = Новый Структура(ПоляПоиска);
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаДо);
		
		СтрокиПосле = Объект.Товары.НайтиСтроки(СтруктураПоиска);
		
		СуммаНДСКРаспределению = СтрокаДо.СуммаНДС;
		СуммаСНДСКРаспределению = СтрокаДо.СуммаСНДС;
		
		Для каждого СтрокаПосле Из СтрокиПосле Цикл
		
			Коэффициент = ?(СтрокаДо.Количество = 0, 0, СтрокаПосле.Количество/СтрокаДо.Количество);
			СуммаНДС = Окр(СтрокаДо.СуммаНДС * Коэффициент, 2);
			СуммаСНДС = Окр(СтрокаДо.СуммаСНДС * Коэффициент, 2);
			
			Если СуммаСНДСКРаспределению >= СуммаСНДС 
				И СуммаНДСКРаспределению >= СуммаНДС Тогда
				СуммаНДСКРаспределению = СуммаНДСКРаспределению - СуммаНДС;
				СуммаСНДСКРаспределению = СуммаСНДСКРаспределению - СуммаСНДС;
				СтрокаПосле.СуммаНДС = СуммаНДС;
				СтрокаПосле.СуммаСНДС = СуммаСНДС;
			Иначе
				СтрокаПосле.СуммаНДС = СуммаНДСКРаспределению;
				СтрокаПосле.СуммаСНДС = СуммаСНДСКРаспределению;
			КонецЕсли;
			
			СтрокаПосле.Сумма = СтрокаПосле.СуммаСНДС - ?(Объект.ЦенаВключаетНДС, 0, СтрокаПосле.СуммаНДС);
		
		КонецЦикла; 
		
	КонецЦикла;

КонецПроцедуры// } #wortmann

// #wortmann { 
// Пересчет строк полученной ТЗ ТаблицаТоваров при отрицательных значениях Количества 
// Галфинд_Домнышева 2022/10/14
Процедура ПересчетСтрокВыгруженнойТаблицы(ТаблицаТоваров)
	
	СтруктураПоиска = Новый Структура("Номенклатура, Характеристика, НоменклатураНабора, 
			|ХарактеристикаНабора, Серия, Назначение, ТипНоменклатуры, СтавкаНДС");
	
	Для Каждого Строка Из ТаблицаТоваров Цикл
		
		Если Строка.Количество < 0 Тогда
		
			ЗаполнитьЗначенияСвойств(СтруктураПоиска, Строка);
			СтрокиПродажи = ТаблицаТоваров.НайтиСтроки(СтруктураПоиска);
			
			Для Каждого СтрокаПродажи Из СтрокиПродажи Цикл
			
				Если СтрокаПродажи.Количество < 0 Тогда
					Продолжить;
				КонецЕсли; 
				
				Строка.Количество 		= -Строка.Количество;
				Строка.Сумма 			= -Строка.Сумма;
				Строка.СуммаНДС 		= -Строка.СуммаНДС;
				Строка.СуммаСНДС 		= -Строка.СуммаСНДС;
				
				Если Строка.Количество > СтрокаПродажи.Количество Тогда
					КоличествоНаВычет 	= СтрокаПродажи.Количество;
					СуммаНаВычет 		= СтрокаПродажи.Сумма;
					СуммаНДСНаВычет 	= СтрокаПродажи.СуммаНДС;
					СуммаСНДСНаВычет 	= СтрокаПродажи.СуммаСНДС;
				Иначе
					КоличествоНаВычет 	= Строка.Количество;
					СуммаНаВычет 		= Строка.Сумма;
					СуммаНДСНаВычет 	= Строка.СуммаНДС;
					СуммаСНДСНаВычет 	= Строка.СуммаСНДС;
				КонецЕсли;
				
				СтрокаПродажи.Количество 	= СтрокаПродажи.Количество - КоличествоНаВычет;
				Строка.Количество 			= Строка.Количество - КоличествоНаВычет;
				
				СтрокаПродажи.Сумма 		= СтрокаПродажи.Сумма - СуммаНаВычет;
				Строка.Сумма 				= Строка.Сумма - СуммаНаВычет;
				
				СтрокаПродажи.СуммаНДС 		= СтрокаПродажи.СуммаНДС - СуммаНДСНаВычет;
				Строка.СуммаНДС 			= Строка.СуммаНДС - СуммаНДСНаВычет;
				
				СтрокаПродажи.СуммаСНДС 	= СтрокаПродажи.СуммаСНДС - СуммаСНДСНаВычет;
				Строка.СуммаСНДС 			= Строка.СуммаСНДС - СуммаСНДСНаВычет;
			
			КонецЦикла; 
		
		КонецЕсли; 
	КонецЦикла;
КонецПроцедуры

// #wortmann { 
// Процедура перенесена из модуля объекта 
// e1cib/data/Задача.ЗадачаИсполнителя?ref=8121bcee7bda45d711ed43f091be2e6a
// Галфинд_Домнышева 2022/10/07
&НаСервере
Процедура ЗаполнитьНомераГТДПоРаспоряжениям(ПересчитатьСуммовыеПоказатели = Истина)
	
	ПараметрыЗаполнения = НоменклатураСервер.ПараметрыЗаполненияНомеровГТД();
	ПараметрыЗапроса = ПараметрыЗаполнения.ПараметрыЗапроса;
	ПараметрыЗапроса.Ссылка = Объект.Ссылка;
	
	СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПараметрыПересчетаСуммыНДСВСтрокеТЧ(Объект);
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьСумму");
	СтруктураДействий.Вставить("ПересчитатьСуммуНДС",  СтруктураПересчетаСуммы);
	СтруктураДействий.Вставить("ПересчитатьСуммуСНДС", СтруктураПересчетаСуммы);
	
	Если ПересчитатьСуммовыеПоказатели Тогда
		ПараметрыЗаполнения.СтруктураДействий = СтруктураДействий;
	КонецЕсли;
	
	ПараметрыЗаполнения.ИмяПоляРаспоряжение = "ДокументРеализации";
	
	НоменклатураСервер.ЗаполнитьНомераГТД(Объект.Товары, "ПоРаспоряжениям", ПараметрыЗаполнения);
	
	Если Не ПересчитатьСуммовыеПоказатели Тогда
		ОбработкаТабличнойЧастиСервер.ОбработатьТЧ(Объект.Товары, СтруктураДействий, Неопределено);
	КонецЕсли;
	
КонецПроцедуры// } #wortmann

// #wortmann { 
// Получение Счет-фактуры по ДокументРеализации 
// e1cib/data/Задача.ЗадачаИсполнителя?ref=8131bcee7bda45d711edd201ed470fa8
// Галфинд_Домнышева 2023/04/10
&НаСервере
Функция ПолучитьСчетФактуруПоСвязаннымДокумента(ДокументРеализации)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КорректировкаРеализации.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВременнаяТаблица
		|ИЗ
		|	Документ.КорректировкаРеализации КАК КорректировкаРеализации
		|ГДЕ
		|	КорректировкаРеализации.ДокументОснование = &ДокументОснование
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СчетФактураВыданный.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.СчетФактураВыданный КАК СчетФактураВыданный,
		|	ВременнаяТаблица КАК ВременнаяТаблица
		|ГДЕ
		|	СчетФактураВыданный.ДокументОснование В (ВременнаяТаблица.Ссылка)
		|	И СчетФактураВыданный.ПометкаУдаления = ЛОЖЬ";
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументРеализации);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		Выборка.Следующий();
		Возврат Выборка.Ссылка;
	КонецЕсли;

КонецФункции// } #wortmann

#КонецОбласти
