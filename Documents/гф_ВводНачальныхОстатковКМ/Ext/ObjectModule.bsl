
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

&Перед("ПриЗаписи")
Процедура гф_ПриЗаписи(Отказ)
	
	// #wortmann {
	// e1cib/data/Задача.ЗадачаИсполнителя?ref=8eabb083fed1320811ee48c6c0d12370
	// Проверяем, подбирались ли Штрихкоды 
	// Галфинд_Домнышева 2023/09/06
	Если НЕ НаличиеЗаполненныхШтрихкодов() Тогда
		Отказ = Истина;
		ОбщегоНазначения.СообщитьПользователю("Не подобраны GTIN. ");
		Возврат;
	КонецЕсли;	
	// } #wortmann	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ДанныеЗагрузки.ЗначениеШтрихкода КАК ЗначениеШтрихкода,
	|	ДанныеЗагрузки.GTIN КАК GTIN,
	|	ДанныеЗагрузки.НомерГТД КАК НомерГТД,
	|	ДанныеЗагрузки.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ДанныеЗагрузки.спрНомерГТД КАК спрНомерГТД
	|ПОМЕСТИТЬ ДанныеЗагрузки
	|ИЗ
	|	&ДанныеЗагрузки КАК ДанныеЗагрузки
	// #wortmann {
	// e1cib/data/Задача.ЗадачаИсполнителя?ref=8eabb083fed1320811ee48c6c0d12370
	// Отсекаем строки с незаполненным Штрихкодом, на них не нужно создавать КМ 
	// Галфинд_Домнышева 2023/09/06
	|ГДЕ
	|	НЕ ДанныеЗагрузки.GTIN = """"
    // } #wortmann	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеЗагрузки.ЗначениеШтрихкода КАК ЗначениеШтрихкода,
	|	ДанныеЗагрузки.НомерГТД КАК НомерГТД,
	|	ДанныеЗагрузки.GTIN КАК GTIN,
	|	ДанныеЗагрузки.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ДанныеЗагрузки.спрНомерГТД КАК спрНомерГТД
	|ПОМЕСТИТЬ ДанныеДляГенерацииКМ
	|ИЗ
	|	ДанныеЗагрузки КАК ДанныеЗагрузки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ШтрихкодыУпаковокТоваров КАК ШтрихкодыУпаковокТоваров
	|		ПО ДанныеЗагрузки.ЗначениеШтрихкода = ШтрихкодыУпаковокТоваров.ЗначениеШтрихкода
	|ГДЕ
	|	ШтрихкодыУпаковокТоваров.Ссылка ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ШтрихкодыНоменклатуры.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК Номенклатура,
	|	ЕСТЬNULL(ШтрихкодыНоменклатуры.Характеристика, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)) КАК Характеристика,
	|	ЕСТЬNULL(ШтрихкодыНоменклатуры.Упаковка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) КАК Упаковка,
	|	ДанныеДляГенерацииКМ.ЗначениеШтрихкода КАК ЗначениеШтрихкода,
	|	ЕСТЬNULL(НомераГТД.Ссылка, ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)) КАК гф_НомерГТД
	|ИЗ
	|	ДанныеДляГенерацииКМ КАК ДанныеДляГенерацииКМ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ПО ДанныеДляГенерацииКМ.GTIN = ШтрихкодыНоменклатуры.Штрихкод
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НомераГТД КАК НомераГТД
	|		ПО ДанныеДляГенерацииКМ.спрНомерГТД = НомераГТД.Ссылка";
	
	ДанныеЗагрузки = ШтрихкодыУпаковокТоваров.Выгрузить();
	Запрос.УстановитьПараметр("ДанныеЗагрузки", ДанныеЗагрузки);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		// vvv Галфинд \ Sakovich 12.02.2024
		// e1cib/data/Задача.ЗадачаИсполнителя?ref=8eabb083fed1320811eec997e6c7cd60
		Если гф_ЭмиссияКодовМаркировкиВызовСервера.ЭлементШкСуществует(Выборка.ЗначениеШтрихкода) Тогда
			Продолжить;
		КонецЕсли;
		// ^^^ Галфинд \ Sakovich 12.02.2024
		ШК = Справочники.ШтрихкодыУпаковокТоваров.СоздатьЭлемент();
		// ЗначениеШтрихкода, Номенклатура, Характеристика, Упаковка, гф_НомерГТД
		ЗаполнитьЗначенияСвойств(ШК, Выборка);
		ШК.ТипУпаковки = Перечисления.ТипыУпаковок.МаркированныйТовар;
		ШК.ТипШтрихкода = Перечисления.ТипыШтрихкодов.GS1_DataMatrix;
		ШК.Количество = 1;
		//ШК.КоличествоПотребительскихУпаковок =1;
		ШК.гф_ЗначениеШтрихкодаBase64 = ШтрихкодированиеИСКлиентСервер.ШтрихкодВBase64(ШК.ЗначениеШтрихкода);
		ШК.гф_Комментарий = "Создан документом " + Ссылка;
		ШК.Ответственный = Пользователи.АвторизованныйПользователь();
		Попытка
			ШК.Записать();
		Исключение
			Отказ = Истина;
			ОбщегоНазначения.СообщитьПользователю("Ошибка создания элемента справочника " + 
			"""Штрихкоды упаковок товаров"" (" + Выборка["ЗначениеШтрихкода"] + ")");
			Прервать;
		КонецПопытки;
	КонецЦикла;
	
	// #wortmann {
	// e1cib/data/Задача.ЗадачаИсполнителя?ref=8eabb083fed1320811ee48c6c0d12370
	// На строки с незаполненным Штрихкодом не создаваются КМ, перечисляем их пользователю. 
	// Галфинд_Домнышева 2023/09/06
	ОтборНеЗаполненныхСтрок = Новый Структура;
	ОтборНеЗаполненныхСтрок.Вставить("GTIN", "");
	НеЗаполненныйШтрихкод = ДанныеЗагрузки.НайтиСтроки(ОтборНеЗаполненныхСтрок);
	
	Для каждого Строка Из НеЗаполненныйШтрихкод Цикл
		ОбщегоНазначения.СообщитьПользователю("Для строки """ + Строка.НомерСтроки +
			""" не заполнен GTIN, элемент справочника ""Штрихкоды упаковок товаров"" по ней не создан.");
	КонецЦикла;
    // } #wortmann
КонецПроцедуры

&После("ОбработкаЗаполнения")
Процедура гф_ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Если ЭтоНовый() Тогда
		Ответственный = Пользователи.АвторизованныйПользователь();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
// #wortmann {
// e1cib/data/Задача.ЗадачаИсполнителя?ref=8eabb083fed1320811ee48c6c0d12370
// Функция проверяет наличие заполненных ячеек со Штрихкодом. 
// Галфинд_Домнышева 2023/09/06
//
// Возвращаемое значение:
//	Булево - Если есть хоть одна заполнення строка, Истина, иначе Ложь
Функция НаличиеЗаполненныхШтрихкодов() 
	
	ДанныеЗагрузки = ШтрихкодыУпаковокТоваров.Выгрузить(); 
	
	ШтрихкодыТЗ = ДанныеЗагрузки.Скопировать(,"GTIN");
	ШтрихкодыТЗ.Свернуть("GTIN");
	
	Для Каждого Стр Из ШтрихкодыТЗ Цикл
		Если Стр.GTIN <> "" Тогда
			Возврат Истина;
		КонецЕсли;	
		
	КонецЦикла; 
	
	Возврат Ложь; 
	
КонецФункции// } #wortmann

#КонецОбласти

#КонецЕсли