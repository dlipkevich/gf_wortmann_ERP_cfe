
&После("ДобавитьКомандыПечати")
Процедура гф_ДобавитьКомандыПечати(КомандыПечати)
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПФ_Импорт40";
	КомандаПечати.Представление = НСтр("ru = 'Импорт 40';
										|en = 'Import 40'");
	//КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.МенеджерПечати = "Документ.ПриобретениеТоваровУслуг";
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПФ_Импорт70";
	КомандаПечати.Представление = НСтр("ru = 'Импорт 70';
										|en = 'Import 70'");
	//КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.МенеджерПечати = "Документ.ПриобретениеТоваровУслуг";
	
КонецПроцедуры

&После("Печать")
Процедура гф_Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода)
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_Импорт40") Тогда	
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"ПФ_Импорт40",
		НСтр("ru = 'Импорт 40'"),
		СформироватьПечатнуюФормуИмпорт40(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_Импорт70") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"ПФ_Импорт70",
		НСтр("ru = 'Импорт 70'"),
		СформироватьПечатнуюФормуИмпорт70(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));
	КонецЕсли;
	
КонецПроцедуры

Функция СформироватьПечатнуюФормуИмпорт40(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы  = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ";
	
	НомерТипаДокумента = 0;
	
	Для Каждого СтруктураОбъектов Из МассивОбъектов Цикл
		
		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		Макет = ПолучитьМакет("МакетИмпорт40");
		
		ОбластьЗаголовокТаблицы	= Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		ОбластьСтрока 				= Макет.ПолучитьОбласть("Строка");
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		
		"ВЫБРАТЬ
		|	ВариантыКомплектацииНоменклатуры.Наименование КАК Наименование,
		|	ПриобретениеТоваровУслуг.КоличествоКоробов КАК КоличествоКоробов,
		|	ВариантыКомплектацииНоменклатуры.Владелец КАК Владелец,
		|	ВариантыКомплектацииНоменклатуры.Количество КАК Количество
		|ПОМЕСТИТЬ ТоварыВариантКомплектации
		|ИЗ
		|	Документ.ПриобретениеТоваровУслуг.гф_ПродукцияВКоробах КАК ПриобретениеТоваровУслуг
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыКомплектацииНоменклатуры КАК ВариантыКомплектацииНоменклатуры
		|		ПО ПриобретениеТоваровУслуг.ВариантКомплектации = ВариантыКомплектацииНоменклатуры.Ссылка
		|ГДЕ
		|	ПриобретениеТоваровУслуг.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ПриобретениеТоваровУслуг.ВариантКомплектации,
		|	ПриобретениеТоваровУслуг.КоличествоКоробов,
		|	ПриобретениеТоваровУслуг.ЗаказПоставщику,
		|	ПриобретениеТоваровУслуг.IDКороба,
		|	ВариантыКомплектацииНоменклатуры.Наименование,
		|	ВариантыКомплектацииНоменклатуры.Характеристика,
		|	ВариантыКомплектацииНоменклатуры.Количество,
		|	ВариантыКомплектацииНоменклатуры.НоменклатураОсновногоКомпонента,
		|	ВариантыКомплектацииНоменклатуры.ХарактеристикаОсновногоКомпонента,
		|	ВариантыКомплектацииНоменклатуры.Владелец
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыВариантКомплектации.Наименование КАК Наименование,
		|	ТоварыВариантКомплектации.КоличествоКоробов КАК КоличествоКоробов,
		|	ТоварыВариантКомплектации.Владелец КАК Владелец,
		|	ТоварыВариантКомплектации.Количество КАК Количество,
		|	Номенклатура.КодТНВЭД КАК КодТНВЭД,
		|	Номенклатура.Марка КАК Марка,
		|	Номенклатура.СтранаПроисхождения КАК СтранаПроисхождения
		|ПОМЕСТИТЬ НоменклатураРеквизиты
		|ИЗ
		|	ТоварыВариантКомплектации КАК ТоварыВариантКомплектации
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
		|		ПО ТоварыВариантКомплектации.Владелец = Номенклатура.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(ВариантыКомплектацииНоменклатурыТовары.Количество) КАК КоличествоВПарах,
		|	НоменклатураРеквизиты.Наименование КАК Наименование,
		|	НоменклатураРеквизиты.КоличествоКоробов КАК КоличествоКоробов,
		|	НоменклатураРеквизиты.Владелец КАК Владелец,
		|	НоменклатураРеквизиты.Количество КАК Количество,
		|	НоменклатураРеквизиты.КодТНВЭД КАК КодТНВЭД,
		|	НоменклатураРеквизиты.Марка КАК Марка,
		|	НоменклатураРеквизиты.СтранаПроисхождения КАК СтранаПроисхождения,
		|	ВариантыКомплектацииНоменклатурыТовары.Номенклатура КАК Номенклатура
		|ПОМЕСТИТЬ ВременнаяТаблицаТовары
		|ИЗ
		|	НоменклатураРеквизиты КАК НоменклатураРеквизиты
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыКомплектацииНоменклатуры.Товары КАК ВариантыКомплектацииНоменклатурыТовары
		|		ПО НоменклатураРеквизиты.Владелец = ВариантыКомплектацииНоменклатурыТовары.Номенклатура
		|
		|СГРУППИРОВАТЬ ПО
		|	НоменклатураРеквизиты.Наименование,
		|	НоменклатураРеквизиты.КоличествоКоробов,
		|	НоменклатураРеквизиты.Владелец,
		|	НоменклатураРеквизиты.Количество,
		|	НоменклатураРеквизиты.КодТНВЭД,
		|	НоменклатураРеквизиты.Марка,
		|	НоменклатураРеквизиты.СтранаПроисхождения,
		|	ВариантыКомплектацииНоменклатурыТовары.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаТовары.КоличествоВПарах КАК КоличествоВПарах,
		|	ВременнаяТаблицаТовары.Наименование КАК Артикул,
		|	ВременнаяТаблицаТовары.КоличествоКоробов КАК КоличествоКоробов,
		|	ВременнаяТаблицаТовары.Владелец КАК Владелец,
		|	ВременнаяТаблицаТовары.Количество КАК КоличествоВКоробах,
		|	ВременнаяТаблицаТовары.КодТНВЭД КАК КодТНВЭД,
		|	ВременнаяТаблицаТовары.Марка КАК Марка,
		|	ВременнаяТаблицаТовары.Номенклатура КАК Номенклатура,
		|	СтраныМира.КодАльфа2 КАК СтранаПроисхождения
		|ИЗ
		|	ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК СтраныМира
		|		ПО ВременнаяТаблицаТовары.СтранаПроисхождения = СтраныМира.Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", СтруктураОбъектов.Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
		
		НомерСтроки 		= 0;
		ЕдиноеИзмерение 	= "Пара";	
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл	
			НомерСтроки = НомерСтроки + 1;
			
			ОбластьСтрока.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
			
			ОбластьСтрока.Параметры.НомерПП            = НомерСтроки;
			ОбластьСтрока.Параметры.ЕдиноеИзмерение    = ЕдиноеИзмерение;
			
			ТабличныйДокумент.Вывести(ОбластьСтрока); 
			
		КонецЦикла;
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция СформироватьПечатнуюФормуИмпорт70(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы  = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ";
	
	НомерТипаДокумента = 0;
	
	Для Каждого СтруктураОбъектов Из МассивОбъектов Цикл
		
		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		Макет = ПолучитьМакет("МакетИмпорт70");
		
		ОбластьЗаголовокТаблицы	= Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		ОбластьСтрока 				= Макет.ПолучитьОбласть("Строка");
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		
		"ВЫБРАТЬ
		|	ВариантыКомплектацииНоменклатуры.Наименование КАК Наименование,
		|	ПриобретениеТоваровУслуг.КоличествоКоробов КАК КоличествоКоробов,
		|	ВариантыКомплектацииНоменклатуры.Владелец КАК Владелец,
		|	ВариантыКомплектацииНоменклатуры.Количество КАК Количество
		|ПОМЕСТИТЬ ТоварыВариантКомплектации
		|ИЗ
		|	Документ.ПриобретениеТоваровУслуг.гф_ПродукцияВКоробах КАК ПриобретениеТоваровУслуг
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыКомплектацииНоменклатуры КАК ВариантыКомплектацииНоменклатуры
		|		ПО ПриобретениеТоваровУслуг.ВариантКомплектации = ВариантыКомплектацииНоменклатуры.Ссылка
		|ГДЕ
		|	ПриобретениеТоваровУслуг.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ПриобретениеТоваровУслуг.ВариантКомплектации,
		|	ПриобретениеТоваровУслуг.КоличествоКоробов,
		|	ПриобретениеТоваровУслуг.ЗаказПоставщику,
		|	ПриобретениеТоваровУслуг.IDКороба,
		|	ВариантыКомплектацииНоменклатуры.Наименование,
		|	ВариантыКомплектацииНоменклатуры.Характеристика,
		|	ВариантыКомплектацииНоменклатуры.Количество,
		|	ВариантыКомплектацииНоменклатуры.НоменклатураОсновногоКомпонента,
		|	ВариантыКомплектацииНоменклатуры.ХарактеристикаОсновногоКомпонента,
		|	ВариантыКомплектацииНоменклатуры.Владелец
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыВариантКомплектации.Наименование КАК Наименование,
		|	ТоварыВариантКомплектации.КоличествоКоробов КАК КоличествоКоробов,
		|	ТоварыВариантКомплектации.Владелец КАК Владелец,
		|	ТоварыВариантКомплектации.Количество КАК Количество,
		|	Номенклатура.КодТНВЭД КАК КодТНВЭД,
		|	Номенклатура.Марка КАК Марка,
		|	Номенклатура.СтранаПроисхождения КАК СтранаПроисхождения,
		|	Номенклатура.ПроизводительИмпортерКонтрагент КАК ПроизводительИмпортерКонтрагент,
		|	Номенклатура.НаименованиеПолное КАК НаименованиеПолное
		|ПОМЕСТИТЬ НоменклатураРеквизиты
		|ИЗ
		|	ТоварыВариантКомплектации КАК ТоварыВариантКомплектации
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
		|		ПО ТоварыВариантКомплектации.Владелец = Номенклатура.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(ВариантыКомплектацииНоменклатурыТовары.Количество) КАК КоличествоВПарах,
		|	НоменклатураРеквизиты.Наименование КАК Наименование,
		|	НоменклатураРеквизиты.КоличествоКоробов КАК КоличествоКоробов,
		|	НоменклатураРеквизиты.Владелец КАК Владелец,
		|	НоменклатураРеквизиты.Количество КАК Количество,
		|	НоменклатураРеквизиты.КодТНВЭД КАК КодТНВЭД,
		|	НоменклатураРеквизиты.Марка КАК Марка,
		|	НоменклатураРеквизиты.СтранаПроисхождения КАК СтранаПроисхождения,
		|	ВариантыКомплектацииНоменклатурыТовары.Номенклатура КАК Номенклатура,
		|	НоменклатураРеквизиты.ПроизводительИмпортерКонтрагент КАК ПроизводительИмпортерКонтрагент,
		|	НоменклатураРеквизиты.НаименованиеПолное КАК НаименованиеПолное
		|ПОМЕСТИТЬ ВременнаяТаблицаТовары
		|ИЗ
		|	НоменклатураРеквизиты КАК НоменклатураРеквизиты
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыКомплектацииНоменклатуры.Товары КАК ВариантыКомплектацииНоменклатурыТовары
		|		ПО НоменклатураРеквизиты.Владелец = ВариантыКомплектацииНоменклатурыТовары.Номенклатура
		|
		|СГРУППИРОВАТЬ ПО
		|	НоменклатураРеквизиты.Наименование,
		|	НоменклатураРеквизиты.КоличествоКоробов,
		|	НоменклатураРеквизиты.Владелец,
		|	НоменклатураРеквизиты.Количество,
		|	НоменклатураРеквизиты.КодТНВЭД,
		|	НоменклатураРеквизиты.Марка,
		|	НоменклатураРеквизиты.СтранаПроисхождения,
		|	ВариантыКомплектацииНоменклатурыТовары.Номенклатура,
		|	НоменклатураРеквизиты.ПроизводительИмпортерКонтрагент,
		|	НоменклатураРеквизиты.НаименованиеПолное
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаТовары.КоличествоВПарах КАК КоличествоВПарах,
		|	ВременнаяТаблицаТовары.Наименование КАК Артикул,
		|	ВременнаяТаблицаТовары.КоличествоКоробов КАК КоличествоКоробов,
		|	ВременнаяТаблицаТовары.Владелец КАК Владелец,
		|	ВременнаяТаблицаТовары.Количество КАК КоличествоВКоробах,
		|	ВременнаяТаблицаТовары.КодТНВЭД КАК КодТНВЭД,
		|	ВременнаяТаблицаТовары.Марка КАК Марка,
		|	ВременнаяТаблицаТовары.Номенклатура КАК Номенклатура,
		|	СтраныМира.КодАльфа2 КАК СтранаПроисхождения,
		|	ВременнаяТаблицаТовары.ПроизводительИмпортерКонтрагент КАК ПроизводительИмпортерКонтрагент,
		|	ВременнаяТаблицаТовары.НаименованиеПолное КАК НаименованиеПолное,
		|	ОбластиДействияСертификатовНоменклатуры.СертификатНоменклатуры КАК СертификатНоменклатуры,
		|	СертификатыНоменклатуры.ДатаНачалаСрокаДействия КАК ДатаНачалаСрокаДействия,
		|	СертификатыНоменклатуры.ДатаОкончанияСрокаДействия КАК ДатаОкончанияСрокаДействия
		|ИЗ
		|	ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК СтраныМира
		|		ПО ВременнаяТаблицаТовары.СтранаПроисхождения = СтраныМира.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОбластиДействияСертификатовНоменклатуры КАК ОбластиДействияСертификатовНоменклатуры
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СертификатыНоменклатуры КАК СертификатыНоменклатуры
		|			ПО ОбластиДействияСертификатовНоменклатуры.СертификатНоменклатуры = СертификатыНоменклатуры.Ссылка
		|		ПО ВременнаяТаблицаТовары.Номенклатура = ОбластиДействияСертификатовНоменклатуры.Номенклатура";
		
		Запрос.УстановитьПараметр("Ссылка", СтруктураОбъектов.Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
		
		НомерСтроки 	= 0;
		Код  			= "01402";
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл	
			НомерСтроки = НомерСтроки + 1;
			
			ОбластьСтрока.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
			
			ОбластьСтрока.Параметры.НомерПП 	= НомерСтроки;
			ОбластьСтрока.Параметры.Код     	= Код;
			ОбластьСтрока.Параметры.Дата    	= Строка(Формат(ВыборкаДетальныеЗаписи.ДатаНачалаСрокаДействия,"ДФ=dd.MM.yyyy"))
				+ " ДО " + Строка(Формат(ВыборкаДетальныеЗаписи.ДатаОкончанияСрокаДействия,"ДФ=dd.MM.yyyy"));
			//ОбластьСтрока.Параметры.Размер  = Строка(ВыборкаДетальныеЗаписи.МинРазмер) + "-" + Строка(ВыборкаДетальныеЗаписи.МаксРазмер);
			//ОбластьСтрока.Параметры.СтоимостьТаможенная = СтрЗаменить(Формат(ВыборкаДетальныеЗаписи.СтоимостьТаможенная,"ЧЦ=15; ЧДЦ=2; ЧРГ=''"),Символы.НПП,"");
			
			ТабличныйДокумент.Вывести(ОбластьСтрока); 
			
		КонецЦикла;
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;
		
КонецФункции

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// #wortmann {
// #5.2.04
// стандартные подсистемы. Загрузка из внешнего файла
// Галфинд Sakovich 2022/08/02
//
// Параметры:
//   Параметры - Структура - переопределяемые параметры (необходимо, 
//                  если поддерживается загрузка в несколько табличных частей).
Процедура УстановитьПараметрыЗагрузкиИзФайлаВТЧ(Параметры) Экспорт
	
	//Если Параметры["ИмяТабличнойЧасти"] = "Документ.ПроизводствоБезЗаказа.ТабличнаяЧасть.ВыходныеИзделия" Тогда
	//	Параметры["ИмяМакетаСШаблоном"] = "ЗагрузкаИзФайлаВыходныеИзделия";
	//КонецЕсли;
	Если Параметры["ИмяТабличнойЧасти"] = "Документ.ПроизводствоБезЗаказа.ТабличнаяЧасть.гф_ПродукцияВКоробах" Тогда
		Параметры["ИмяМакетаСШаблоном"] = "ЗагрузкаИзФайлагф_ПродукцияВКоробах";
	КонецЕсли;
	
КонецПроцедуры // } #wortmann

// #wortmann {
// #5.2.04
// прикладной алгоритм поиска данных в ИБ по данным, загруженным из файла
// Галфинд Sakovich 2022/08/02
// Производит сопоставление данных, загружаемых в табличную часть ПолноеИмяТабличнойЧасти,
// с данными в ИБ, и заполняет параметры АдресТаблицыСопоставления и СписокНеоднозначностей.
// СписокНеоднозначностей содержит список неоднозначных значений, для которых в ИБ имеется несколько
// подходящих вариантов.
//
// Параметры:
//   АдресЗагружаемыхДанных    - Строка - адрес временного хранилища с таблицей значений, в которой
//                                        находятся загруженные данные из файла. Состав колонок:
//     * Идентификатор - Число - порядковый номер строки.
//       Остальные колонки соответствуют колонкам макета ЗагрузкаИзФайла.
//   АдресТаблицыСопоставления - Строка - адрес временного хранилища с пустой таблицей значений,
//                                        являющейся копией табличной части документа, 
//                                        которую необходимо заполнить из таблицы АдресЗагружаемыхДанных.
//   СписокНеоднозначностей - ТаблицаЗначений - список неоднозначных значений:
//     * Колонка       - Строка - имя колонки, в которой была обнаружена неоднозначность.
//     * Идентификатор - Число - идентификатор строки, в которой была обнаружена неоднозначность.
//   ПолноеИмяТабличнойЧасти   - Строка - полное имя табличной части, в которую загружаются данные.
//   ДополнительныеПараметры   - Произвольный - любые дополнительные сведения.
//
Процедура СопоставитьЗагружаемыеДанные(АдресЗагружаемыхДанных, 
	АдресТаблицыСопоставления, 
	СписокНеоднозначностей, 
	ПолноеИмяТабличнойЧасти, 
	ДополнительныеПараметры) Экспорт

	Если ПолноеИмяТабличнойЧасти = "Документ.ПриобретениеТоваровУслуг.ТабличнаяЧасть.Товары" Тогда
		
		Товары = ПолучитьИзВременногоХранилища(АдресТаблицыСопоставления); // ТаблицаЗначений
		ЗагружаемыеДанные = ПолучитьИзВременногоХранилища(АдресЗагружаемыхДанных); // ТаблицаЗначений
		
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВЫРАЗИТЬ(ДанныеДляСопоставления.Артикул КАК СТРОКА(50)) КАК Артикул,
		|	ДанныеДляСопоставления.Номенклатура КАК Номенклатура,
		|	ДанныеДляСопоставления.Идентификатор КАК Идентификатор
		|ПОМЕСТИТЬ ДанныеДляСопоставления
		|ИЗ
		|	&ДанныеДляСопоставления КАК ДанныеДляСопоставления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СпрНоменклатура.Ссылка КАК Ссылка,
		|	СпрНоменклатура.Артикул КАК Артикул,
		|	ДанныеДляСопоставления.Идентификатор КАК Идентификатор
		|ПОМЕСТИТЬ СопоставленнаяНоменклатураПоАртикулу
		|ИЗ
		|	ДанныеДляСопоставления КАК ДанныеДляСопоставления
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|		ПО (СпрНоменклатура.Артикул = ДанныеДляСопоставления.Артикул)
		|			И (ДанныеДляСопоставления.Артикул <> """")
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Идентификатор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеДляСопоставления.Номенклатура КАК Номенклатура,
		|	ДанныеДляСопоставления.Идентификатор КАК Идентификатор
		|ПОМЕСТИТЬ ДанныеДляСопоставленияПоНаименованию
		|ИЗ
		|	ДанныеДляСопоставления КАК ДанныеДляСопоставления
		|		ЛЕВОЕ СОЕДИНЕНИЕ СопоставленнаяНоменклатураПоАртикулу КАК СопоставленнаяНоменклатураПоАртикулу
		|		ПО ДанныеДляСопоставления.Идентификатор = СопоставленнаяНоменклатураПоАртикулу.Идентификатор
		|ГДЕ СопоставленнаяНоменклатураПоАртикулу.Идентификатор ЕСТЬ NULL
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Идентификатор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(СпрНоменклатура.Ссылка) КАК Ссылка,
		|	ДанныеДляСопоставленияПоНаименованию.Идентификатор КАК Идентификатор,
		|	КОЛИЧЕСТВО(ДанныеДляСопоставленияПоНаименованию.Идентификатор) КАК Количество
		|ИЗ
		|	ДанныеДляСопоставленияПоНаименованию КАК ДанныеДляСопоставленияПоНаименованию
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|		ПО (СпрНоменклатура.Наименование = (ВЫРАЗИТЬ(ДанныеДляСопоставленияПоНаименованию.Номенклатура КАК СТРОКА(500))))
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеДляСопоставленияПоНаименованию.Идентификатор
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	МАКСИМУМ(СопоставленнаяНоменклатураПоАртикулу.Ссылка),
		|	СопоставленнаяНоменклатураПоАртикулу.Идентификатор,
		|	КОЛИЧЕСТВО(СопоставленнаяНоменклатураПоАртикулу.Идентификатор)
		|ИЗ
		|	СопоставленнаяНоменклатураПоАртикулу КАК СопоставленнаяНоменклатураПоАртикулу
		|
		|СГРУППИРОВАТЬ ПО
		|	СопоставленнаяНоменклатураПоАртикулу.Идентификатор";
		
		Запрос.УстановитьПараметр("ДанныеДляСопоставления", ЗагружаемыеДанные);
		РезультатыЗапросов = Запрос.ВыполнитьПакет(); // Массив из РезультатЗапроса
		
		ТаблицаНоменклатура = РезультатыЗапросов[3].Выгрузить(); // ТаблицаЗначений
		Для каждого СтрокаТаблицы Из ЗагружаемыеДанные Цикл
			
			Товар = Товары.Добавить();
			Товар.Идентификатор = СтрокаТаблицы.Идентификатор;
			Товар.КоличествоУпаковок = СтрокаТаблицы.КоличествоУпаковок;
			
			СтрокаНоменклатура = ТаблицаНоменклатура.Найти(СтрокаТаблицы.Идентификатор, "Идентификатор");
			Если СтрокаНоменклатура <> Неопределено Тогда 
				Если СтрокаНоменклатура.Количество = 1 Тогда 
					Товар.Номенклатура = СтрокаНоменклатура.Ссылка; 
				ИначеЕсли СтрокаНоменклатура.Количество > 1 Тогда
					ЗаписьОНеоднозначности = СписокНеоднозначностей.Добавить();
					ЗаписьОНеоднозначности.Идентификатор = СтрокаТаблицы.Идентификатор;
					ЗаписьОНеоднозначности.Колонка = "Номенклатура";
				Иначе
					Продолжить;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

	Если ПолноеИмяТабличнойЧасти = "Документ.ПриобретениеТоваровУслуг.ТабличнаяЧасть.гф_ПродукцияВКоробах" Тогда
		
		ТоварыВКоробах = ПолучитьИзВременногоХранилища(АдресТаблицыСопоставления); // ТаблицаЗначений
		ЗагружаемыеДанные = ПолучитьИзВременногоХранилища(АдресЗагружаемыхДанных); // ТаблицаЗначений
		
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВЫРАЗИТЬ(ДанныеДляСопоставления.IDКороба КАК СТРОКА(200)) КАК IDКороба,
		|	ВЫРАЗИТЬ(ДанныеДляСопоставления.ВариантКомплектации КАК СТРОКА(100)) КАК ВариантКомплектации,
		|	ДанныеДляСопоставления.Идентификатор КАК Идентификатор
		|ПОМЕСТИТЬ ДанныеДляСопоставления
		|ИЗ
		|	&ДанныеДляСопоставления КАК ДанныеДляСопоставления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СпрВариантыКомплектацииНоменклатуры.Ссылка КАК Ссылка,
		|	ДанныеДляСопоставления.Идентификатор КАК Идентификатор
		|ПОМЕСТИТЬ СопоставлениеВариантыКомплектацииПоНаименованию
		|ИЗ
		|	ДанныеДляСопоставления КАК ДанныеДляСопоставления
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВариантыКомплектацииНоменклатуры КАК СпрВариантыКомплектацииНоменклатуры
		|		ПО (СпрВариантыКомплектацииНоменклатуры.Наименование = ДанныеДляСопоставления.ВариантКомплектации)
		|			И (ДанныеДляСопоставления.ВариантКомплектации <> """")
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Идентификатор
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДокУпаковочныйЛист.Ссылка КАК Ссылка,
		|	ДанныеДляСопоставления.Идентификатор КАК Идентификатор
		|ПОМЕСТИТЬ СопоставлениеУпаковочныеЛистыПоКоду
		|ИЗ
		|	ДанныеДляСопоставления КАК ДанныеДляСопоставления
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.УпаковочныйЛист КАК ДокУпаковочныйЛист
		|		ПО (ДокУпаковочныйЛист.Код = ДанныеДляСопоставления.IDКороба)
		|			И (ДанныеДляСопоставления.IDКороба <> """")
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Идентификатор
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(СопоставлениеВариантыКомплектацииПоНаименованию.Ссылка) КАК Ссылка,
		|	СопоставлениеВариантыКомплектацииПоНаименованию.Идентификатор КАК Идентификатор,
		|	КОЛИЧЕСТВО(СопоставлениеВариантыКомплектацииПоНаименованию.Идентификатор) КАК Количество
		|ИЗ
		|	СопоставлениеВариантыКомплектацииПоНаименованию КАК СопоставлениеВариантыКомплектацииПоНаименованию
		|
		|СГРУППИРОВАТЬ ПО
		|	СопоставлениеВариантыКомплектацииПоНаименованию.Идентификатор
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(СопоставлениеУпаковочныеЛистыПоКоду.Ссылка) КАК Ссылка,
		|	СопоставлениеУпаковочныеЛистыПоКоду.Идентификатор КАК Идентификатор,
		|	КОЛИЧЕСТВО(СопоставлениеУпаковочныеЛистыПоКоду.Идентификатор) КАК Количество
		|ИЗ
		|	СопоставлениеУпаковочныеЛистыПоКоду КАК СопоставлениеУпаковочныеЛистыПоКоду
		|
		|СГРУППИРОВАТЬ ПО
		|	СопоставлениеУпаковочныеЛистыПоКоду.Идентификатор";
		
		Запрос.УстановитьПараметр("ДанныеДляСопоставления", ЗагружаемыеДанные);
		РезультатыЗапросов = Запрос.ВыполнитьПакет(); // Массив из РезультатЗапроса
		
		ТаблицаВариантКомплектации = РезультатыЗапросов[3].Выгрузить(); // ТаблицаЗначений
		ТаблицаУпаковочныхЛистов = РезультатыЗапросов[4].Выгрузить(); // ТаблицаЗначений
		
		Для каждого СтрокаТаблицы Из ЗагружаемыеДанные Цикл
			
			Товар = ТоварыВКоробах.Добавить();
			Товар.Идентификатор = СтрокаТаблицы.Идентификатор;
			Товар.КоличествоКоробов = СтрокаТаблицы.КоличествоКоробов;
			
			СтрокаВариантКомплектации = ТаблицаВариантКомплектации.Найти(СтрокаТаблицы.Идентификатор, "Идентификатор");
			Если СтрокаВариантКомплектации <> Неопределено Тогда 
				Если СтрокаВариантКомплектации.Количество = 1 Тогда 
					Товар.ВариантКомплектации = СтрокаВариантКомплектации.Ссылка; 
				КонецЕсли;
				Если СтрокаВариантКомплектации.Количество > 1 Тогда
					ЗаписьОНеоднозначности = СписокНеоднозначностей.Добавить();
					ЗаписьОНеоднозначности.Идентификатор = СтрокаВариантКомплектации.Идентификатор;
					ЗаписьОНеоднозначности.Колонка = "ВариантКомплектации";
				КонецЕсли;
			КонецЕсли;
			
			СтрокаИДКороба = ТаблицаУпаковочныхЛистов.Найти(СтрокаТаблицы.Идентификатор, "Идентификатор");
			Если СтрокаИДКороба <> Неопределено Тогда 
				Если СтрокаИДКороба.Количество = 1 Тогда 
					Товар.IDКороба = СтрокаИДКороба.Ссылка;
				КонецЕсли;	
				Если СтрокаИДКороба.Количество > 1 Тогда
					ЗаписьОНеоднозначности = СписокНеоднозначностей.Добавить();
					ЗаписьОНеоднозначности.Идентификатор = СтрокаИДКороба.Идентификатор;
					ЗаписьОНеоднозначности.Колонка = "IDКороба";
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры // } #wortmann

// Возвращает список подходящих объектов ИБ для неоднозначного значения ячейки.
// 
// Параметры:
//   ПолноеИмяТабличнойЧасти   - Строка - полное имя табличной части, в которую загружаются данные.
//   СписокНеоднозначностей    - Массив из СправочникСсылка._ДемоНоменклатура - массив для заполнения
//   с неоднозначными данными.
//   ИмяКолонки                - Строка - имя колонки, в который возникла неоднозначность.
//   ЗагружаемыеЗначенияСтрока - Строка - загружаемые данные на основании которых возникла неоднозначность.
//   ДополнительныеПараметры   - Произвольный - любые дополнительные сведения.
//
Процедура ЗаполнитьСписокНеоднозначностей(ПолноеИмяТабличнойЧасти, 
	СписокНеоднозначностей, 
	ИмяКолонки, 
	ЗагружаемыеЗначенияСтрока, 
	ДополнительныеПараметры) Экспорт
	
	Если ПолноеИмяТабличнойЧасти = "Документ.ПроизводствоБезЗаказа.ТабличнаяЧасть.ВыходныеИзделия" Тогда
		Если ИмяКолонки = "Номенклатура" Тогда
			Запрос = Новый Запрос;
			
			ТекстГде = "";
			Если ЗначениеЗаполнено(ЗагружаемыеЗначенияСтрока.Номенклатура) Тогда
				ТекстГде = "ГДЕ Номенклатура.Наименование = &Наименование";
				Запрос.УстановитьПараметр("Наименование", ЗагружаемыеЗначенияСтрока.Номенклатура);
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ЗагружаемыеЗначенияСтрока.Артикул) Тогда
				Если ЗначениеЗаполнено(ТекстГде) Тогда
					ТекстГде = ТекстГде + " ИЛИ _ДемоНоменклатура.Артикул = &Артикул";
				Иначе
					ТекстГде = "Номенклатура.Артикул = &Артикул";
				КонецЕсли;
				Запрос.УстановитьПараметр("Артикул", ЗагружаемыеЗначенияСтрока.Артикул);
			КонецЕсли;
			
			Запрос.Текст = "ВЫБРАТЬ
			|	Номенклатура.Ссылка КАК Ссылка
			|ИЗ
			|	Справочник.Номенклатура КАК Номенклатура " + ТекстГде;
			
			РезультатЗапроса = Запрос.Выполнить();
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				СписокНеоднозначностей.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Если ПолноеИмяТабличнойЧасти = "Документ.ПроизводствоБезЗаказа.ТабличнаяЧасть.гф_ПродукцияВКоробах" Тогда
		Если ИмяКолонки = "ВариантКомплектации" Тогда
			Запрос = Новый Запрос;
			
			ТекстГде = "";
			Если ЗначениеЗаполнено(ЗагружаемыеЗначенияСтрока.ВариантКомплектации) Тогда
				ТекстГде = "ГДЕ ВариантКомплектации.Наименование = &Наименование";
				Запрос.УстановитьПараметр("Наименование", ЗагружаемыеЗначенияСтрока.ВариантКомплектации);
			КонецЕсли;
			
			Запрос.Текст = "ВЫБРАТЬ
			|	ВариантыКомплектации.Ссылка КАК Ссылка
			|ИЗ
			|	Справочник.ВариантыКомплектацииНоменклатуры КАК ВариантыКомплектации " + ТекстГде;
			
			РезультатЗапроса = Запрос.Выполнить();
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				СписокНеоднозначностей.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
			КонецЦикла;
		КонецЕсли;
		
		Если ИмяКолонки = "IDКороба" Тогда
			Запрос = Новый Запрос;
			
			ТекстГде = "";
			Если ЗначениеЗаполнено(ЗагружаемыеЗначенияСтрока.ВариантКомплектации) Тогда
				ТекстГде = "ГДЕ УпаковочныйЛист.Код = &Код";
				Запрос.УстановитьПараметр("Код", ЗагружаемыеЗначенияСтрока.IDКороба);
			КонецЕсли;
			
			Запрос.Текст = "ВЫБРАТЬ
			|	УпаковочныйЛист.Ссылка КАК Ссылка
			|ИЗ
			|	Документ.УпаковочныйЛист КАК УпаковочныйЛист " + ТекстГде;
			
			РезультатЗапроса = Запрос.Выполнить();
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				СписокНеоднозначностей.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
			КонецЦикла;
		КонецЕсли;		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
