
#Область ОбработчикиСобытийФормы
	
&НаСервере
Процедура гф_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)

	// #wortmann {
	// #маркировка товаров
	// Галфинд Sakovich 2022/09/22
	ЭтотОбъект["СтруктураЗаказНаЭмиссиюКодовМаркировки"] = Новый Структура;
	// } #wortmann
	
КонецПроцедуры

&НаСервере
Процедура гф_ПриЗаписиНаСервереПосле(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// #wortmann {
	// #маркировка товаров
	// Галфинд Sakovich 2022/09/22
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если ПараметрыЗаписи["РежимЗаписи"] <> РежимЗаписиДокумента.Проведение Тогда
		Возврат;
	КонецЕсли;
	
	Если Не Объект.Статус = Перечисления.СтатусыЗаказовПоставщикам.Согласован Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураДанныеЗаказаЭмиссии = 
	гф_ЭмиссияКодовМаркировкиВызовСервера.гф_СоздатьЗаказНаЭмиссиюКодовМаркировки(ТекущийОбъект.Ссылка);
	
	СтруктураЗаказНаЭмиссиюКодовМаркировки = СтруктураДанныеЗаказаЭмиссии;
	// } #wortmann
	
КонецПроцедуры

&НаКлиенте
Процедура гф_ПослеЗаписиПосле(ПараметрыЗаписи)
	
	// #wortmann {
	// #маркировка товаров
	// Галфинд Sakovich 2022/09/22
	Если Не ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		Возврат;
	КонецЕсли;
	
	ЗаказКодовВозможен = Неопределено;
	СтруктураЗаказНаЭмиссиюКодовМаркировки.Свойство("ЗаказКодовВозможен", ЗаказКодовВозможен);
	Если Не ЗаказКодовВозможен = Истина Тогда
		Возврат;	
	КонецЕсли;
	
	ЗаказНаЭмиссию = СтруктураЗаказНаЭмиссиюКодовМаркировки["ЗаказНаЭмиссиюКодовМаркировкиСУЗ"];
	
	лПараметры = Новый Структура("Ключ", ЗаказНаЭмиссию);
	ФормаЗаказаНаЭмиссию = ОткрытьФорму("Документ.ЗаказНаЭмиссиюКодовМаркировкиСУЗ.ФормаОбъекта", лПараметры);
	
	ПараметрыОбработкиДокументов = ИнтеграцияИСМПСлужебныйКлиентСервер.ПараметрыОбработкиДокументов();
	ПараметрыОбработкиДокументов.Ссылка = ЗаказНаЭмиссию;
	ПараметрыОбработкиДокументов.Организация = СтруктураЗаказНаЭмиссиюКодовМаркировки["Организация"];
	ПараметрыОбработкиДокументов.ДальнейшееДействие = ПредопределенноеЗначение(
	"Перечисление.ДальнейшиеДействияПоВзаимодействиюИСМП.ЗапроситеКодыМаркировки");
	
	// см. ИнтеграцияИСМПКлиент.ПодготовитьКПередаче()
	гф_ПодготовитьКПередаче(
	ФормаЗаказаНаЭмиссию,
	ФормаЗаказаНаЭмиссию.УникальныйИдентификатор,
	ПараметрыОбработкиДокументов);
	
	ФормаЗаказаНаЭмиссию.Записать();
	ФормаЗаказаНаЭмиссию.Закрыть();
	
	Если ЗначениеЗаполнено(ЗаказНаЭмиссию) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю("Создан документ " + ЗаказНаЭмиссию);
	КонецЕсли;
	// } #wortmann
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура гф_ПодготовитьКПередаче(
	Форма, 
	Идентификатор, 
	ПараметрыОбработкиДокументов, 
	ОповещениеПриЗавершении = Неопределено)
	
	ВходящиеДанные = Новый Массив;
	ВходящиеДанные.Добавить(ПараметрыОбработкиДокументов);
	
	РезультатОбмена = ИнтеграцияИСМПВызовСервера.ПодготовитьКПередаче(
		ВходящиеДанные,
		Идентификатор);
	
	ИнтеграцияИСМПСлужебныйКлиент.ОбработатьРезультатОбмена(
		РезультатОбмена, Форма, Неопределено, ОповещениеПриЗавершении);

КонецПроцедуры

#КонецОбласти

