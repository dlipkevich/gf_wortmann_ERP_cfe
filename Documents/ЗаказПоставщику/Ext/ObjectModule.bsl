#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

&После("ПередЗаписью")
Процедура гф_ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	// #wortmann {
	// Галфинд Sakovich 2022/12/11
	гф_УстановитьПризнакЗаказатьКМ(Отказ, РежимЗаписи)
	// } #wortmann
КонецПроцедуры

&После("ПриКопировании")
Процедура гф_ПриКопировании(ОбъектКопирования)
	// #wortmann {
	// Галфинд Sakovich 2022/12/11
	гф_ЗаказатьКМ = Ложь;
	гф_КМЭмитированы = Ложь;
	// } #wortmann
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура гф_ПересчитатьТЧТоварыНаОсновнииКоробов() Экспорт
	
	ВременнаяТаблицаТовары = Товары.Выгрузить();
	
	ВременнаяТаблицаТовары.Очистить();
	
	Для каждого СтрокаВКоробах из гф_ПродукцияВКоробах Цикл
		
		Если ЗначениеЗаполнено(СтрокаВКоробах.IDКороба) Тогда
			
			гф_ДобавитьСтрокиПоУпаковочномуЛисту(СтрокаВКоробах, ВременнаяТаблицаТовары);
			
			
		ИначеЕсли ЗначениеЗаполнено(СтрокаВКоробах.ВариантКомплектации) Тогда 
			
			гф_ДобавитьСтрокиПоВариантуКомплектации(СтрокаВКоробах, ВременнаяТаблицаТовары);
			
		Иначе
			Прервать;
		КонецЕсли;	
		
	КонецЦикла;	
	
	ВременнаяТаблицаТовары.Свернуть("Номенклатура, Характеристика, Назначение, Упаковка, Цена",
	"КоличествоУпаковок, Количество, Сумма");
	
	Товары.Загрузить(ВременнаяТаблицаТовары);
	
	СкладыСервер.ЗаполнитьСкладыВТабличнойЧасти(Склад, Ложь, Товары, Истина);
	
	СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПараметрыПересчетаСуммыНДСВСтрокеТЧ(ЭтотОбъект);
	
	СтруктураДействий = Новый Структура; 
	
	Если ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпорту Тогда
		СтруктураДействий.Вставить("ЗаполнитьСтавкуНДС", 
		ОбработкаТабличнойЧастиКлиентСервер.ПараметрыЗаполненияСтавкиНДС(ЭтотОбъект, Истина));
	КонецЕсли;
	
	СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураПересчетаСуммы);
	СтруктураДействий.Вставить("ПересчитатьСуммуСНДС", СтруктураПересчетаСуммы);
	
	ОбработкаТабличнойЧастиСервер.ОбработатьТЧ(Товары, СтруктураДействий, Неопределено);
	
КонецПроцедуры

Процедура гф_ДобавитьСтрокиПоУпаковочномуЛисту(СтрокаВКоробах, ВременнаяТаблицаТовары)
	
	РабочаяТаблица = Товары.Выгрузить();
	РабочаяТаблица.Очистить();
	
	Для каждого Строка из СтрокаВКоробах.IDКороба.Товары Цикл	
		
		НоваяСтрокаРТ = РабочаяТаблица.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаРТ, Строка);
		
		НоваяСтрокаРТ.Количество = ?(СтрокаВКоробах["КоличествоКоробов"] =  0, 
		НоваяСтрокаРТ.Количество, НоваяСтрокаРТ.Количество * СтрокаВКоробах["КоличествоКоробов"]);
		НоваяСтрокаРТ.КоличествоУпаковок = ?(СтрокаВКоробах["КоличествоКоробов"] =  0, 
		НоваяСтрокаРТ.КоличествоУпаковок, НоваяСтрокаРТ.КоличествоУпаковок * СтрокаВКоробах["КоличествоКоробов"]);
		
	КонецЦикла;
	
	ОбщегоНазначенияБПВызовСервера.РаспределитьСуммуПоКолонкеТаблицы(СтрокаВКоробах.СтоимостьКороба * 
	?(СтрокаВКоробах["КоличествоКоробов"] =  0, 1, СтрокаВКоробах["КоличествоКоробов"] ), РабочаяТаблица, "Сумма", "КоличествоУпаковок");
	
	Для каждого Строка из РабочаяТаблица Цикл
		
		НоваяСтрока = ВременнаяТаблицаТовары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Строка);
		НоваяСтрока.Цена = ?(НоваяСтрока.КоличествоУпаковок = 0, 0, НоваяСтрока.Сумма / НоваяСтрока.КоличествоУпаковок);
		
		Если ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпорту Тогда
			НоваяСтрока.СтавкаНДС = Справочники.СтавкиНДС.БезНДС;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура гф_ДобавитьСтрокиПоВариантуКомплектации(СтрокаВКоробах, ВременнаяТаблицаТовары)
	
	РабочаяТаблица = Товары.Выгрузить();
	РабочаяТаблица.Очистить();
	
	Для каждого Строка из СтрокаВКоробах.ВариантКомплектации.Товары Цикл
		
		НоваяСтрокаРТ = РабочаяТаблица.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаРТ, Строка);
		
		НоваяСтрокаРТ.Количество = ?(СтрокаВКоробах["КоличествоКоробов"] =  0, 
		НоваяСтрокаРТ.Количество, НоваяСтрокаРТ.Количество * СтрокаВКоробах["КоличествоКоробов"]);
		НоваяСтрокаРТ.КоличествоУпаковок = ?(СтрокаВКоробах["КоличествоКоробов"] =  0, 
		НоваяСтрокаРТ.КоличествоУпаковок, НоваяСтрокаРТ.КоличествоУпаковок * СтрокаВКоробах["КоличествоКоробов"]);
		
		НоваяСтрокаРТ.Назначение = Справочники.Назначения.гф_Техническое;
		
	КонецЦикла;
	
	ОбщегоНазначенияБПВызовСервера.РаспределитьСуммуПоКолонкеТаблицы(СтрокаВКоробах.СтоимостьКороба * 
	?(СтрокаВКоробах["КоличествоКоробов"] =  0, 1, СтрокаВКоробах["КоличествоКоробов"] ), РабочаяТаблица, "Сумма", "Количество");
	
	Для каждого Строка из РабочаяТаблица Цикл
		
		НоваяСтрока = ВременнаяТаблицаТовары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Строка);
		НоваяСтрока.Цена = ?(НоваяСтрока.Количество = 0, 0, НоваяСтрока.Сумма / НоваяСтрока.Количество);
		
		Если ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпорту Тогда
			НоваяСтрока.СтавкаНДС = Справочники.СтавкиНДС.БезНДС;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры	

Процедура гф_УстановитьПризнакЗаказатьКМ(Отказ, РежимЗаписи)
	
	Если Не (ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпорту) Тогда
		Возврат;
	КонецЕсли;
	тзТовары = Товары.Выгрузить();
	Если Не Документы.ПриобретениеТоваровУслуг.гф_ОпределитьНаличиеМаркируемойПродукции(тзТовары) Тогда
		Возврат;
	КонецЕсли;
	
	гф_ЗаказатьКМ = Истина;
	
КонецПроцедуры	

#КонецОбласти

#КонецЕсли