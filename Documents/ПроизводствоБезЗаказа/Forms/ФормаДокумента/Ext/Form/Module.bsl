
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура гф_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	// #wortmann {
	// #5.2.04
	// добавление элементов формы
	// Галфинд Sakovich 2022/08/02
	гф_ДобавитьЭлементыФормы();
	// } #wortmann
КонецПроцедуры

&НаСервере
Процедура гф_ДобавитьЭлементыФормы()
	
	ТипПолеФормы = Тип("ПолеФормы");
	ТипТаблицаФормы = Тип("ТаблицаФормы");
	ТипКнопкаФормы = Тип("КнопкаФормы");
	ТипГруппаФормы = Тип("ГруппаФормы");
	
	НоваяКоманда = Команды.Добавить("гф_ЗагрузитИзВнешнегоФайлаВыходныеИзделия");
	НоваяКоманда.Заголовок = "Загрузить из внешнего файла";
	НоваяКоманда.Подсказка = "Загрузить из внешнего файла";
	НоваяКоманда.Действие = "гф_ЗагрузитИзВнешнегоФайлаВыходныеИзделия";
	НоваяКоманда.ИзменяетСохраняемыеДанные = Истина;
	
	НовыйЭлемент = Элементы.Вставить("гф_ЗагрузитИзВнешнегоФайлаВыходныеИзделия",
		ТипКнопкаФормы, 
		Элементы.ВыходныеИзделияГруппаЗаполнить, 
		Элементы.ВыходныеИзделияПодобратьТовары);
	НовыйЭлемент.Заголовок = "Загрузить из внешнего файла";
	НовыйЭлемент.ИмяКоманды = "гф_ЗагрузитИзВнешнегоФайлаВыходныеИзделия";
	
	НовыйЭлемент = Элементы.Вставить("гф_ГруппаПродукцияВКоробах", ТипГруппаФормы,
		Элементы.ГруппаСтраницы, Элементы.ГруппаМатериалыИРаботы);
    НовыйЭлемент.Вид = ВидГруппыФормы.Страница;
	НовыйЭлемент.Заголовок = "Продукция в коробах";
	
	НовыйЭлемент = Элементы.Вставить("гф_ПродукцияВКоробах", ТипТаблицаФормы,
		Элементы.гф_ГруппаПродукцияВКоробах);
    НовыйЭлемент.ПутьКДанным = "Объект.гф_ПродукцияВКоробах"; 
	НовыйЭлемент.УстановитьДействие("ПриИзменении", "гф_ПродукцияВКоробахПриИзменении");
	
	НовыйЭлемент = Элементы.Вставить("ПродукцияВКоробахНомерСтроки", ТипПолеФормы,
		Элементы.гф_ПродукцияВКоробах);
    НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода; 
    НовыйЭлемент.ПутьКДанным = "Объект.гф_ПродукцияВКоробах.НомерСтроки";
	НовыйЭлемент.Заголовок = " N ";

	НовыйЭлемент = Элементы.Вставить("ПродукцияВКоробахВариантКомплектации", ТипПолеФормы,
		Элементы.гф_ПродукцияВКоробах);
    НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода; 
    НовыйЭлемент.ПутьКДанным = "Объект.гф_ПродукцияВКоробах.ВариантКомплектации"; 
	НовыйЭлемент.Заголовок = "Артикул с ростовкой (вариант комплектации)";
	
	НовыйЭлемент = Элементы.Вставить("ПродукцияВКоробахКоличествоКоробов", ТипПолеФормы,
		Элементы.гф_ПродукцияВКоробах);
    НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода; 
    НовыйЭлемент.ПутьКДанным = "Объект.гф_ПродукцияВКоробах.КоличествоКоробов"; 
	НовыйЭлемент.Заголовок = "Количество коробов";
	
	НовыйЭлемент = Элементы.Вставить("ПродукцияВКоробахЗаказПоставщику", ТипПолеФормы,
		Элементы.гф_ПродукцияВКоробах);
    НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода; 
    НовыйЭлемент.ПутьКДанным = "Объект.гф_ПродукцияВКоробах.ЗаказПоставщику"; 
	НовыйЭлемент.Заголовок = "Заказ поставщику";
	
	НоваяКоманда = Команды.Добавить("гф_ИзделияВКоробахСкопироватьСтроки");
	НоваяКоманда.Заголовок = "Скопировать строки";
	НоваяКоманда.Подсказка = "Скопировать строки в буфер обмена";
	НоваяКоманда.СочетаниеКлавиш = Новый СочетаниеКлавиш(Клавиша.C, Ложь, Истина, Истина);
	НоваяКоманда.Действие = "гф_ИзделияВКоробахСкопироватьСтроки";
	НоваяКоманда.Картинка = БиблиотекаКартинок.КопированиеСтрок;
	
	НовыйЭлемент = Элементы.Вставить("гф_ИзделияВКоробахСкопироватьСтроки",
		ТипКнопкаФормы, Элементы.гф_ПродукцияВКоробах.КоманднаяПанель);
	НовыйЭлемент.Заголовок = "Скопировать строки";
	НовыйЭлемент.ИмяКоманды = "гф_ИзделияВКоробахСкопироватьСтроки";
	
	НоваяКоманда = Команды.Добавить("гф_ИзделияВКоробахВставитьСтроки");
	НоваяКоманда.Заголовок = "Вставить строки";
	НоваяКоманда.Подсказка = "Вставить строки из буфера обмена";
	НоваяКоманда.СочетаниеКлавиш = Новый СочетаниеКлавиш(Клавиша.V, Ложь, Истина, Истина);
	НоваяКоманда.Действие = "гф_ИзделияВКоробахВставитьСтроки";
	НоваяКоманда.Картинка = БиблиотекаКартинок.ВставкаСтрок;
	
	НовыйЭлемент = Элементы.Вставить("гф_ИзделияВКоробахВставитьСтроки",
		ТипКнопкаФормы, Элементы.гф_ПродукцияВКоробах.КоманднаяПанель);
	НовыйЭлемент.Заголовок = "Вставить строки";
	НовыйЭлемент.ИмяКоманды = "гф_ИзделияВКоробахВставитьСтроки";

	НоваяКоманда = Команды.Добавить("гф_ЗагрузитИзВнешнегоФайлаИзделияВКоробах");
	НоваяКоманда.Заголовок = "Загрузить из внешнего файла";
	НоваяКоманда.Подсказка = "Загрузить из внешнего файла";
	НоваяКоманда.Действие = "гф_ЗагрузитИзВнешнегоФайлаИзделияВКоробах";
	НоваяКоманда.ИзменяетСохраняемыеДанные = Истина;
	
	НовыйЭлемент = Элементы.Вставить("гф_ЗагрузитИзВнешнегоФайлаИзделияВКоробах",
		ТипКнопкаФормы, Элементы.гф_ПродукцияВКоробах.КоманднаяПанель);
	НовыйЭлемент.Заголовок = "Загрузить из внешнего файла";
	НовыйЭлемент.ИмяКоманды = "гф_ЗагрузитИзВнешнегоФайлаИзделияВКоробах";

	НоваяКоманда = Команды.Добавить("гф_ЗаполнитьЗаказПоставщику");
	НоваяКоманда.Заголовок = "Заполнить заказ поставщику";
	НоваяКоманда.Подсказка = "Заполнить заказ поставщику для выделенных строк";
	НоваяКоманда.Действие = "гф_ЗаполнитьЗаказПоставщику";
	НоваяКоманда.ИзменяетСохраняемыеДанные = Истина;
	
	НовыйЭлемент = Элементы.Вставить("гф_ЗаполнитьЗаказПоставщику",
	ТипКнопкаФормы, Элементы.гф_ПродукцияВКоробах.КоманднаяПанель);
	НовыйЭлемент.Заголовок = "Заполнить заказ поставщику";
	НовыйЭлемент.ИмяКоманды = "гф_ЗаполнитьЗаказПоставщику";
		
КонецПроцедуры

&НаКлиенте
Процедура гф_ПродукцияВКоробахПриИзменении(Элемент)
	гф_ОбновитьЗаголовокСтраницы("Продукция в коробах", "гф_ПродукцияВКоробах", "гф_ГруппаПродукцияВКоробах");
КонецПроцедуры

// #wortmann {
// #5.2.04
// добавление типового обработчика (отсутствует в основной конфигурации)
// Галфинд Sakovich 2022/08/04
&НаКлиенте
Процедура гф_ПриОткрытииПосле(Отказ)
	гф_ОбновитьЗаголовокСтраницы("Продукция в коробах", "гф_ПродукцияВКоробах", "гф_ГруппаПродукцияВКоробах");
КонецПроцедуры // } #wortmann

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура гф_ЗаполнитьЗаказПоставщику(Команда)
	мВыделенныхСтрок = Элементы.гф_ПродукцияВКоробах.ВыделенныеСтроки;
	Если мВыделенныхСтрок.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	ДополнительныеПараметры	 = Новый Структура;
	ДополнительныеПараметры.Вставить("ВыделенныеСтроки", мВыделенныхСтрок);
	Оповещение = Новый ОписаниеОповещения("гф_ЗаполнитьЗаказПоставщикуЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	Отбор = Новый Структура("Организация", Объект.Организация);
	П = Новый Структура;
	П.Вставить("Отбор", Отбор);
	ОткрытьФорму("Документ.ЗаказПоставщику.ФормаВыбора", П, ЭтотОбъект, , , ,
		Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура гф_ЗаполнитьЗаказПоставщикуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	мВыделенныхСтрок = ДополнительныеПараметры.ВыделенныеСтроки;
	Для каждого Эл Из мВыделенныхСтрок Цикл
		стрТЧ = Объект.гф_ПродукцияВКоробах.НайтиПоИдентификатору(Эл);
		Если стрТЧ = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		стрТЧ.ЗаказПоставщику = Результат;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура гф_ИзделияВКоробахСкопироватьСтроки(Команда)
	СкопироватьСтрокиТЧ("гф_ПродукцияВКоробах");
КонецПроцедуры

&НаКлиенте
Процедура гф_ИзделияВКоробахВставитьСтроки(Команда)
	гф_ИзделияВКоробахВставитьСтрокиНаСервере();
	гф_ОбновитьЗаголовокСтраницы("Продукция в коробах", "гф_ПродукцияВКоробах", "гф_ГруппаПродукцияВКоробах");
КонецПроцедуры

&НаКлиенте
Процедура гф_ЗагрузитИзВнешнегоФайлаВыходныеИзделия(Команда) Экспорт
	
	Если Объект.ВыходныеИзделия.Количество() > 0 Тогда
		ТекстВопроса = НСтр("ru='Табличная часть ""Продукция"" будет очищена. Продолжить?'");
		ДопПараметры = Новый Структура() ;
		Оповещение = Новый ОписаниеОповещения("гф_ВопросЗагрузитьВыходныеИзделияЗавершение", ЭтотОбъект, ДопПараметры);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
	Иначе
		гф_ЗагрузитьИзВнешнегоФайлаВыходныеИзделияПродолжение();
	КонецЕсли;		
	
КонецПроцедуры

&НаКлиенте
Процедура гф_ЗагрузитИзВнешнегоФайлаИзделияВКоробах(Команда) Экспорт
	
	Если Объект.ВыходныеИзделия.Количество() > 0
		ИЛИ Объект.гф_ПродукцияВКоробах.Количество() > 0 Тогда
		ТекстВопроса = НСтр("ru='Табличные части ""Продукция"" и ""Продукция в коробах"" будет очищена. Продолжить?'");
		ДопПараметры = Новый Структура() ;
		Оповещение = Новый ОписаниеОповещения("гф_ВопросЗагрузитьПродукцияВКоробахЗавершение", ЭтотОбъект, ДопПараметры);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
	Иначе
		гф_ЗагрузитьИзВнешнегоФайлаПродукцияВКоробахПродолжение();
	КонецЕсли;		
	
КонецПроцедуры

&НаКлиенте
Процедура гф_ЗагрузитьИзВнешнегоФайлаВыходныеИзделияПродолжение()
	ПараметрыЗагрузки = ЗагрузкаДанныхИзФайлаКлиент.ПараметрыЗагрузкиДанных();
	ПараметрыЗагрузки.ПолноеИмяТабличнойЧасти = "ПроизводствоБезЗаказа.ВыходныеИзделия";
	ПараметрыЗагрузки.Заголовок = НСтр("ru = 'Загрузка данных из файла'");
	ДополнительныеПараметры = Новый Структура();
	ПараметрыЗагрузки.ДополнительныеПараметры = ДополнительныеПараметры;
	Оповещение = Новый ОписаниеОповещения("гф_ЗагрузитьИзВнешнегоФайлаВыходныеИзделияЗавершение", ЭтотОбъект);
	ЗагрузкаДанныхИзФайлаКлиент.ПоказатьФормуЗагрузки(ПараметрыЗагрузки, Оповещение);
КонецПроцедуры

&НаКлиенте 
Процедура гф_ВопросЗагрузитьПродукцияВКоробахЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		гф_ЗагрузитьИзВнешнегоФайлаПродукцияВКоробахПродолжение();	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура гф_ЗагрузитьИзВнешнегоФайлаПродукцияВКоробахПродолжение()
	ПараметрыЗагрузки = ЗагрузкаДанныхИзФайлаКлиент.ПараметрыЗагрузкиДанных();
	ПараметрыЗагрузки.ПолноеИмяТабличнойЧасти = "ПроизводствоБезЗаказа.гф_ПродукцияВКоробах";
	ПараметрыЗагрузки.Заголовок = НСтр("ru = 'Загрузка данных из файла'");
	ДополнительныеПараметры = Новый Структура();
	ПараметрыЗагрузки.ДополнительныеПараметры = ДополнительныеПараметры;
	Оповещение = Новый ОписаниеОповещения("гф_ЗагрузитьИзВнешнегоФайлаПродукцияВКоробахЗавершение", ЭтотОбъект);
	ЗагрузкаДанныхИзФайлаКлиент.ПоказатьФормуЗагрузки(ПараметрыЗагрузки, Оповещение);
КонецПроцедуры

&НаКлиенте 
Процедура гф_ВопросЗагрузитьВыходныеИзделияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		гф_ЗагрузитьИзВнешнегоФайлаВыходныеИзделияПродолжение();	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура гф_ЗагрузитьИзВнешнегоФайлаВыходныеИзделияЗавершение(АдресЗагруженныхДанных, ДополнительныеПараметры) Экспорт
	
	Если АдресЗагруженныхДанных = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	гф_ЗагрузитьВыходныеИзделияИзФайлаНаСервере(АдресЗагруженныхДанных);
	гф_ТаблицаНоменклатураПриИзменении("ВыходныеИзделия", "Получатель");
	гф_ТаблицаКоличествоУпаковокПриИзменении("ВыходныеИзделия");	
	КоличествоИзделий = Объект.ВыходныеИзделия.Количество();
КонецПроцедуры

&НаКлиенте
Процедура гф_ЗагрузитьИзВнешнегоФайлаПродукцияВКоробахЗавершение(АдресЗагруженныхДанных, 
	ДополнительныеПараметры) Экспорт
	
	Если АдресЗагруженныхДанных = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	гф_ЗагрузитьВариантыКомплектацииИзФайлаНаСервере(АдресЗагруженныхДанных);
	
	гф_ТаблицаНоменклатураПриИзменении("ВыходныеИзделия", "Получатель");
	гф_ТаблицаКоличествоУпаковокПриИзменении("ВыходныеИзделия");	
	гф_ОбновитьЗаголовокСтраницы("Продукция в коробах", "гф_ПродукцияВКоробах", "гф_ГруппаПродукцияВКоробах");
	КоличествоИзделий = Объект.ВыходныеИзделия.Количество();

КонецПроцедуры

&НаКлиенте
Процедура гф_ОбновитьЗаголовокСтраницы(Заголовок, ИмяТЧ, ИмяСтраницы)
	Элементы[ИмяСтраницы].Заголовок = 
	?(Объект[ИмяТЧ].Количество() = 0, "", Заголовок + " (" + 
	Объект[ИмяТЧ].Количество() + ")");
	
КонецПроцедуры

&НаКлиенте
Процедура гф_ТаблицаКоличествоУпаковокПриИзменении(ИмяТЧ)
	
	ПустоеНазначение = ПредопределенноеЗначение("Справочник.Назначения.ПустаяСсылка");
	НазначениеПоУмолчанию = _омОбщегоНазначенияВызовСервера.ПолучитьГлобальноеЗначение(
		"СлужебноеНазначениеДляТоваров",
		ПустоеНазначение);
	
	Для каждого СтрокаВыходныеИзделия Из Объект.ВыходныеИзделия Цикл
		ТекущаяСтрока = СтрокаВыходныеИзделия;
		
		СтруктураДействий = Новый Структура;
		ДобавитьВСтруктуруДействияПриИзмененииКоличестваУпаковок(ИмяТЧ, ЭтаФорма, СтруктураДействий);
		
		Если ИмяТЧ = "ПобочныеИзделия" Тогда
			СтруктураДействий.Вставить("ПересчитатьСумму");
		КонецЕсли;
		
		Если ИмяТЧ = "ВыходныеИзделия" Тогда
			СтруктураДействий.Вставить("ПересчитатьДолюСтоимости", ПараметрыРаспределенияЗатрат);
		КонецЕсли;
		
		ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
		
		Если Не ЗначениеЗаполнено(ТекущаяСтрока.Назначение) Тогда	
			ТекущаяСтрока.Назначение = НазначениеПоУмолчанию;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура гф_ТаблицаНоменклатураПриИзменении(ИмяТЧ, ИмяСклад)
	Для каждого СтрокаВыходныеИзделия Из Объект.ВыходныеИзделия Цикл
		ТекущаяСтрока = СтрокаВыходныеИзделия;
		
		СтруктураДействий = Новый Структура;
		
		ДобавитьВСтруктуруДействияПриИзмененииНоменклатуры(
		ИмяТЧ, ТекущаяСтрока, ЭтаФорма, СтруктураДействий, , ИмяТЧ = "МатериалыИРаботы");
		
		ДобавитьВСтруктуруДействияПриИзмененииКоличестваУпаковок(ИмяТЧ, ЭтаФорма, СтруктураДействий);
		
		ДобавитьВСтруктуруДействияПоСериям(СтруктураДействий, ТекущаяСтрока[ИмяСклад], ПараметрыУказанияСерий[ИмяТЧ]);
		
		Если ИмяТЧ = "ВыходныеИзделия" Тогда
			СтруктураЗаполненияСпецификации = 
				УправлениеДаннымиОбИзделияхКлиентСервер.ПараметрыДействияПроверитьЗаполнитьСпецификацию(
					Объект, ТекущаяСтрока, ПараметрыВыбораСпецификаций);
					СтруктураДействий.Вставить("ПроверитьЗаполнитьСпецификацию", СтруктураЗаполненияСпецификации);
		КонецЕсли;
		
		ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
		
		Если ИмяТЧ = "ВыходныеИзделия" Или ИмяТЧ = "ПобочныеИзделия" Тогда
			ОграничитьТипПолучателя(ИмяТЧ, ТекущаяСтрока);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура гф_ЗагрузитьВыходныеИзделияИзФайлаНаСервере(АдресЗагруженныхДанных)
	Объект.ВыходныеИзделия.Очистить();
	ЗагруженныеДанные = ПолучитьИзВременногоХранилища(АдресЗагруженныхДанных);
	
	ТоварыДобавлены = Ложь;
	Для каждого СтрокаТаблицы Из ЗагруженныеДанные Цикл 
		
		Если Не ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура) Тогда 
			Продолжить;
		КонецЕсли;
		
		НоваяСтрокаТовары = Объект.ВыходныеИзделия.Добавить();
		НоваяСтрокаТовары.Номенклатура = СтрокаТаблицы.Номенклатура;
		НоваяСтрокаТовары.КоличествоУпаковок = СтрокаТаблицы.КоличествоУпаковок;
		
		ТоварыДобавлены = Истина;
	КонецЦикла;
	
	Если ТоварыДобавлены Тогда
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура гф_ЗагрузитьВариантыКомплектацииИзФайлаНаСервере(АдресЗагруженныхДанных)
	Объект.гф_ПродукцияВКоробах.Очистить();
	Объект.ВыходныеИзделия.Очистить();
	ЗагруженныеДанные = ПолучитьИзВременногоХранилища(АдресЗагруженныхДанных);
	
	ВариантыКомплектацииДобавлены = Ложь;
	Для каждого СтрокаТаблицы Из ЗагруженныеДанные Цикл 
		
		Если Не ЗначениеЗаполнено(СтрокаТаблицы.ВариантКомплектации) Тогда 
			Продолжить;
		КонецЕсли;
		
		НоваяСтрокаКоплектации = Объект.гф_ПродукцияВКоробах.Добавить();
		НоваяСтрокаКоплектации.ВариантКомплектации = СтрокаТаблицы.ВариантКомплектации;
		НоваяСтрокаКоплектации.КоличествоКоробов = СтрокаТаблицы.КоличествоКоробов;
		
		ВариантыКомплектацииДобавлены = Истина;
	КонецЦикла;
	
	Если ВариантыКомплектацииДобавлены Тогда
		Модифицированность = Истина;
	КонецЕсли;
	
	гф_ОбработатьВыходныеИзделияПриЗагрузкеИзФайла();
	
КонецПроцедуры

&НаСервере
Процедура гф_ОбработатьВыходныеИзделияПриЗагрузкеИзФайла()
	ПродукцияВКоробах = Объект.гф_ПродукцияВКоробах.Выгрузить();
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ДокТч.ВариантКомплектации КАК ВариантКомплектации,
	|	ДокТч.КоличествоКоробов КАК КоличествоКоробов,
	|	ДокТч.ЗаказПоставщику КАК ЗаказПоставщику
	|ПОМЕСТИТЬ тч
	|ИЗ
	|	&ПродукцияВКоробах КАК ДокТч
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	тч.ВариантКомплектации КАК ВариантКомплектации,
	|	СУММА(тч.КоличествоКоробов) КАК КоличествоКоробов
	|ПОМЕСТИТЬ Короба
	|ИЗ
	|	тч КАК тч
	|
	|СГРУППИРОВАТЬ ПО
	|	тч.ВариантКомплектации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Комплектация.Номенклатура КАК Номенклатура,
	|	Комплектация.Упаковка КАК Упаковка,
	|	Комплектация.КоличествоУпаковок КАК КоличествоУпаковок,
	|	Комплектация.ДоляСтоимости КАК ДоляСтоимости,
	|	Комплектация.Количество КАК Количество,
	|	Короба.ВариантКомплектации КАК ВариантКомплектации,
	|	Короба.КоличествоКоробов КАК КоличествоКоробов,
	|	Комплектация.Характеристика КАК Характеристика
	|ИЗ
	|	Короба КАК Короба
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыКомплектацииНоменклатуры.Товары КАК Комплектация
	|		ПО Короба.ВариантКомплектации = Комплектация.Ссылка
	|ИТОГИ
	|	МАКСИМУМ(КоличествоКоробов)
	|ПО
	|	ВариантКомплектации";
	Запрос.УстановитьПараметр("ПродукцияВКоробах", ПродукцияВКоробах);
	Результат = Запрос.Выполнить();
	ВыборкаКомплектация = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ТоварыДобавлены = Ложь;
	
	Пока ВыборкаКомплектация.Следующий() Цикл
		КоличествоКоробов = ВыборкаКомплектация.КоличествоКоробов;
		Если КоличествоКоробов > 0 Тогда
			
			Для Сч = 1 По КоличествоКоробов Цикл
				Выборка = ВыборкаКомплектация.Выбрать();
				Пока Выборка.Следующий() Цикл
					Если Не ЗначениеЗаполнено(Выборка.Номенклатура) Тогда 
						Продолжить;
					КонецЕсли;
					
					НоваяСтрокаТовары = Объект.ВыходныеИзделия.Добавить();
					НоваяСтрокаТовары.Номенклатура = Выборка.Номенклатура;
					НоваяСтрокаТовары.КоличествоУпаковок = Выборка.КоличествоУпаковок;
					НоваяСтрокаТовары.Упаковка = Выборка.Упаковка;
					НоваяСтрокаТовары.ДоляСтоимости = Выборка.ДоляСтоимости;
					НоваяСтрокаТовары.ДоляСтоимости = Выборка.ДоляСтоимости;
					НоваяСтрокаТовары.Количество = Выборка.Количество;
					НоваяСтрокаТовары.Характеристика = Выборка.Характеристика;
					
					ТоварыДобавлены = Истина;
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;	
		
		Если ТоварыДобавлены Тогда
			Модифицированность = Истина;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура гф_ИзделияВКоробахВставитьСтрокиНаСервере()
	ПараметрыОтбора = Неопределено;
	Колонки = "ВариантКомплектации,КоличествоКоробов,ЗаказПоставщику";
	ТаблицаСтрок = РаботаСТабличнымиЧастями.СтрокиИзБуфераОбмена(ПараметрыОтбора, Колонки);
	Если Не ЗначениеЗаполнено(ТаблицаСтрок) Тогда
		Возврат;
	КонецЕсли;
	ТаблицаОбъекта = Объект["гф_ПродукцияВКоробах"]; // ДанныеФормыКоллекция
	Для Каждого СтрокаТовара Из ТаблицаСтрок Цикл
		ТекущаяСтрока = ТаблицаОбъекта.Добавить();
		ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтрокаТовара);
	КонецЦикла;
КонецПроцедуры

#КонецОбласти












