
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура гф_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	// #wortmann {
	// #5.2.04
	// добавление команд загрузки из внешнего файла
	// Галфинд Sakovich 2022/08/02
	НоваяКоманда = Команды.Добавить("гф_ЗагрузитИзВнешнегоФайлаВыходныеИзделия");
	НоваяКоманда.Заголовок = "Загрузить из внешнего файла";
	НоваяКоманда.Подсказка = "Загрузить из внешнего файла";
	НоваяКоманда.Действие = "гф_ЗагрузитИзВнешнегоФайлаВыходныеИзделия";
	НоваяКоманда.ИзменяетСохраняемыеДанные = Истина;
	
	ТипКнопкаФормы = Тип("КнопкаФормы");
	НовыйЭлемент = Элементы.Вставить("гф_ЗагрузитИзВнешнегоФайлаВыходныеИзделия",
		ТипКнопкаФормы, 
		Элементы.ВыходныеИзделияГруппаЗаполнить, 
		Элементы.ВыходныеИзделияПодобратьТовары);
	НовыйЭлемент.Заголовок = "Загрузить из внешнего файла";
	НовыйЭлемент.ИмяКоманды = "гф_ЗагрузитИзВнешнегоФайлаВыходныеИзделия";
	
	// добавление элементов формы
	// ----------------------------------------------
	НовыйЭлемент = Элементы.Вставить("гф_ГруппаПродукцияВКоробах", Тип("ГруппаФормы"), Элементы.ГруппаСтраницы, Элементы.ГруппаМатериалыИРаботы);
    НовыйЭлемент.Вид = ВидГруппыФормы.Страница;
	НовыйЭлемент.Заголовок = "Продукция в коробах";
	
	НовыйЭлемент = Элементы.Вставить("гф_ПродукцияВКоробах", Тип("ТаблицаФормы"), Элементы.гф_ГруппаПродукцияВКоробах);
    НовыйЭлемент.ПутьКДанным = "Объект.гф_ПродукцияВКоробах"; 
	
	НовыйЭлемент = Элементы.Вставить("ПродукцияВКоробахНомерСтроки", Тип("ПолеФормы"), Элементы.гф_ПродукцияВКоробах);
    НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода; 
    НовыйЭлемент.ПутьКДанным = "Объект.гф_ПродукцияВКоробах.НомерСтроки";
	НовыйЭлемент.Заголовок = " N ";

	НовыйЭлемент = Элементы.Вставить("ПродукцияВКоробахВариантКомплектации", Тип("ПолеФормы"), Элементы.гф_ПродукцияВКоробах);
    НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода; 
    НовыйЭлемент.ПутьКДанным = "Объект.гф_ПродукцияВКоробах.ВариантКомплектации"; 
	НовыйЭлемент.Заголовок = "Артикул с ростовкой (вариант комплектации)";
	
	НовыйЭлемент = Элементы.Вставить("ПродукцияВКоробахКоличествоКоробов", Тип("ПолеФормы"), Элементы.гф_ПродукцияВКоробах);
    НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода; 
    НовыйЭлемент.ПутьКДанным = "Объект.гф_ПродукцияВКоробах.КоличествоКоробов"; 
	НовыйЭлемент.Заголовок = "Количество коробов";
	
	НовыйЭлемент = Элементы.Вставить("ПродукцияВКоробахЗаказПоставщику", Тип("ПолеФормы"), Элементы.гф_ПродукцияВКоробах);
    НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода; 
    НовыйЭлемент.ПутьКДанным = "Объект.гф_ПродукцияВКоробах.ЗаказПоставщику"; 
	НовыйЭлемент.Заголовок = "Заказ поставщику";
	// -----------------------------------------------
	// } #wortmann
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура гф_ЗагрузитИзВнешнегоФайлаВыходныеИзделия(Команда) Экспорт
	
	Если Объект.ВыходныеИзделия.Количество() > 0 Тогда
		ТекстВопроса = НСтр("ru='Табличная часть ""Продукция"" будет очищена. Продолжить?'");
		ДопПараметры = Новый Структура() ;
		Оповещение = Новый ОписаниеОповещения("гф_ВопросЗагрузитьВыходныеИзделияЗавершение", ЭтотОбъект, ДопПараметры);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
	Иначе
		гф_ЗагрузитьИзВнешнегоФайлаВыходныеИзделияПродолжение();
	КонецЕсли;		
	
КонецПроцедуры

&НаКлиенте
Процедура гф_ЗагрузитьИзВнешнегоФайлаВыходныеИзделияПродолжение()
	ПараметрыЗагрузки = ЗагрузкаДанныхИзФайлаКлиент.ПараметрыЗагрузкиДанных();
	ПараметрыЗагрузки.ПолноеИмяТабличнойЧасти = "ПроизводствоБезЗаказа.ВыходныеИзделия";
	ПараметрыЗагрузки.Заголовок = НСтр("ru = 'Загрузка данных из файла'");
	ДополнительныеПараметры = Новый Структура();
	ПараметрыЗагрузки.ДополнительныеПараметры = ДополнительныеПараметры;
	Оповещение = Новый ОписаниеОповещения("гф_ЗагрузитьИзВнешнегоФайлаВыходныеИзделияЗавершение", ЭтотОбъект);
	ЗагрузкаДанныхИзФайлаКлиент.ПоказатьФормуЗагрузки(ПараметрыЗагрузки, Оповещение);
КонецПроцедуры

&НаКлиенте 
Процедура гф_ВопросЗагрузитьВыходныеИзделияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		гф_ЗагрузитьИзВнешнегоФайлаВыходныеИзделияПродолжение();	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура гф_ЗагрузитьИзВнешнегоФайлаВыходныеИзделияЗавершение(АдресЗагруженныхДанных, ДополнительныеПараметры) Экспорт
	
	Если АдресЗагруженныхДанных = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	гф_ЗагрузитьВыходныеИзделияИзФайлаНаСервере(АдресЗагруженныхДанных);
	
	гф_ТаблицаНоменклатураПриИзменении("ВыходныеИзделия", "Получатель");
	гф_ТаблицаКоличествоУпаковокПриИзменении("ВыходныеИзделия");	

КонецПроцедуры

&НаКлиенте
Процедура гф_ТаблицаКоличествоУпаковокПриИзменении(ИмяТЧ)
	
	ПустоеНазначение = ПредопределенноеЗначение("Справочник.Назначения.ПустаяСсылка");
	НазначениеПоУмолчанию = _омОбщегоНазначенияВызовСервера.ПолучитьГлобальноеЗначение(
		"НазначениеПоУмолчаниюПроизводствоБезЗаказа",
		ПустоеНазначение);
	
	Для каждого СтрокаВыходныеИзделия Из Объект.ВыходныеИзделия Цикл
		ТекущаяСтрока = СтрокаВыходныеИзделия;
		
		СтруктураДействий = Новый Структура;
		ДобавитьВСтруктуруДействияПриИзмененииКоличестваУпаковок(ИмяТЧ, ЭтаФорма, СтруктураДействий);
		
		Если ИмяТЧ = "ПобочныеИзделия" Тогда
			СтруктураДействий.Вставить("ПересчитатьСумму");
		КонецЕсли;
		
		Если ИмяТЧ = "ВыходныеИзделия" Тогда
			СтруктураДействий.Вставить("ПересчитатьДолюСтоимости", ПараметрыРаспределенияЗатрат);
		КонецЕсли;
		
		ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
		
		Если Не ЗначениеЗаполнено(ТекущаяСтрока.Назначение) Тогда	
			ТекущаяСтрока.Назначение = НазначениеПоУмолчанию;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура гф_ТаблицаНоменклатураПриИзменении(ИмяТЧ, ИмяСклад)
	Для каждого СтрокаВыходныеИзделия Из Объект.ВыходныеИзделия Цикл
		ТекущаяСтрока = СтрокаВыходныеИзделия;
		
		СтруктураДействий = Новый Структура;
		
		ДобавитьВСтруктуруДействияПриИзмененииНоменклатуры(
		ИмяТЧ, ТекущаяСтрока, ЭтаФорма, СтруктураДействий, , ИмяТЧ = "МатериалыИРаботы");
		
		ДобавитьВСтруктуруДействияПриИзмененииКоличестваУпаковок(ИмяТЧ, ЭтаФорма, СтруктураДействий);
		
		ДобавитьВСтруктуруДействияПоСериям(СтруктураДействий, ТекущаяСтрока[ИмяСклад], ПараметрыУказанияСерий[ИмяТЧ]);
		
		Если ИмяТЧ = "ВыходныеИзделия" Тогда
			СтруктураЗаполненияСпецификации = 
				УправлениеДаннымиОбИзделияхКлиентСервер.ПараметрыДействияПроверитьЗаполнитьСпецификацию(
					Объект, ТекущаяСтрока, ПараметрыВыбораСпецификаций);
					СтруктураДействий.Вставить("ПроверитьЗаполнитьСпецификацию", СтруктураЗаполненияСпецификации);
		КонецЕсли;
		
		ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
		
		Если ИмяТЧ = "ВыходныеИзделия" Или ИмяТЧ = "ПобочныеИзделия" Тогда
			ОграничитьТипПолучателя(ИмяТЧ, ТекущаяСтрока);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура гф_ЗагрузитьВыходныеИзделияИзФайлаНаСервере(АдресЗагруженныхДанных)
	Объект.ВыходныеИзделия.Очистить();
	ЗагруженныеДанные = ПолучитьИзВременногоХранилища(АдресЗагруженныхДанных);
	
	ТоварыДобавлены = Ложь;
	Для каждого СтрокаТаблицы Из ЗагруженныеДанные Цикл 
		
		Если Не ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура) Тогда 
			Продолжить;
		КонецЕсли;
		
		НоваяСтрокаТовары = Объект.ВыходныеИзделия.Добавить();
		НоваяСтрокаТовары.Номенклатура = СтрокаТаблицы.Номенклатура;
		НоваяСтрокаТовары.КоличествоУпаковок = СтрокаТаблицы.КоличествоУпаковок;
		
		ТоварыДобавлены = Истина;
	КонецЦикла;
	
	Если ТоварыДобавлены Тогда
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
