
#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

	// ИнтеграцияС1СДокументооборотом
	ИнтеграцияС1СДокументооборот.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ИнтеграцияС1СДокументооборотом
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		Объект.Ответственный = Пользователи.ТекущийПользователь();
		
	КонецЕсли; 
	
	ЭлектронныеПисьма.Параметры.УстановитьЗначениеПараметра("Документ", Объект.Ссылка);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ЗаказыКлиентовЗаполнитьСуммы();
	
	РассчитатьИтогиПоЗаказамКлиентов(ЭтотОбъект);

	КонтрагентПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКомандыКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиент");
		МодульПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

	ЭлектронныеПисьма.Параметры.УстановитьЗначениеПараметра("Документ", Объект.Ссылка);
	
	ЗаказыКлиентовЗаполнитьСуммы();
	
	РассчитатьИтогиПоЗаказамКлиентов(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// ИнтеграцияС1СДокументооборотом
	ИнтеграцияС1СДокументооборот.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи);
	// Конец ИнтеграцияС1СДокументооборотом

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) <> Тип("Массив") Тогда
		
		Возврат;
		
	КонецЕсли;	
	
	Для Каждого ЭлементМассива Из ВыбранноеЗначение Цикл
		
		Если ТипЗнч(ЭлементМассива) <> Тип("ДокументСсылка.ЗаказКлиента") Тогда
			
			Продолжить;
			
		КонецЕсли;	   
		
		ОтборЗаказа = Новый Структура("ЗаказКлиента", ЭлементМассива);
		
		Если Не Объект.ЗаказыКлиентов.НайтиСтроки(ОтборЗаказа).Количество() Тогда
			
			НоваяСтрока = Объект.ЗаказыКлиентов.Добавить();
			
			НоваяСтрока.ЗаказКлиента = ЭлементМассива;
			
			ЗаказыКлиентовЗаполнитьСуммы(ЭлементМассива); 
			
		КонецЕсли;	
		
	КонецЦикла;	
	
	РассчитатьИтогиПоЗаказамКлиентов(ЭтотОбъект);

КонецПроцедуры   

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыЗаказыКлиентов

&НаКлиенте
Процедура ЗаказыКлиентовПослеУдаления(Элемент)

	РассчитатьИтогиПоЗаказамКлиентов(ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура ЗаказыКлиентовЗаказКлиентаПриИзменении(Элемент = Неопределено)
	
	ТекущиеДанные = Элементы.ЗаказыКлиентов.ТекущиеДанные;  
	
	ЗаказКлиента = ТекущиеДанные.ЗаказКлиента;   
	
	ОтборЗаказов = Новый Структура("ЗаказКлиента", ЗаказКлиента);
	
	СтрокиЗаказов = Объект.ЗаказыКлиентов.НайтиСтроки(ОтборЗаказов);
	
	Если СтрокиЗаказов.Количество()>1 Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Документ " + ЗаказКлиента + " уже есть в таблице заказов покупателей");
		
		ТекущаяСтрока = Элементы.ЗаказыКлиентов.ТекущаяСтрока;
		
		Объект.ЗаказыКлиентов.НайтиПоИдентификатору(ТекущаяСтрока).ЗаказКлиента = ТекущийЗаказКлиента;
		
		Возврат;
		
	Иначе	
		
		ТекущийЗаказКлиента = ЗаказКлиента;
		
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(ЗаказКлиента) Тогда
		
		ЗаказыКлиентовЗаполнитьСуммы(ЗаказКлиента); 
		
	Иначе
		
		ТекущиеДанные.Сумма		= 0;
		ТекущиеДанные.СуммаНДС	= 0;
		
	КонецЕсли;	
	
	РассчитатьИтогиПоЗаказамКлиентов(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаказыКлиентовПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.ЗаказыКлиентов.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		
		ТекущийЗаказКлиента = Неопределено;
		
	Иначе	
	
		ТекущийЗаказКлиента = ТекущиеДанные.ЗаказКлиента;
	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы   

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда) 
	
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()   
	
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);  
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// ИнтеграцияС1СДокументооборотом
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуИнтеграции(Команда)
	
	ИнтеграцияС1СДокументооборотКлиент.ВыполнитьПодключаемуюКомандуИнтеграции(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры
// Конец ИнтеграцияС1СДокументооборотом

&НаКлиенте
Процедура КомандаПодбор(Команда)
	
	ПараметрОтбор = Новый Структура();
	
	ПараметрОтбор.Вставить("Организация",	Объект.Организация);
	ПараметрОтбор.Вставить("Партнер",		Партнер);
	
	ПараметрыОткрытия = Новый Структура;
	
	ПараметрыОткрытия.Вставить("Отбор",					ПараметрОтбор);
	ПараметрыОткрытия.Вставить("ДляСпецификации",		Истина);
	ПараметрыОткрытия.Вставить("МножественныйВыбор",	Истина);
	
	ОткрытьФорму("Документ.ЗаказКлиента.ФормаВыбора", ПараметрыОткрытия, ЭтотОбъект);
					
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаказыКлиентовЗаполнитьСуммы(ЗаказКлиента = Неопределено)
	
	МассивЗаказов = Новый Массив;

	Если ЗаказКлиента = Неопределено Тогда 
		
		Для Каждого СтрокаЗаказа Из Объект.ЗаказыКлиентов Цикл
			
			МассивЗаказов.Добавить(СтрокаЗаказа.ЗаказКлиента);
			
		КонецЦикла;	
		
	Иначе                        
		
		МассивЗаказов.Добавить(ЗаказКлиента);
		
	КонецЕсли;  
	
	Если Не МассивЗаказов.Количество() Тогда
		
		Возврат;
		
	КонецЕсли;	   
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказКлиентаТовары.Ссылка КАК Ссылка,
	               |	СУММА(ЗаказКлиентаТовары.Сумма) КАК Сумма,
	               |	СУММА(ЗаказКлиентаТовары.СуммаНДС) КАК СуммаНДС
	               |ИЗ
	               |	Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
	               |ГДЕ
	               |	ЗаказКлиентаТовары.Ссылка В(&Заказы)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЗаказКлиентаТовары.Ссылка";
	
	Запрос.Параметры.Вставить("Заказы", МассивЗаказов);     
	
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		
		Выборка = Результат.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			ОтборСтрок = Новый Структура("ЗаказКлиента", Выборка.Ссылка);
			
			СтрокиЗаказов = Объект.ЗаказыКлиентов.НайтиСтроки(ОтборСтрок);
			
			Для Каждого СтрокаЗаказа Из СтрокиЗаказов Цикл
				
				ЗаполнитьЗначенияСвойств(СтрокаЗаказа, Выборка);
				
			КонецЦикла;	
			
		КонецЦикла;	
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста 
Процедура РассчитатьИтогиПоЗаказамКлиентов(Форма)

	Форма.ИтогСумма		= Форма.Объект.ЗаказыКлиентов.Итог("Сумма");
	Форма.ИтогСуммаНДС	= Форма.Объект.ЗаказыКлиентов.Итог("СуммаНДС");
	
КонецПроцедуры	

&НаКлиенте
Процедура ЗаказыКлиентовЗаказКлиентаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрОтбор = Новый Структура();
	
	ПараметрОтбор.Вставить("Организация",	Объект.Организация);
	ПараметрОтбор.Вставить("Партнер",		Партнер);
	
	ПараметрыОткрытия = Новый Структура;
	
	ПараметрыОткрытия.Вставить("Отбор",				ПараметрОтбор);
	ПараметрыОткрытия.Вставить("ДляСпецификации",	Истина);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗаказыКлиентовОкончаниеВыбора", ЭтотОбъект, ПараметрыОткрытия);
	
	ОткрытьФорму("Документ.ЗаказКлиента.ФормаВыбора", ПараметрыОткрытия, ЭтотОбъект, , , ,
					ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	        
КонецПроцедуры

&НаКлиенте
Процедура ЗаказыКлиентовОкончаниеВыбора(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		
		ТекущиеДанные = Элементы.ЗаказыКлиентов.ТекущиеДанные;  
		
		ТекущиеДанные.ЗаказКлиента = Результат;  
		
		ЗаказыКлиентовЗаказКлиентаПриИзменении();
		
	КонецЕсли;	

КонецПроцедуры

&НаСервере
Процедура КонтрагентПриИзмененииНаСервере()
	
	Партнер = Объект.Контрагент.Партнер;
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	КонтрагентПриИзмененииНаСервере();
КонецПроцедуры

#КонецОбласти