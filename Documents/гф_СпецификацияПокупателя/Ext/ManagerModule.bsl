#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс      

// #wortmann {
// #Отметка оригиналов документов
// Галфинд Окунев 2022/08/09
// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	МеханизмыДокумента.Добавить("РеестрДокументов");
	
КонецПроцедуры// } #wortmann    

// #wortmann {
// #Отметка оригиналов документов
// Галфинд Окунев 2022/08/09
// Возвращает таблицы для движений, необходимые для проведения документа по регистрам учетных механизмов.
//
// Параметры:
//  Документ - ДокументСсылка - ссылка на документ, по которому необходимо получить данные
//  Регистры - Структура - список имен регистров, для которых необходимо получить таблицы
//  ДопПараметры - Структура - дополнительные параметры для получения данных, определяющие контекст проведения.
//
// Возвращаемое значение:
//  Структура - коллекция элементов - таблиц значений - данных для отражения в регистр.
//
Функция ДанныеДокументаДляПроведения(Документ, Регистры, ДопПараметры = Неопределено) Экспорт
	
	Если ДопПараметры = Неопределено Тогда   
		
		ДопПараметры = ПроведениеДокументов.ДопПараметрыИнициализироватьДанныеДокументаДляПроведения();
		
	КонецЕсли;
	
	Запрос			= Новый Запрос;
	ТекстыЗапроса	= Новый СписокЗначений;
	
	Если Не ДопПараметры.ПолучитьТекстыЗапроса Тогда
		
		ЗаполнитьПараметрыИнициализации(Запрос, Документ);
		
		ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры);
		
	КонецЕсли;
	
	Возврат ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения(Запрос, ТекстыЗапроса, ДопПараметры);
	
КонецФункции// } #wortmann    

// #wortmann {
// #Спецификация покупателя
// Галфинд Окунев 2022/07/05
// Заполняет список команд печати.
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	
	КомандаПечати.МенеджерПечати					= "Документ.гф_СпецификацияПокупателя";
	КомандаПечати.Идентификатор						= "СпецификацияПокупателя";
	КомандаПечати.Представление						= "Спецификация покупателя";
	КомандаПечати.ПроверкаПроведенияПередПечатью	= Ложь;
	
	КомандаПечати = КомандыПечати.Добавить();
	
	КомандаПечати.МенеджерПечати					= "Документ.гф_СпецификацияПокупателя";
	КомандаПечати.Идентификатор						= "СпецификацияПоНовойЦене";
	КомандаПечати.Представление						= "Спецификация покупателя на остаток по новой цене";
	КомандаПечати.ПроверкаПроведенияПередПечатью	= Ложь;   
	КомандаПечати.Обработчик						= "гф_МенеджерПечатиКлиент.ПараметрыСпецификацииПоНовойЦене";
	
КонецПроцедуры// } #wortmann

// #wortmann {
// #Спецификация покупателя
// Галфинд Окунев 2022/07/05
// Формирует печатные формы объектов
//
// Параметры:
//
//   ИменаМакетов    		- Строка
//   МассивОбъектов  		- Массив
//   ПараметрыПечати 		- Структура
//   КоллекцияПечатныхФорм	- Таблица значений
//   ОбъектыПечати			- Список значений
//   ПараметрыВывода       	- Структура
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СпецификацияПокупателя") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"СпецификацияПокупателя",
		"Спецификация покупателя",
		СформироватьСпецификация(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СпецификацияПоНовойЦене") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"СпецификацияПоНовойЦене",
		"Спецификация покупателя на остаток по новой цене",
		СформироватьСпецификация(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));
		
	КонецЕсли;
	
КонецПроцедуры// } #wortmann

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// #wortmann {
// #Спецификация покупателя
// Галфинд Окунев 2022/07/05
// Создает табличный документ ПФ спецификации
//
// Параметры:
//
//   МассивОбъектов  		- Массив
//   ОбъектыПечати			- Список значений
//   ПараметрыПечати 		- Структура
//
Функция СформироватьСпецификация(МассивОбъектов, ОбъектыПечати, ПараметрыПечати) Экспорт
	
	ПроблемыСПринтером = Ложь;
	
	ТабличныйДокумент = Новый ТабличныйДокумент;  
	
	ТабличныйДокумент.АвтоМасштаб			= Истина;
	ТабличныйДокумент.ИмяПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_СПЕЦИФИКАЦИЯПОКУПАТЕЛЯ";
	
	УстановитьПривилегированныйРежим(Истина);
	
	Макет = Документы.гф_СпецификацияПокупателя.ПолучитьМакет("СпецификацияПокупателя");
	
	ПервыйДокумент = Истина;
	
	Для Каждого СсылкаНаДокумент Из МассивОбъектов Цикл
		
		Если ПервыйДокумент Тогда
			
			ПервыйДокумент = Ложь;
			
		Иначе	
			
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ОбластьЗаголовок	= Макет.ПолучитьОбласть("Заголовок");  
		ОбластьПодвал		= Макет.ПолучитьОбласть("Подвал");  
		
		ПараметрыСпецификацииПоНовойЦене = Неопределено;
		
		ПараметрыПечати.Свойство("гф_Параметры", ПараметрыСпецификацииПоНовойЦене);
			
		ДанныеДляПечати = ДанныеДляПечатиСпецификации(СсылкаНаДокумент,
						ПараметрыСпецификацииПоНовойЦене);
		
		ФормированиеПечатныхФорм.ВывестиЛоготипВТабличныйДокумент(Макет, ОбластьЗаголовок, "ОбластьЗаголовок", ДанныеДляПечати.ДанныеШапки.Организация);
		
		СообщитьОНесколькихЦенах(ДанныеДляПечати.НесколькоЦен);
		
		ЗаполнитьЗначенияСвойств(ОбластьЗаголовок.Параметры, ДанныеДляПечати.ДанныеШапки);
		
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);  
		
		ПервичныеДокументыВКоробах = ДанныеДляПечати.ДанныеШапки.ПервичныеДокументыВКоробах;
		
		Подвал = Новый ТабличныйДокумент();
		
		Если ПервичныеДокументыВКоробах Тогда
			
			ПостфиксИмениМакета = "ВКоробах";
			
		Иначе
			
			ПостфиксИмениМакета = "";        
			
		КонецЕсли;	
			
		ОбластьИтоги = Макет.ПолучитьОбласть("Итого" + ПостфиксИмениМакета);
		
		ЗаполнитьЗначенияСвойств(ОбластьИтоги.Параметры, ДанныеДляПечати.ДанныеШапки);
		
		Подвал.Вывести(ОбластьИтоги);
		
		ЗаполнитьЗначенияСвойств(ОбластьПодвал.Параметры, ДанныеДляПечати.ДанныеШапки);
		
		Подвал.Вывести(ОбластьПодвал);
		
		ОбластьШапка		= Макет.ПолучитьОбласть("Шапка" + ПостфиксИмениМакета);  
		
		ТабличныйДокумент.Вывести(ОбластьШапка);   
		
		НомерПоследнейСтроки = ДанныеДляПечати.ДанныеТабличнойЧасти.Количество();
		НомерСтроки			 = 0;
		НомерСтрокиПП		 = 0;
		
		Для Каждого СтрокаДокумента ИЗ ДанныеДляПечати.ДанныеТабличнойЧасти Цикл
			
			Если Не ЗначениеЗаполнено(СтрокаДокумента.ЗаказПредставление) Тогда
				
				Продолжить;
				
			ИначеЕсли Не ЗначениеЗаполнено(СтрокаДокумента.НоменклатураПредставление) Тогда
				
				ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаЗаказ" + ПостфиксИмениМакета);
				
			Иначе	
				
				ОбластьСтрока = Макет.ПолучитьОбласть("Строка" + ПостфиксИмениМакета);
				
				НомерСтрокиПП = НомерСтрокиПП + 1;
				
				ОбластьСтрока.Параметры.НомерСтрокиПП = НомерСтрокиПП;
				
			КонецЕсли;	
			
			НомерСтроки = НомерСтроки + 1;
			
			ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры, СтрокаДокумента);  
			
			МассивПроверяемыхТаблиц = Новый Массив;         
			
			МассивПроверяемыхТаблиц.Добавить(ОбластьСтрока);
			
			Если НомерСтроки = НомерПоследнейСтроки Тогда
				
				МассивПроверяемыхТаблиц.Добавить(Подвал);
				
			КонецЕсли;                    
			
			Попытка
				
				Если Не ТабличныйДокумент.ПроверитьВывод(МассивПроверяемыхТаблиц) Тогда
					
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					
					ТабличныйДокумент.Вывести(ОбластьШапка);   
					
				КонецЕсли;
				
			Исключение   
				
				ПроблемыСПринтером = Истина;
				
			КонецПопытки;
			
			ТабличныйДокумент.Вывести(ОбластьСтрока);
			
		КонецЦикла;	
		
		ТабличныйДокумент.Вывести(Подвал);  
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(
		ТабличныйДокумент,
		НомерСтрокиНачало,
		ОбъектыПечати,
		СсылкаНаДокумент);
		
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);     
	
	Если ПроблемыСПринтером Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось определить высоту страницы. Возможно в системе не установлен принтер.");
		
	КонецЕсли;
	
	Возврат ТабличныйДокумент;
	
КонецФункции// } #wortmann     

// #wortmann {
// #Спецификация покупателя
// Галфинд Окунев 2022/07/05
// Собщает пользователю о дублях цен
//
// Параметры:
//
//   НесколькоЦен	- Выборка из результата запроса
//
Процедура СообщитьОНесколькихЦенах(НесколькоЦен)
	
	Пока НесколькоЦен.Следующий() Цикл
		
		СтрокаСообщения = "На артикул " + НесколькоЦен.Артикул + " в документах";
		
		ВыборкаЗаказов = НесколькоЦен.Выбрать();
		
		Первый = Истина;
		
		Пока ВыборкаЗаказов.Следующий() Цикл
			
			СтрокаСообщения = СтрокаСообщения + ?(Первый, " ", ", ") + ВыборкаЗаказов.Заказ;
			
			Первый = Ложь;
			
		КонецЦикла;	
		
		СтрокаСообщения = СтрокаСообщения + " обнаружены разные цены.";
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрокаСообщения);
		
	КонецЦикла;	
	
КонецПроцедуры// } #wortmann		

// #wortmann {
// #Спецификация покупателя
// Галфинд Окунев 2022/07/05
// Собирает данные для печати спецификации
//
// Параметры:
//
//   СсылкаНаДокумент					- ДокументСсылка.гф_СпецификацияПокупателя
//   ПараметрыСпецификацииПоНовойЦене	- Структура
//
Функция ДанныеДляПечатиСпецификации(СсылкаНаДокумент, ПараметрыСпецификацииПоНовойЦене = Неопределено)
	
	ПервичныеДокументыВКоробах = УправлениеСвойствами.ЗначениеСвойства(СсылкаНаДокумент.Договор, 
										"гф_ДоговорыКонтрагентовПервичныеДокументыВКоробах");
	Если ПервичныеДокументыВКоробах = Неопределено Тогда
		
		ПервичныеДокументыВКоробах = Ложь;
		
	КонецЕсли;	
	
	РозничныеЦены = ПланыВидовХарактеристик.гф_ГлобальныеЗначения.НайтиПоРеквизиту("Ключ","гф_ГлобальныеЗначенияРозничнаяЦена");	
	
	КодУпаковки = "778";
	
	ЕдиницаИзмеренияУпаковка = Справочники.УпаковкиЕдиницыИзмерения.НайтиПоКоду(КодУпаковки, , ,
								ПредопределенноеЗначение("Справочник.НаборыУпаковок.БазовыеЕдиницыИзмерения"));
	
	Запрос = Новый Запрос();         
	
	Если ПараметрыСпецификацииПоНовойЦене = Неопределено Тогда
	
		Запрос.Текст = ТекстЗапроса_ВТШапка()
			+ ОбщегоНазначения.РазделительПакетаЗапросов()
			+ ?(ПервичныеДокументыВКоробах, ТекстЗапросаВТ_НоменклатураВКоробах(), ТекстЗапросаВТ_Номенклатура())
			+ ОбщегоНазначения.РазделительПакетаЗапросов()
			+ ТекстЗапросаИтоги();
		
	Иначе
		
		Запрос.Текст = ТекстЗапроса_ВТШапка()
			+ ОбщегоНазначения.РазделительПакетаЗапросов()
			+ ТекстЗапросаВТ_НоменклатураОстатокПоНовойЦене()
			+ ОбщегоНазначения.РазделительПакетаЗапросов()
			+ ТекстЗапросаИтоги();
		
		Запрос.Параметры.Вставить("ДатаОстатков",		ПараметрыСпецификацииПоНовойЦене.ДатаОстатков);   
		Запрос.Параметры.Вставить("ДатаЦен",			ПараметрыСпецификацииПоНовойЦене.ДатаЦен);   
		Запрос.Параметры.Вставить("ПрайсЛист",			ПараметрыСпецификацииПоНовойЦене.ПрайсЛист);   
		Запрос.Параметры.Вставить("ПредоплатныйКлиент",	ПараметрыСпецификацииПоНовойЦене.ПредоплатныйКлиент);   
		Запрос.Параметры.Вставить("СкидкаКлиента",		ПараметрыСпецификацииПоНовойЦене.СкидкаКлиента);   
		
	КонецЕсли;	      
	
	Запрос.Параметры.Вставить("СсылкаНаДокумент",			СсылкаНаДокумент);   
	Запрос.Параметры.Вставить("МоментВремени",				СсылкаНаДокумент.МоментВремени());   
	Запрос.Параметры.Вставить("ТекущаяДата",				ТекущаяДатаСеанса()); 
	Запрос.Параметры.Вставить("ПервичныеДокументыВКоробах",	ПервичныеДокументыВКоробах);     
	Запрос.Параметры.Вставить("Упаковка",					ЕдиницаИзмеренияУпаковка);   
	Запрос.Параметры.Вставить("РозничныеЦены",				РозничныеЦены.Значение);     
	
	Результаты = Запрос.ВыполнитьПакет();
	
	РазмерМассиваРезультатов = Результаты.Количество();
	
	СмещениеДублейЦен		= 3;
	СмещениеШапки			= 2;
	СмещениеТабличнойЧасти	= 1;
	
	ИндексДублейЦен			= РазмерМассиваРезультатов - СмещениеДублейЦен;
	ИндексШапки				= РазмерМассиваРезультатов - СмещениеШапки;
	ИндексТабличнойЧасти	= РазмерМассиваРезультатов - СмещениеТабличнойЧасти;
	
	ДанныеШапки = Новый Структура;
	
	ТаблицаШапки = Результаты[ИндексШапки].Выгрузить();
	
	СтрокаШапки = ТаблицаШапки[0];
	
	Для Каждого Колонка Из ТаблицаШапки.Колонки Цикл 
		
		ДанныеШапки.Вставить(Колонка.Имя,СтрокаШапки[Колонка.Имя]);
		
	КонецЦикла;	   
	
	ДанныеШапки.Вставить("ЗаголовокСпецификации", "Спецификация № " + ДанныеШапки.Номер + " от " + Формат(ДанныеШапки.Дата,"ДФ=dd.MM.yyyy"));
	ДанныеШапки.Вставить("СуммаПрописью", ЧислоПрописью(ДанныеШапки.СуммаСНДС,"Л=ru_RU; ДП=Ложь","рубль, рубля, рублей, м, копейка, копейки, копеек, ж"));
	
	СведенияОПоставщике = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеШапки.Организация, ДанныеШапки.Дата);
	
	ДанныеШапки.Вставить("ДатаДоговораСтрока", Формат(ДанныеШапки.ДатаДоговора, "ДЛФ=DD"));
	ДанныеШапки.Вставить("Банк");
	ДанныеШапки.Вставить("БИК");
	ДанныеШапки.Вставить("КоррСчет");
	ДанныеШапки.Вставить("НомерСчета");
	ДанныеШапки.Вставить("ИНН");
	ДанныеШапки.Вставить("КПП");
	ДанныеШапки.Вставить("НаименованиеДляПечатныхФорм");
	
	ЗаполнитьЗначенияСвойств(ДанныеШапки, СведенияОПоставщике);  
	
	
	ДанныеШапки.Вставить("ПредставлениеПоставщика", 
	ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеШапки.Организация, ДанныеШапки.Дата),
	"ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,"));
	
	ДанныеШапки.Вставить("ПредставлениеПолучателя", 
	ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеШапки.Контрагент, ДанныеШапки.Дата),
	"ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,"));
	
	ДанныеШапки.Вставить("ПредставлениеГрузоотправителя", 
	ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеШапки.Организация, ДанныеШапки.Дата),
	"ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,"));
	
	ДанныеШапки.Вставить("ПредставлениеГрузополучателя", 
	ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеШапки.Контрагент, ДанныеШапки.Дата),
	"ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,"));
	
	ОтветственныеЛица = ОтветственныеЛицаСервер.ПолучитьОтветственныеЛицаОрганизации(ДанныеШапки.Организация);
	
	ДанныеШапки.Вставить("ФИОРуководителя", ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ОтветственныеЛица.Руководитель));
	ДанныеШапки.Вставить("РуководительДолжность", ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ОтветственныеЛица.РуководительДолжность));
	ДанныеШапки.Вставить("ФИОБухгалтера", ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ОтветственныеЛица.ГлавныйБухгалтер));
	
	
	НесколькоЦен			= Результаты[ИндексДублейЦен].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ДанныеТабличнойЧасти	= Результаты[ИндексТабличнойЧасти].Выгрузить();
	
	Для Каждого СтрокаТовара Из ДанныеТабличнойЧасти Цикл   
		
		Если СтрокаТовара.Номенклатура = Null Тогда
			
			СтрокаТовара.ЗаказПредставление = СтрокаТовара.ЗаказНомер + " от " + Формат(СтрокаТовара.ЗаказДата, "ДФ=dd.MM.yyyy"); 
			
			Продолжить;
			
		КонецЕсли;	
		
		ДнейВВисокосномГоду			= 366;    
		НомерДня28Февраля			= 59;
		НачалоВторойПоловиныМесяца	= 15;
		
		Если ДеньГода(КонецГода(СтрокаТовара.ДатаОтгрузки)) = ДнейВВисокосномГоду И ДеньГода(СтрокаТовара.ДатаОтгрузки) = НомерДня28Февраля Тогда
			
			ДатаОтгрузки = НачалоДня(КонецМесяца(СтрокаТовара.ДатаОтгрузки));   
			
		Иначе	
			
			ДатаОтгрузки = НачалоДня(СтрокаТовара.ДатаОтгрузки);   
			
		КонецЕсли;	
		
		Если ДатаОтгрузки = НачалоДня(КонецМесяца(ДатаОтгрузки)) Тогда
			
			ПредставлениеИнтервала = " (" + Формат(
					Дата(Год(ДатаОтгрузки), Месяц(ДатаОтгрузки), НачалоВторойПоловиныМесяца),
					"ДФ=dd.MM.yyyy")
					+ " - "	+ Формат(ДатаОтгрузки, "ДФ=dd.MM.yyyy")	+ ")";
			
		ИначеЕсли День(ДатаОтгрузки) < НачалоВторойПоловиныМесяца Тогда
			
			ПредставлениеИнтервала = " (" + Формат(
					НачалоМесяца(ДатаОтгрузки), 
					"ДФ=dd.MM.yyyy")
					+ " - "	+ Формат(ДатаОтгрузки, "ДФ=dd.MM.yyyy")	+ ")";  
			
		Иначе
			
			ПредставлениеИнтервала = "";
			
		КонецЕсли;	  
		
		СтрокаТовара.НоменклатураПредставление = СтрокаТовара.НоменклатураПредставление + ПредставлениеИнтервала;
		
	КонецЦикла;	
	
	Результат = Новый Структура("ДанныеШапки, ДанныеТабличнойЧасти, НесколькоЦен", ДанныеШапки, ДанныеТабличнойЧасти, НесколькоЦен);
	
	Возврат Результат;
	
КонецФункции// } #wortmann	

// #wortmann {
// #Спецификация покупателя
// Галфинд Окунев 2022/07/05
// Текст запроса по шапке документа
//
Функция ТекстЗапроса_ВТШапка()
	
	Результат = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	&ТекущаяДата КАК ТекущаяДата,
	|	гф_СпецификацияПокупателя.Номер КАК Номер,
	|	гф_СпецификацияПокупателя.Дата КАК Дата,
	|	гф_СпецификацияПокупателя.Организация КАК Организация,
	|	гф_СпецификацияПокупателя.Контрагент КАК Контрагент,
	|	гф_СпецификацияПокупателя.Договор КАК Договор,
	|	гф_СпецификацияПокупателя.Ответственный КАК Ответственный,
	|	ВЫРАЗИТЬ(гф_СпецификацияПокупателя.Комментарий КАК СТРОКА(100)) КАК Комментарий,
	|	Организации.Представление КАК ОрганизацияПредставление,
	|	Контрагенты.Представление КАК КонтрагентПредставление,
	|	ДоговорыКонтрагентов.Дата КАК ДатаДоговора,
	|	ДоговорыКонтрагентов.Номер КАК НомерДоговора,
	|	ДоговорыКонтрагентов.Представление КАК ДоговорПредставление,
	|	ВидыЦен.Ссылка КАК ВидЦен,
	|	гф_СпецификацияПокупателя.Ссылка КАК Спецификация,
	|	&ПервичныеДокументыВКоробах КАК ПервичныеДокументыВКоробах
	|ПОМЕСТИТЬ ВТ_Шапка
	|ИЗ
	|	Документ.гф_СпецификацияПокупателя КАК гф_СпецификацияПокупателя
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЦен КАК ВидыЦен
	|			ПО ДоговорыКонтрагентов.ВидЦенПродажи = ВидыЦен.Ссылка
	|		ПО гф_СпецификацияПокупателя.Договор = ДоговорыКонтрагентов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|		ПО гф_СпецификацияПокупателя.Контрагент = Контрагенты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|		ПО гф_СпецификацияПокупателя.Организация = Организации.Ссылка
	|ГДЕ
	|	гф_СпецификацияПокупателя.Ссылка = &СсылкаНаДокумент";
	
	Возврат Результат;
	
КонецФункции// } #wortmann	

// #wortmann {
// #Спецификация покупателя
// Галфинд Окунев 2022/07/05
// Текст запроса создания временных таблиц с данными по номенклатуре
//
Функция ТекстЗапросаВТ_Номенклатура()
	
	Результат = "ВЫБРАТЬ
	|	ЗаказыКлиентов.Ссылка КАК Заказ,
	|	НоменклатураСправочник.Ссылка КАК Номенклатура,
	|	ХарактеристикиНоменклатуры.Ссылка КАК Характеристика,
	|	ХарактеристикиНоменклатуры.НаименованиеПолное КАК Размер,
	|	НоменклатураСправочник.НаименованиеПолное КАК НоменклатураПредставление,
	|	ВЫБОР
	|		КОГДА ЗаказыКлиентов.НеОтгружатьЧастями
	|			ТОГДА ЗаказыКлиентов.ДатаОтгрузки
	|		ИНАЧЕ ЗаказыТовары.ДатаОтгрузки
	|	КОНЕЦ КАК ДатаОтгрузки,
	|	СУММА(ЗаказыТовары.Количество) КАК КоличествоВКоробе,
	|	СУММА(ЗаказыТовары.Количество) КАК Количество,
	|	СУММА(1) КАК КоличествоКоробов,
	|	ВЫРАЗИТЬ(ЗаказыТовары.Цена * (1 - ЗаказыТовары.ПроцентРучнойСкидки / 100) * (1 - ЗаказыТовары.ПроцентАвтоматическойСкидки / 100) КАК ЧИСЛО(15, 2)) КАК Цена,
	|	0 КАК ЦенаЗаКороб,
	|	НоменклатураСправочник.Артикул КАК Артикул,
	|	НоменклатураСправочник.ЕдиницаДляОтчетов КАК ЕдиницаДляОтчетов,
	|	ЗаказыТовары.СтавкаНДС КАК СтавкаНДС,
	|	ЕСТЬNULL(СтавкиНДС.Ставка, 0) КАК СтавкаНДСЧисло,
	|	ЦеныНоменклатурыСрезПоследних.Цена КАК РекомендуемаяРозничнаяЦена
	|ПОМЕСТИТЬ ВТ_Номенклатура
	|ИЗ
	|	ВТ_Шапка КАК ВТ_Шапка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.гф_СпецификацияПокупателя.ЗаказыКлиентов КАК СпецификацияТовары
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента.Товары КАК ЗаказыТовары
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСправочник
	|				ПО ЗаказыТовары.Номенклатура = НоменклатураСправочник.Ссылка
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтавкиНДС КАК СтавкиНДС
	|				ПО ЗаказыТовары.СтавкаНДС = СтавкиНДС.Ссылка
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры25.СрезПоследних(&МоментВремени, ВидЦены = &РозничныеЦены) КАК ЦеныНоменклатурыСрезПоследних
	|				ПО ЗаказыТовары.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|				ПО ЗаказыТовары.Характеристика = ХарактеристикиНоменклатуры.Ссылка
	|			ПО СпецификацияТовары.ЗаказКлиента = ЗаказыТовары.Ссылка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента КАК ЗаказыКлиентов
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|				ПО ЗаказыКлиентов.Контрагент = Контрагенты.Ссылка
	|			ПО СпецификацияТовары.ЗаказКлиента = ЗаказыКлиентов.Ссылка
	|		ПО ВТ_Шапка.Спецификация = СпецификацияТовары.Ссылка
	|ГДЕ
	|	СпецификацияТовары.Ссылка = &СсылкаНаДокумент
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказыТовары.Номенклатура,
	|	ЗаказыКлиентов.Ссылка,
	|	ВЫБОР
	|		КОГДА ЗаказыКлиентов.НеОтгружатьЧастями
	|			ТОГДА ЗаказыКлиентов.ДатаОтгрузки
	|		ИНАЧЕ ЗаказыТовары.ДатаОтгрузки
	|	КОНЕЦ,
	|	ЗаказыТовары.СтавкаНДС,
	|	НоменклатураСправочник.Артикул,
	|	ЦеныНоменклатурыСрезПоследних.Цена,
	|	ЗаказыТовары.Характеристика,
	|	НоменклатураСправочник.ЕдиницаДляОтчетов,
	|	ВЫРАЗИТЬ(ЗаказыТовары.Цена * (1 - ЗаказыТовары.ПроцентРучнойСкидки / 100) * (1 - ЗаказыТовары.ПроцентАвтоматическойСкидки / 100) КАК ЧИСЛО(15, 2)),
	|	ЕСТЬNULL(СтавкиНДС.Ставка, 0),
	|	НоменклатураСправочник.НаименованиеПолное,
	|	ХарактеристикиНоменклатуры.НаименованиеПолное,
	|	НоменклатураСправочник.Ссылка,
	|	ХарактеристикиНоменклатуры.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Номенклатура.Заказ КАК Заказ,
	|	ВТ_Номенклатура.Номенклатура КАК Номенклатура,
	|	ВТ_Номенклатура.Характеристика КАК Характеристика,
	|	ВТ_Номенклатура.Размер КАК Размер,
	|	ВТ_Номенклатура.НоменклатураПредставление КАК НоменклатураПредставление,
	|	ВТ_Номенклатура.ДатаОтгрузки КАК ДатаОтгрузки,
	|	ВТ_Номенклатура.КоличествоВКоробе КАК КоличествоВКоробе,
	|	СУММА(ВТ_Номенклатура.Количество) КАК Количество,
	|	СУММА(ВТ_Номенклатура.КоличествоКоробов) КАК КоличествоКоробов,
	|	ВТ_Номенклатура.Цена КАК Цена,
	|	ВТ_Номенклатура.ЦенаЗаКороб КАК ЦенаЗаКороб,
	|	ВТ_Номенклатура.Артикул КАК Артикул,
	|	ВТ_Номенклатура.ЕдиницаДляОтчетов КАК ЕдиницаДляОтчетов,
	|	ВТ_Номенклатура.СтавкаНДС КАК СтавкаНДС,
	|	ВТ_Номенклатура.СтавкаНДСЧисло КАК СтавкаНДСЧисло,
	|	ВТ_Номенклатура.РекомендуемаяРозничнаяЦена КАК РекомендуемаяРозничнаяЦена,
	|	СУММА(ВЫРАЗИТЬ(ВТ_Номенклатура.Количество * ВТ_Номенклатура.Цена КАК ЧИСЛО(15, 2))) КАК Сумма,
	|	СУММА(ВЫРАЗИТЬ(ВТ_Номенклатура.Количество * ВТ_Номенклатура.Цена * ВТ_Номенклатура.СтавкаНДСЧисло / 100 КАК ЧИСЛО(15, 2))) КАК СуммаНДС,
	|	СУММА(ВЫРАЗИТЬ(ВТ_Номенклатура.Количество * ВТ_Номенклатура.Цена * (100 + ВТ_Номенклатура.СтавкаНДСЧисло) / 100 КАК ЧИСЛО(15, 2))) КАК СуммаСНДС
	|ПОМЕСТИТЬ ВТ_НоменклатураСуммы
	|ИЗ
	|	ВТ_Номенклатура КАК ВТ_Номенклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Номенклатура.Заказ,
	|	ВТ_Номенклатура.Характеристика,
	|	ВТ_Номенклатура.НоменклатураПредставление,
	|	ВТ_Номенклатура.Артикул,
	|	ВТ_Номенклатура.СтавкаНДС,
	|	ВТ_Номенклатура.Размер,
	|	ВТ_Номенклатура.ДатаОтгрузки,
	|	ВТ_Номенклатура.Номенклатура,
	|	ВТ_Номенклатура.РекомендуемаяРозничнаяЦена,
	|	ВТ_Номенклатура.ЕдиницаДляОтчетов,
	|	ВТ_Номенклатура.Цена,
	|	ВТ_Номенклатура.СтавкаНДСЧисло,
	|	ВТ_Номенклатура.КоличествоВКоробе,
	|	ВТ_Номенклатура.ЦенаЗаКороб";
	
	Возврат Результат;
	
КонецФункции// } #wortmann	

// #wortmann {
// #Спецификация покупателя
// Галфинд Окунев 2022/07/05
// Текст запроса создания временных таблиц с данными по номенклатуре
//
Функция ТекстЗапросаВТ_НоменклатураВКоробах()
	
	Результат = "ВЫБРАТЬ
	|	ЗаказыКлиентов.Ссылка КАК Заказ,
	|	ВариантыКомплектацииНоменклатуры.Наименование КАК Артикул,
	|	НоменклатураСправочник.Ссылка КАК Номенклатура,
	|	НоменклатураСправочник.НаименованиеПолное КАК НоменклатураПредставление,
	|	ЗаказыКлиентов.ДатаОтгрузки КАК ДатаОтгрузки,
	|	СУММА(ВариантыКомплектацииНоменклатурыТовары.Количество) КАК КоличествоВКоробе,
	|	ЗаказКлиентагф_ТоварыВКоробах.Количество КАК КоличествоКоробов,
	|	СУММА(ВариантыКомплектацииНоменклатурыТовары.Количество) * ЗаказКлиентагф_ТоварыВКоробах.Количество КАК Количество,
	|	ВЫБОР КОГДА СУММА(ВариантыКомплектацииНоменклатурыТовары.Количество) = 0 ТОГДА ЗаказКлиентагф_ТоварыВКоробах.ЦенаКороба ИНАЧЕ
	|	ЗаказКлиентагф_ТоварыВКоробах.ЦенаКороба/СУММА(ВариантыКомплектацииНоменклатурыТовары.Количество) КОНЕЦ КАК Цена,
	|	ЗаказКлиентагф_ТоварыВКоробах.ЦенаКороба КАК ЦенаЗаКороб,
	|	&Упаковка КАК ЕдиницаДляОтчетов,
	|	ЦеныНоменклатурыСрезПоследних.Цена КАК РекомендуемаяРозничнаяЦена,
	|	СтавкиНДС.Ссылка КАК СтавкаНДС,
	|	СтавкиНДС.Ставка КАК СтавкаНДСЧисло
	|ПОМЕСТИТЬ ВТ_Номенклатура
	|ИЗ
	|	ВТ_Шапка КАК ВТ_Шапка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.гф_СпецификацияПокупателя.ЗаказыКлиентов КАК СпецификацияТовары
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента КАК ЗаказыКлиентов
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента.гф_ТоварыВКоробах КАК ЗаказКлиентагф_ТоварыВКоробах
	|					ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыКомплектацииНоменклатуры КАК ВариантыКомплектацииНоменклатуры
	|						ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВариантыКомплектацииНоменклатуры.Товары КАК ВариантыКомплектацииНоменклатурыТовары
	|						ПО ВариантыКомплектацииНоменклатуры.Ссылка = ВариантыКомплектацииНоменклатурыТовары.Ссылка
	|						ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСправочник
	|							ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтавкиНДС КАК СтавкиНДС
	|							ПО НоменклатураСправочник.СтавкаНДС = СтавкиНДС.Ссылка
	|						ПО ВариантыКомплектацииНоменклатуры.Владелец = НоменклатураСправочник.Ссылка
	|						ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры25.СрезПоследних(&МоментВремени, ВидЦены = &РозничныеЦены) КАК ЦеныНоменклатурыСрезПоследних
	|						ПО ВариантыКомплектацииНоменклатуры.Владелец = ЦеныНоменклатурыСрезПоследних.Номенклатура
	|					ПО ЗаказКлиентагф_ТоварыВКоробах.ВариантКомплектации = ВариантыКомплектацииНоменклатуры.Ссылка
	|				ПО ЗаказыКлиентов.Ссылка = ЗаказКлиентагф_ТоварыВКоробах.Ссылка
	|			ПО СпецификацияТовары.ЗаказКлиента = ЗаказыКлиентов.Ссылка
	|		ПО ВТ_Шапка.Спецификация = СпецификацияТовары.Ссылка
	|ГДЕ
	|	СпецификацияТовары.Ссылка = &СсылкаНаДокумент
	
	|СГРУППИРОВАТЬ ПО
	|	СтавкиНДС.Ссылка,
	|	ЦеныНоменклатурыСрезПоследних.Цена,
	|	ВариантыКомплектацииНоменклатуры.Наименование,
	|	НоменклатураСправочник.Ссылка,
	|	ЗаказыКлиентов.Ссылка,
	|	НоменклатураСправочник.НаименованиеПолное,
	|	ЗаказыКлиентов.ДатаОтгрузки,
	|	ЗаказКлиентагф_ТоварыВКоробах.Количество,
	|	ЗаказКлиентагф_ТоварыВКоробах.ЦенаКороба,
	|	СтавкиНДС.Ставка
	|;
	
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Номенклатура.Заказ КАК Заказ,
	|	ВТ_Номенклатура.Артикул КАК Артикул,
	|	ВТ_Номенклатура.Номенклатура КАК Номенклатура,
	|	ВТ_Номенклатура.НоменклатураПредставление КАК НоменклатураПредставление,
	|	ВТ_Номенклатура.ДатаОтгрузки КАК ДатаОтгрузки,
	|	ВТ_Номенклатура.КоличествоВКоробе КАК КоличествоВКоробе,
	|	ВТ_Номенклатура.КоличествоКоробов КАК КоличествоКоробов,
	|	ВТ_Номенклатура.Количество КАК Количество,
	|	ВТ_Номенклатура.Цена КАК Цена,
	|	ВТ_Номенклатура.ЦенаЗаКороб КАК ЦенаЗаКороб,
	|	ВТ_Номенклатура.ЕдиницаДляОтчетов КАК ЕдиницаДляОтчетов,
	|	ВТ_Номенклатура.РекомендуемаяРозничнаяЦена КАК РекомендуемаяРозничнаяЦена,
	|	ВТ_Номенклатура.СтавкаНДС КАК СтавкаНДС,
	|	ВТ_Номенклатура.СтавкаНДСЧисло КАК СтавкаНДСЧисло,
	|	ВЫРАЗИТЬ(ВТ_Номенклатура.КоличествоКоробов * ВТ_Номенклатура.ЦенаЗаКороб КАК ЧИСЛО(15, 2)) КАК Сумма,
	|	ВЫРАЗИТЬ(ВТ_Номенклатура.КоличествоКоробов * ВТ_Номенклатура.ЦенаЗаКороб * ВТ_Номенклатура.СтавкаНДСЧисло / 100 КАК ЧИСЛО(15, 2)) КАК СуммаНДС,
	|	ВЫРАЗИТЬ(ВТ_Номенклатура.КоличествоКоробов * ВТ_Номенклатура.ЦенаЗаКороб * (100 + ВТ_Номенклатура.СтавкаНДСЧисло) / 100 КАК ЧИСЛО(15, 2)) КАК СуммаСНДС,
	|	"""" КАК Размер
	|ПОМЕСТИТЬ ВТ_НоменклатураСуммы
	|ИЗ
	|	ВТ_Номенклатура КАК ВТ_Номенклатура";
	
	Возврат Результат;
	
КонецФункции// } #wortmann	

// #wortmann {
// #Спецификация покупателя
// Галфинд Окунев 2022/07/05
// Текст запроса создания временных таблиц с данными по номенклатуре
// для остатков по новой цене
//
Функция ТекстЗапросаВТ_НоменклатураОстатокПоНовойЦене()
	
	Результат = "ВЫБРАТЬ
	|	Контрагенты.Представление КАК ИмяКлиента,
	|	ЗаказыКлиентов.Ссылка КАК Заказ,
	|	ЗаказыКлиентов.Номер КАК НомерЗаказа,
	|	ЗаказыКлиентов.Дата КАК ДатаЗаказа,
	|	ЗаказыКлиентов.Представление КАК ПредставлениеЗаказа,
	|	ЗаказыТовары.Номенклатура КАК Номенклатура,
	|	ЗаказыТовары.Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
	|	ВЫБОР
	|		КОГДА ЗаказыКлиентов.НеОтгружатьЧастями
	|			ТОГДА ЗаказыКлиентов.ДатаОтгрузки
	|		ИНАЧЕ ЗаказыТовары.ДатаОтгрузки
	|	КОНЕЦ КАК ДатаОтгрузки,
	|	ВЫБОР
	|		КОГДА ЗаказыТовары.КоличествоУпаковок = 0
	|			ТОГДА ЗаказыТовары.Количество
	|		ИНАЧЕ ЗаказыТовары.Количество / ЗаказыТовары.КоличествоУпаковок
	|	КОНЕЦ КАК КоличествоВУпаковке,
	|	СУММА(ЗаказыТовары.Количество) КАК Количество,
	|	СУММА(ЗаказыТовары.КоличествоУпаковок) КАК КоличествоУпаковок,
	|	НоменклатураСправочник.Артикул КАК Артикул,
	|	НоменклатураСправочник.ЕдиницаДляОтчетов КАК ЕдиницаДляОтчетов,
	|	ЗаказыТовары.СтавкаНДС КАК СтавкаНДС,
	|	ЕСТЬNULL(СтавкиНДС.Ставка, 0) КАК СтавкаНДСЧисло,
	|	Договоры.Ссылка КАК Договор,
	|	ВТ_Шапка.ВидЦен КАК ВидЦен,
	|	ВТ_Шапка.Спецификация КАК Спецификация
	|ПОМЕСТИТЬ ВТ_Номенклатура
	|ИЗ
	|	ВТ_Шапка КАК ВТ_Шапка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.гф_СпецификацияПокупателя.ЗаказыКлиентов КАК СпецификацияТовары
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента.Товары КАК ЗаказыТовары
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСправочник
	|				ПО ЗаказыТовары.Номенклатура = НоменклатураСправочник.Ссылка
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтавкиНДС КАК СтавкиНДС
	|				ПО ЗаказыТовары.СтавкаНДС = СтавкиНДС.Ссылка
	|			ПО СпецификацияТовары.ЗаказКлиента = ЗаказыТовары.Ссылка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента КАК ЗаказыКлиентов
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|				ПО ЗаказыКлиентов.Контрагент = Контрагенты.Ссылка
	|			ПО СпецификацияТовары.ЗаказКлиента = ЗаказыКлиентов.Ссылка
	|		ПО ВТ_Шапка.Спецификация = СпецификацияТовары.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК Договоры
	|		ПО ВТ_Шапка.Договор = Договоры.Ссылка
	|ГДЕ
	|	СпецификацияТовары.Ссылка = &СсылкаНаДокумент
	
	|СГРУППИРОВАТЬ ПО
	|	ЗаказыКлиентов.Ссылка,
	|	ЗаказыТовары.СтавкаНДС,
	|	НоменклатураСправочник.ЕдиницаДляОтчетов,
	|	НоменклатураСправочник.Артикул,
	|	ЗаказыТовары.ДатаОтгрузки,
	|	Договоры.Ссылка,
	|	ЗаказыТовары.Номенклатура,
	|	Контрагенты.Представление,
	|	ЗаказыКлиентов.Номер,
	|	ЗаказыКлиентов.Дата,
	|	ЗаказыКлиентов.Представление,
	|	ЗаказыТовары.Номенклатура.НаименованиеПолное,
	|	ВЫБОР
	|		КОГДА ЗаказыТовары.КоличествоУпаковок = 0
	|			ТОГДА ЗаказыТовары.Количество
	|		ИНАЧЕ ЗаказыТовары.Количество / ЗаказыТовары.КоличествоУпаковок
	|	КОНЕЦ,
	|	ЕСТЬNULL(СтавкиНДС.Ставка, 0),
	|	ВТ_Шапка.ВидЦен,
	|	ВТ_Шапка.Спецификация,
	|	ВЫБОР
	|		КОГДА ЗаказыКлиентов.НеОтгружатьЧастями
	|			ТОГДА ЗаказыКлиентов.ДатаОтгрузки
	|		ИНАЧЕ ЗаказыТовары.ДатаОтгрузки
	|	КОНЕЦ
	|;
	
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Номенклатура.ИмяКлиента КАК ИмяКлиента,
	|	ВТ_Номенклатура.Заказ КАК Заказ,
	|	ВТ_Номенклатура.НомерЗаказа КАК НомерЗаказа,
	|	ВТ_Номенклатура.ДатаЗаказа КАК ДатаЗаказа,
	|	ВТ_Номенклатура.ПредставлениеЗаказа КАК ПредставлениеЗаказа,
	|	ВТ_Номенклатура.Номенклатура КАК Номенклатура,
	|	ВТ_Номенклатура.НоменклатураПредставление КАК НоменклатураПредставление,
	|	ВТ_Номенклатура.ДатаОтгрузки КАК ДатаОтгрузки,
	|	ВТ_Номенклатура.КоличествоВУпаковке КАК КоличествоВУпаковке,
	|	ЗаказыКлиентовОстатки.ЗаказаноОстаток КАК Количество,
	|	ВЫБОР
	|		КОГДА ВТ_Номенклатура.КоличествоВУпаковке = 0
	|			ТОГДА ЗаказыКлиентовОстатки.ЗаказаноОстаток
	|		ИНАЧЕ ЗаказыКлиентовОстатки.ЗаказаноОстаток / ВТ_Номенклатура.КоличествоВУпаковке
	|	КОНЕЦ КАК КоличествоУпаковок,
	|	ВТ_Номенклатура.Артикул КАК Артикул,
	|	ВТ_Номенклатура.ЕдиницаДляОтчетов КАК ЕдиницаДляОтчетов,
	|	ВТ_Номенклатура.СтавкаНДС КАК СтавкаНДС,
	|	ВТ_Номенклатура.СтавкаНДСЧисло КАК СтавкаНДСЧисло,
	|	ВТ_Номенклатура.Договор КАК Договор,
	|	ВТ_Номенклатура.ВидЦен КАК ВидЦен,
	|	ВТ_Номенклатура.Спецификация КАК Спецификация
	|ПОМЕСТИТЬ ВТ_НоменклатураКоличество
	|ИЗ
	|	ВТ_Номенклатура КАК ВТ_Номенклатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыКлиентов.Остатки(
	|				&ДатаОстатков,
	|				(ЗаказКлиента, Номенклатура) В
	|					(ВЫБРАТЬ
	|						Т.Заказ,
	|						Т.Номенклатура
	|					ИЗ
	|						ВТ_Номенклатура КАК Т)) КАК ЗаказыКлиентовОстатки
	|		ПО ВТ_Номенклатура.Номенклатура = ЗаказыКлиентовОстатки.Номенклатура
	|			И ВТ_Номенклатура.Заказ = ЗаказыКлиентовОстатки.ЗаказКлиента
	|;
	
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Номенклатура.ИмяКлиента КАК ИмяКлиента,
	|	ВТ_Номенклатура.Заказ КАК Заказ,
	|	ВТ_Номенклатура.НомерЗаказа КАК НомерЗаказа,
	|	ВТ_Номенклатура.ДатаЗаказа КАК ДатаЗаказа,
	|	ВТ_Номенклатура.ПредставлениеЗаказа КАК ПредставлениеЗаказа,
	|	ВТ_Номенклатура.Номенклатура КАК Номенклатура,
	|	ВТ_Номенклатура.НоменклатураПредставление КАК НоменклатураПредставление,
	|	ВТ_Номенклатура.ДатаОтгрузки КАК ДатаОтгрузки,
	|	ВТ_Номенклатура.КоличествоВУпаковке КАК КоличествоВУпаковке,
	|	ВТ_Номенклатура.Количество КАК Количество,
	|	ВТ_Номенклатура.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ВТ_Номенклатура.Артикул КАК Артикул,
	|	ВТ_Номенклатура.ЕдиницаДляОтчетов КАК ЕдиницаДляОтчетов,
	|	ВТ_Номенклатура.СтавкаНДС КАК СтавкаНДС,
	|	ВТ_Номенклатура.СтавкаНДСЧисло КАК СтавкаНДСЧисло,
	|	ВТ_Номенклатура.Договор КАК Договор,
	|	ВТ_Номенклатура.ВидЦен КАК ВидЦен,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(Цены.Цена, 0) * (1 - &СкидкаКлиента / 100) КАК ЧИСЛО(15, 0)) КАК Цена,
	|	(ВЫРАЗИТЬ(ЕСТЬNULL(Цены.Цена, 0) * (1 - &СкидкаКлиента / 100) КАК ЧИСЛО(15, 0))) * ВТ_Номенклатура.КоличествоВУпаковке КАК ЦенаЗаКороб,
	|	ЕСТЬNULL(РекомендованныеЦены.Цена, 0) КАК РекомендованнаяРозничнаяЦена,
	|	ВТ_Номенклатура.Спецификация КАК Спецификация,
	|	(ВЫРАЗИТЬ(ЕСТЬNULL(Цены.Цена, 0) * (1 - &СкидкаКлиента / 100) КАК ЧИСЛО(15, 0))) * ВТ_Номенклатура.Количество КАК Сумма,
	|	ВЫРАЗИТЬ((ВЫРАЗИТЬ(ЕСТЬNULL(Цены.Цена, 0) * (1 - &СкидкаКлиента / 100) КАК ЧИСЛО(15, 0))) * ВТ_Номенклатура.Количество * ВТ_Номенклатура.СтавкаНДСЧисло / 100 КАК ЧИСЛО(15, 0)) КАК СуммаНДС,
	|	(ВЫРАЗИТЬ(ЕСТЬNULL(Цены.Цена, 0) * (1 - &СкидкаКлиента / 100) КАК ЧИСЛО(15, 0))) * ВТ_Номенклатура.Количество + (ВЫРАЗИТЬ((ВЫРАЗИТЬ(ЕСТЬNULL(Цены.Цена, 0) * (1 - &СкидкаКлиента / 100) КАК ЧИСЛО(15, 0))) * ВТ_Номенклатура.Количество * ВТ_Номенклатура.СтавкаНДСЧисло / 100 КАК ЧИСЛО(15, 0))) КАК СуммаСНДС
	|ПОМЕСТИТЬ ВТ_НоменклатураСуммы
	|ИЗ
	|	ВТ_НоменклатураКоличество КАК ВТ_Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры25.СрезПоследних(
	|				&ДатаЦен,
	|				(Номенклатура, ВидЦены) В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						Т.Номенклатура,
	|						Т.ВидЦен
	|					ИЗ
	|						ВТ_Номенклатура КАК Т)) КАК Цены
	|		ПО ВТ_Номенклатура.Номенклатура = Цены.Номенклатура
	|			И ВТ_Номенклатура.ВидЦен = Цены.ВидЦены
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры25.СрезПоследних(
	|				&ДатаЦен,
	|				Номенклатура В
	|						(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|							Т.Номенклатура
	|						ИЗ
	|							ВТ_Номенклатура КАК Т)
	|					И ВидЦены = &ПрайсЛист) КАК РекомендованныеЦены
	|		ПО ВТ_Номенклатура.Номенклатура = РекомендованныеЦены.Номенклатура";
	
	Возврат Результат;
	
КонецФункции// } #wortmann	

// #wortmann {
// #Спецификация покупателя
// Галфинд Окунев 2022/07/05
// Текст запроса выбора строк печатной формы
//
Функция ТекстЗапросаИтоги()
	
	Результат = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Подзапрос.Артикул КАК Артикул,
	|	ВТ_Номенклатура.Заказ КАК Заказ
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА ВТ_Номенклатура.Артикул = """"
	|				ТОГДА ВТ_Номенклатура.НоменклатураПредставление
	|			ИНАЧЕ ВТ_Номенклатура.Артикул
	|		КОНЕЦ КАК Артикул,
	|		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_Номенклатура.Цена) КАК КоличествоРазныхЦен
	|	ИЗ
	|		ВТ_НоменклатураСуммы КАК ВТ_Номенклатура
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВЫБОР
	|			КОГДА ВТ_Номенклатура.Артикул = """"
	|				ТОГДА ВТ_Номенклатура.НоменклатураПредставление
	|			ИНАЧЕ ВТ_Номенклатура.Артикул
	|		КОНЕЦ) КАК Подзапрос
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Номенклатура КАК ВТ_Номенклатура
	|		ПО Подзапрос.Артикул = ВТ_Номенклатура.Артикул
	|ГДЕ
	|	Подзапрос.КоличествоРазныхЦен > 1
	
	|ОБЪЕДИНИТЬ ВСЕ
	
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Подзапрос.Артикул,
	|	ВТ_Номенклатура.Заказ
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА ВТ_Номенклатура.Артикул = """"
	|				ТОГДА ВТ_Номенклатура.НоменклатураПредставление
	|			ИНАЧЕ ВТ_Номенклатура.Артикул
	|		КОНЕЦ КАК Артикул,
	|		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_Номенклатура.Цена) КАК КоличествоРазныхЦен
	|	ИЗ
	|		ВТ_НоменклатураСуммы КАК ВТ_Номенклатура
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВЫБОР
	|			КОГДА ВТ_Номенклатура.Артикул = """"
	|				ТОГДА ВТ_Номенклатура.НоменклатураПредставление
	|			ИНАЧЕ ВТ_Номенклатура.Артикул
	|		КОНЕЦ) КАК Подзапрос
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Номенклатура КАК ВТ_Номенклатура
	|		ПО Подзапрос.Артикул = ВТ_Номенклатура.НоменклатураПредставление
	|ГДЕ
	|	Подзапрос.КоличествоРазныхЦен > 1
	|ИТОГИ ПО
	|	Артикул
	|;
	
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Шапка.ТекущаяДата КАК ТекущаяДата,
	|	ВТ_Шапка.Номер КАК Номер,
	|	ВТ_Шапка.Дата КАК Дата,
	|	ВТ_Шапка.Организация КАК Организация,
	|	ВТ_Шапка.Контрагент КАК Контрагент,
	|	ВТ_Шапка.Договор КАК Договор,
	|	ВТ_Шапка.Ответственный КАК Ответственный,
	|	ВТ_Шапка.Комментарий КАК Комментарий,
	|	ВТ_Шапка.ОрганизацияПредставление КАК ОрганизацияПредставление,
	|	ВТ_Шапка.КонтрагентПредставление КАК КонтрагентПредставление,
	|	ВТ_Шапка.ДатаДоговора КАК ДатаДоговора,
	|	ВТ_Шапка.НомерДоговора КАК НомерДоговора,
	|	ВТ_Шапка.ДоговорПредставление КАК ДоговорПредставление,
	|	ВТ_Шапка.ВидЦен КАК ВидЦен,
	|	ВТ_Шапка.Спецификация КАК Спецификация,
	|	ВТ_Шапка.ПервичныеДокументыВКоробах КАК ПервичныеДокументыВКоробах,
	|	СУММА(ВТ_НоменклатураСуммы.Количество) КАК Количество,
	|	СУММА(ВТ_НоменклатураСуммы.КоличествоКоробов) КАК КоличествоКоробов,
	|	СУММА(ВТ_НоменклатураСуммы.Сумма) КАК Сумма,
	|	СУММА(ВТ_НоменклатураСуммы.СуммаНДС) КАК СуммаНДС,
	|	СУММА(ВТ_НоменклатураСуммы.СуммаСНДС) КАК СуммаСНДС
	|ИЗ
	|	ВТ_Шапка КАК ВТ_Шапка,
	|	ВТ_НоменклатураСуммы КАК ВТ_НоменклатураСуммы
	
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Шапка.Договор,
	|	ВТ_Шапка.Ответственный,
	|	ВТ_Шапка.НомерДоговора,
	|	ВТ_Шапка.Номер,
	|	ВТ_Шапка.Контрагент,
	|	ВТ_Шапка.ДатаДоговора,
	|	ВТ_Шапка.КонтрагентПредставление,
	|	ВТ_Шапка.ОрганизацияПредставление,
	|	ВТ_Шапка.ДоговорПредставление,
	|	ВТ_Шапка.ТекущаяДата,
	|	ВТ_Шапка.Комментарий,
	|	ВТ_Шапка.Организация,
	|	ВТ_Шапка.Дата,
	|	ВТ_Шапка.ПервичныеДокументыВКоробах,
	|	ВТ_Шапка.Спецификация,
	|	ВТ_Шапка.ВидЦен
	|;
	
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказКлиента.Ссылка КАК Заказ,
	|	ЗаказКлиента.Представление КАК ЗаказПредставление,
	|	ЗаказКлиента.Номер КАК ЗаказНомер,
	|	ЗаказКлиента.Дата КАК ЗаказДата,
	|	ЗаказКлиента.гф_ИмяЗаказа КАК ИмяЗаказа,
	|	ВТ_НоменклатураСуммы.Размер КАК Размер,
	|	ВТ_НоменклатураСуммы.Номенклатура КАК Номенклатура,
	|	ВТ_НоменклатураСуммы.НоменклатураПредставление КАК НоменклатураПредставление,
	|	ВТ_НоменклатураСуммы.ДатаОтгрузки КАК ДатаОтгрузки,
	|	ВТ_НоменклатураСуммы.КоличествоВКоробе КАК КоличествоВКоробе,
	|	ВТ_НоменклатураСуммы.Количество КАК Количество,
	|	ВТ_НоменклатураСуммы.КоличествоКоробов КАК КоличествоКоробов,
	|	ВТ_НоменклатураСуммы.РекомендуемаяРозничнаяЦена КАК РекомендуемаяРозничнаяЦена,
	|	ВТ_НоменклатураСуммы.Цена КАК Цена,
	|	ВТ_НоменклатураСуммы.ЦенаЗаКороб КАК ЦенаЗаКороб,
	|	ВТ_НоменклатураСуммы.Артикул КАК Артикул,
	|	ВТ_НоменклатураСуммы.ЕдиницаДляОтчетов КАК ЕдиницаДляОтчетов,
	|	ВТ_НоменклатураСуммы.СтавкаНДС КАК СтавкаНДС,
	|	ВТ_НоменклатураСуммы.СтавкаНДСЧисло КАК СтавкаНДСЧисло,
	|	ВТ_НоменклатураСуммы.Сумма КАК Сумма,
	|	ВТ_НоменклатураСуммы.СуммаНДС КАК СуммаНДС,
	|	ВТ_НоменклатураСуммы.СуммаСНДС КАК СуммаСНДС
	|ИЗ
	|	ВТ_НоменклатураСуммы КАК ВТ_НоменклатураСуммы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента КАК ЗаказКлиента
	|		ПО ВТ_НоменклатураСуммы.Заказ = ЗаказКлиента.Ссылка
	
	|УПОРЯДОЧИТЬ ПО
	|	ЗаказДата,
	|	ЗаказНомер,
	|	НоменклатураПредставление,
	|	Размер
	|ИТОГИ
	|	СУММА(Количество),
	|	СУММА(КоличествоКоробов),
	|	СУММА(Сумма),
	|	СУММА(СуммаНДС),
	|	СУММА(СуммаСНДС)
	|ПО
	|	Заказ";
	
	Возврат Результат;
	
КонецФункции// } #wortmann	

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДанныеШапки.Дата КАК Период,
	               |	Контрагенты.Партнер КАК Партнер,
	               |	ДанныеШапки.Контрагент КАК Контрагент,
	               |	ДанныеШапки.Организация КАК Организация,
	               |	ДанныеШапки.Договор КАК Договор,
	               |	ДанныеШапки.Ответственный КАК Ответственный,
	               |	ДанныеШапки.Комментарий КАК Комментарий,
	               |	ДанныеШапки.Ссылка КАК Ссылка,
	               |	ДанныеШапки.Номер КАК Номер,
	               |	ДанныеШапки.Проведен КАК Проведен,
	               |	ДанныеШапки.ПометкаУдаления КАК ПометкаУдаления
	               |ИЗ
	               |	Документ.гф_СпецификацияПокупателя КАК ДанныеШапки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	               |		ПО ДанныеШапки.Контрагент = Контрагенты.Ссылка
	               |ГДЕ
	               |	ДанныеШапки.Ссылка = &Ссылка";       
	
	Реквизиты = Запрос.Выполнить().Выбрать();
	
	Реквизиты.Следующий();
	
	Запрос.УстановитьПараметр("Период",						Реквизиты.Период);
	Запрос.УстановитьПараметр("Партнер",					Реквизиты.Партнер);
	Запрос.УстановитьПараметр("Организация",				Реквизиты.Организация);
	Запрос.УстановитьПараметр("Договор",					Реквизиты.Договор);
	Запрос.УстановитьПараметр("Контрагент",					Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("Номер",						Реквизиты.Номер);
	Запрос.УстановитьПараметр("Ответственный",				Реквизиты.Ответственный);
	Запрос.УстановитьПараметр("Комментарий",				Реквизиты.Комментарий);
	Запрос.УстановитьПараметр("Проведен",					Реквизиты.Проведен);
	Запрос.УстановитьПараметр("ПометкаУдаления",			Реквизиты.ПометкаУдаления);
	Запрос.УстановитьПараметр("ИдентификаторМетаданных",	ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ТипЗнч(ДокументСсылка)));
	
	ИнформацияПоДоговору = Неопределено;     
	
	Если ЗначениеЗаполнено(Реквизиты.Договор) Тогда
		
		ИнформацияПоДоговору = НСтр("ru = 'По договору ""%Договор%""';
									|en = 'Under the ""%Договор%"" contract'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		
		ИнформацияПоДоговору = СтрЗаменить(ИнформацияПоДоговору, "%Договор%", Реквизиты.Договор);
		
	КонецЕсли;   
	
	Запрос.УстановитьПараметр("ИнформацияПоДоговору", ИнформацияПоДоговору);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Ссылка 					КАК Ссылка,
	|	&Период 					КАК ДатаДокументаИБ,
	|	&Номер 						КАК НомерДокументаИБ,
	|	&ИдентификаторМетаданных	КАК ТипСсылки,
	|	&Организация 				КАК Организация,
	|	НЕОПРЕДЕЛЕНО 				КАК ХозяйственнаяОперация,
	|	&Партнер 					КАК Партнер,
	|	&Контрагент 				КАК Контрагент,
	|	&Договор 					КАК Договор,
	|	НЕОПРЕДЕЛЕНО 				КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО 				КАК МестоХранения,
	|	НЕОПРЕДЕЛЕНО 				КАК Подразделение,
	|	&Ответственный 				КАК Ответственный,
	|	&Ответственный 				КАК Автор,
	|	&Комментарий 				КАК Комментарий,
	|	НЕОПРЕДЕЛЕНО 				КАК Валюта,
	|	НЕОПРЕДЕЛЕНО 				КАК Сумма,
	|	НЕОПРЕДЕЛЕНО 				КАК Статус,
	|	&Проведен 					КАК Проведен,
	|	&ПометкаУдаления			КАК ПометкаУдаления,
	|	ЛОЖЬ						КАК ДополнительнаяЗапись,
	|	&ИнформацияПоДоговору		КАК Дополнительно,
	|	НЕОПРЕДЕЛЕНО				КАК ДатаПервичногоДокумента,
	|	ЛОЖЬ						КАК СторноИсправление,
	|	НЕОПРЕДЕЛЕНО				КАК СторнируемыйДокумент,
	|	НЕОПРЕДЕЛЕНО				КАК ИсправляемыйДокумент,
	|	НЕОПРЕДЕЛЕНО				КАК НомерПервичногоДокумента,
	|	НЕОПРЕДЕЛЕНО				КАК Приоритет";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти
	
#КонецЕсли
