
&ИзменениеИКонтроль("ЗаполнитьПоРеализацииТоваров")
Процедура гф_ЗаполнитьПоРеализацииТоваров(Знач Основание, ДанныеЗаполнения)
	
	#Вставка
	// ++ Галфинд_ДомнышеваКР_08_04_2024
	Если ТипЗнч(ДанныеЗаполнения)= Тип("Структура")
		И ДанныеЗаполнения.Свойство("СТЧ") Тогда
		ЕстьОшибкиПроведен = Ложь;
	Иначе 
		ЕстьОшибкиПроведен = Неопределено;
	КонецЕсли; 
	// -- Галфинд_ДомнышеваКР_08_04_2024
	#КонецВставки
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Дата,
	|	ДанныеДокумента.Дата КАК ДатаПредоплаты,
	|	ДанныеДокумента.Партнер КАК Партнер,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ДанныеДокумента.КонтактноеЛицо КАК КонтактноеЛицо,
	|	ДанныеДокумента.Договор КАК Договор,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.Организация.Префикс КАК Префикс,
	|	ДанныеДокумента.ФормаОплаты КАК ФормаОплаты,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	ДанныеДокумента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ДанныеДокумента.СуммаДокумента КАК СуммаДокумента,
	|	ДанныеДокумента.Ссылка КАК ДокументОснование,
	|	ДанныеДокумента.Соглашение КАК Соглашение,
	|	ДанныеДокумента.Соглашение.Номер КАК НомерСоглашения,
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|
	|	ВЫБОР КОГДА ДанныеДокумента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов) ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК РасчетыПоДоговору,
	|
	|	NULL КАК Статус,
	|	ДанныеДокумента.БанковскийСчетОрганизации КАК БанковскийСчет,
	|	ДанныеДокумента.Руководитель КАК Руководитель,
	|	ДанныеДокумента.ГлавныйБухгалтер КАК ГлавныйБухгалтер,
	|	ДанныеДокумента.Касса КАК Касса,
	|	НЕ ДанныеДокумента.Проведен КАК ЕстьОшибкиПроведен,
	|	ЛОЖЬ КАК ЕстьОшибкиСтатус,
	|	ВЫБОР
	|		КОГДА
	|			ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссию)
	|		ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОшибкиХозяйственнаяОперация
	|
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И (ДанныеДокумента.ЗаказКлиента = НЕОПРЕДЕЛЕНО
	|		ИЛИ ДанныеДокумента.ЗаказКлиента = ЗНАЧЕНИЕ(Документ.ЗаказКлиента.ПустаяСсылка)
	|		ИЛИ ДанныеДокумента.ЗаказКлиента = ЗНАЧЕНИЕ(Документ.ЗаявкаНаВозвратТоваровОтКлиента.ПустаяСсылка)
	|		ИЛИ ДанныеДокумента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
	|		ИЛИ ДанныеДокумента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоНакладным)
	|		ИЛИ ДанныеДокумента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамНакладным)
	|		ИЛИ ДанныеДокумента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоЗаказамНакладным)
	|	)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.ДатаПлатежа КАК ДатаПлатежа,
	|	0 КАК ПроцентПлатежа,
	|	
	|	СУММА(ДанныеДокумента.СуммаЗалогаЗаТару) КАК СуммаПлатежа,
	|	ИСТИНА КАК ЭтоЗалогЗаТару
	|
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.ЭтапыГрафикаОплаты КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Ссылка,
	|	ДанныеДокумента.ДатаПлатежа
	|ИМЕЮЩИЕ
	|	СУММА(ДанныеДокумента.СуммаЗалогаЗаТару) > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.ДатаПлатежа КАК ДатаПлатежа,
	|	
	|	СУММА(ДанныеДокумента.ПроцентПлатежа) КАК ПроцентПлатежа,
	|	СУММА(ДанныеДокумента.СуммаПлатежа) КАК СуммаПлатежа,
	|	ЛОЖЬ КАК ЭтоЗалогЗаТару
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.ЭтапыГрафикаОплаты КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Ссылка,
	|	ДанныеДокумента.ДатаПлатежа
	|ИМЕЮЩИЕ
	|	СУММА(ДанныеДокумента.СуммаПлатежа) > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаПлатежа УБЫВ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(РасчетыСКлиентами.КОплатеОстаток,0) КАК СуммаОплаты
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентами.Остатки(, ОбъектРасчетов.Объект = &Ссылка) КАК РасчетыСКлиентами
	|");
	Запрос.УстановитьПараметр("Ссылка", Основание);

	РезультатЗапроса = Запрос.ВыполнитьПакет();

	ДанныеЗаполнения = Новый Структура;
	Для Каждого Колонка Из РезультатЗапроса[0].Колонки Цикл
		ДанныеЗаполнения.Вставить(Колонка.Имя);
	КонецЦикла;

	СуммаОснования = 0;
	ВыборкаПоДокументу = РезультатЗапроса[0].Выбрать();
	ВыборкаПоЭтапам    = РезультатЗапроса[1].Выбрать();
	ВыборкаПоРасчетам  = РезультатЗапроса[2].Выбрать();

	Если ВыборкаПоДокументу.Следующий() Тогда

		МассивДопустимыхСтатусов = Новый Массив();
		МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыЗаказовКлиентов.КОбеспечению);
		МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыЗаказовКлиентов.КОтгрузке);
		МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыЗаказовКлиентов.Закрыт);

		Документы.СчетНаОплатуКлиенту.ПроверитьКорректностьХозяйственнойОперацииДокументаОснования(
		ВыборкаПоДокументу.ЕстьОшибкиХозяйственнаяОперация,
		ВыборкаПоДокументу.ХозяйственнаяОперация);

		ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(
		ВыборкаПоДокументу.ДокументОснование,
		ВыборкаПоДокументу.Статус,
		#Вставка
		// ++ Галфинд_ДомнышеваКР_08_04_2024
		?(ЕстьОшибкиПроведен <> Неопределено, ЕстьОшибкиПроведен, ВыборкаПоДокументу.ЕстьОшибкиПроведен),
		#КонецВставки
		#Удаление
		ВыборкаПоДокументу.ЕстьОшибкиПроведен,
		#КонецУдаления
		ВыборкаПоДокументу.ЕстьОшибкиСтатус,
		МассивДопустимыхСтатусов);

		ЗаполнитьЗначенияСвойств(ДанныеЗаполнения, ВыборкаПоДокументу);

		НазначениеПлатежа = Документы.СчетНаОплатуКлиенту.СформироватьНазначениеПлатежа(
		ВыборкаПоДокументу.Номер,
		Основание);

		Если ВыборкаПоДокументу.РасчетыПоДоговору Тогда

			Пока ВыборкаПоЭтапам.Следующий() Цикл
				ЭтапОплаты = ЭтапыГрафикаОплаты.Добавить();
				ЗаполнитьЗначенияСвойств(ЭтапОплаты, ВыборкаПоЭтапам);
			КонецЦикла;

		Иначе

			Если ВыборкаПоРасчетам.Следующий() Тогда

				СуммаОплаты = ВыборкаПоРасчетам.СуммаОплаты;
				Если ВыборкаПоДокументу.ВалютаВзаиморасчетов <> ВыборкаПоДокументу.Валюта Тогда
					Коэффициенты  = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(
					ВыборкаПоДокументу.Валюта,
					ВыборкаПоДокументу.ВалютаВзаиморасчетов,
					ВыборкаПоДокументу.Дата,
					ВыборкаПоДокументу.Организация);
					СуммаОплаты = ?(Коэффициенты.КоэффициентПересчетаВВалютуВзаиморасчетов <> 0, СуммаОплаты / Коэффициенты.КоэффициентПересчетаВВалютуВзаиморасчетов, 0);
				КонецЕсли;

				Пока СуммаОплаты > 0 И ВыборкаПоЭтапам.Следующий() Цикл

					ЭтапОплаты = ЭтапыГрафикаОплаты.Добавить();
					ЗаполнитьЗначенияСвойств(ЭтапОплаты, ВыборкаПоЭтапам);
					Если СуммаОплаты < ВыборкаПоЭтапам.СуммаПлатежа Тогда
						ЭтапОплаты.СуммаПлатежа = СуммаОплаты;
					КонецЕсли;

					СуммаОплаты = СуммаОплаты - ВыборкаПоЭтапам.СуммаПлатежа;

				КонецЦикла;

				ЭтапыГрафикаОплаты.Сортировать("ДатаПлатежа");

			КонецЕсли;

			ДанныеЗаполнения.Вставить("СуммаДокумента",  ЭтапыГрафикаОплаты.Итог("СуммаПлатежа"));
			ДанныеЗаполнения.Вставить("ЧастичнаяОплата", ВыборкаПоДокументу.СуммаДокумента <> ЭтапыГрафикаОплаты.Итог("СуммаПлатежа"));

		КонецЕсли;

	КонецЕсли;

КонецПроцедуры
