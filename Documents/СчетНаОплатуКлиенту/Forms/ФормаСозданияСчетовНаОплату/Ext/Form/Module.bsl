
&НаСервере
Процедура гф_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	// ++ Галфинд СадомцевСА 12.02.2024
	// e1cib/data/Задача.ЗадачаИсполнителя?ref=8eabb083fed1320811eec96fbdb98554
	ХЗ = Неопределено;
	Если Параметры.Свойство("гф_ТоварыВКоробах", ХЗ) Тогда
		гф_ТоварыВКоробах = ХЗ.Получить();
		гф_АдресВременногоХранилища = ПоместитьВоВременноеХранилище(гф_ТоварыВКоробах);
		ДобавляемыеРеквизиты = Новый Массив;
		КвалификаторыСтроки	= Новый КвалификаторыСтроки(256);
		ОписаниеТиповСтрока = Новый ОписаниеТипов("Строка", , КвалификаторыСтроки); 
		РеквизитФормы = Новый РеквизитФормы("гф_АдресВременногоХранилища", ОписаниеТиповСтрока);
		ДобавляемыеРеквизиты.Добавить(РеквизитФормы);
		ИзменитьРеквизиты(ДобавляемыеРеквизиты);
		ЭтотОбъект.гф_АдресВременногоХранилища = гф_АдресВременногоХранилища;
	КонецЕсли;
	// -- Галфинд СадомцевСА 12.02.2024
КонецПроцедуры

&НаСервере
&ИзменениеИКонтроль("СоздатьСчетНаОплатуСервер")
Функция гф_СоздатьСчетНаОплатуСервер()

	СчетНаОплатуКлиенту = Неопределено;

	НачатьТранзакцию();

	Попытка

		ДокументОбъект = Документы.СчетНаОплатуКлиенту.СоздатьДокумент();
		ЗаполнитьЗначенияСвойств(ДокументОбъект, ШапкаОснование);
		ДокументОбъект.Заполнить(Неопределено);
		ДокументОбъект.Дата = ТекущаяДатаСеанса();
		ДокументОбъект.УстановитьНовыйНомер();

		СуммаДокумента   = 0;
		КоличествоЭтапов = 0;
		НомерЭтапа       = 1;
		ПроцентПлатежа   = 0;
		СуммаДокументаБезЗалога = 0;

		Для Каждого ТекущийЭтап Из ТаблицаЭтапов Цикл

			Если Не ТекущийЭтап.Выбран Тогда
				Продолжить;
			КонецЕсли;

			СуммаДокумента = СуммаДокумента + ТекущийЭтап.СуммаПлатежа - ТекущийЭтап.СуммаОплаты;
			Если Не ТекущийЭтап.ЭтоЗалогЗаТару Тогда
				СуммаДокументаБезЗалога = СуммаДокументаБезЗалога + ТекущийЭтап.СуммаПлатежа - ТекущийЭтап.СуммаОплаты;
			КонецЕсли;
			КоличествоЭтапов = КоличествоЭтапов + 1;

		КонецЦикла;

		ДокументОбъект.СуммаДокумента = СуммаДокумента;

		Если ШапкаОснование.СуммаДокумента <> СуммаДокумента Тогда
			ДокументОбъект.ЧастичнаяОплата = Истина;
		КонецЕсли;

		Для Каждого ТекущийЭтап Из ТаблицаЭтапов Цикл

			Если Не ТекущийЭтап.Выбран Тогда
				Продолжить;
			КонецЕсли;

			НовыйЭтап = ДокументОбъект.ЭтапыГрафикаОплаты.Добавить();
			НовыйЭтап.ДатаПлатежа    = ТекущийЭтап.ДатаПлатежа;
			НовыйЭтап.СуммаПлатежа   = ТекущийЭтап.СуммаКОплате;
			НовыйЭтап.ЭтоЗалогЗаТару = ТекущийЭтап.ЭтоЗалогЗаТару;

			Если СуммаДокументаБезЗалога > 0 Тогда
				Если НомерЭтапа = КоличествоЭтапов Тогда
					НовыйЭтап.ПроцентПлатежа = 100 - ПроцентПлатежа;
				ИначеЕсли Не ТекущийЭтап.ЭтоЗалогЗаТару Тогда
					НовыйЭтап.ПроцентПлатежа = НовыйЭтап.СуммаПлатежа * 100 / СуммаДокументаБезЗалога;
					ПроцентПлатежа = ПроцентПлатежа + НовыйЭтап.ПроцентПлатежа;
				КонецЕсли;
			КонецЕсли;

			НомерЭтапа = НомерЭтапа + 1;

		КонецЦикла;

		СтруктураПараметров = ДенежныеСредстваСервер.ПараметрыЗаполненияБанковскогоСчетаОрганизацииПоУмолчанию();
		СтруктураПараметров.Организация    		= ДокументОбъект.Организация;
		СтруктураПараметров.БанковскийСчет		= ДокументОбъект.БанковскийСчет;
		БанковскийСчет = ЗначениеНастроекПовтИсп.ПолучитьБанковскийСчетОрганизацииПоУмолчанию(СтруктураПараметров);

		СтруктураПараметров = ДенежныеСредстваСервер.ПараметрыЗаполненияКассыОрганизацииПоУмолчанию();
		СтруктураПараметров.Организация = ДокументОбъект.Организация;
		СтруктураПараметров.ФормаОплаты	= ДокументОбъект.ФормаОплаты;
		СтруктураПараметров.Касса		= ДокументОбъект.Касса;
		Касса          = ЗначениеНастроекПовтИсп.ПолучитьКассуОрганизацииПоУмолчанию(СтруктураПараметров);

		ДокументОбъект.НазначениеПлатежа = Документы.СчетНаОплатуКлиенту.СформироватьНазначениеПлатежа(
		ШапкаОснование.НомерДокумента,
		ШапкаОснование.ДокументОснование);
    	#Вставка
		// ++ Галфинд СадомцевСА 12.02.2024
		// e1cib/data/Задача.ЗадачаИсполнителя?ref=8eabb083fed1320811eec96fbdb98554
		ЗаполнитьТЧТоварыВКоробах(ДокументОбъект);
		// -- Галфинд СадомцевСА 12.02.2024
		#КонецВставки
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
		СчетНаОплатуКлиенту = ДокументОбъект.Ссылка;

		ЗафиксироватьТранзакцию();

	Исключение
		ОтменитьТранзакцию();

		ТекстОшибки = НСтр("ru = 'Не удалось записать %Документ%. %ОписаниеОшибки%';
		|en = 'Failed to save %Документ%. %ОписаниеОшибки%'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%",       ДокументОбъект);
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ОписаниеОшибки%", КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));

		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);

	КонецПопытки;

	Возврат СчетНаОплатуКлиенту;

КонецФункции

&НаСервере
Процедура ЗаполнитьТЧТоварыВКоробах(ДокументОбъект)
	// ++ Галфинд СадомцевСА 12.02.2024
	// e1cib/data/Задача.ЗадачаИсполнителя?ref=8eabb083fed1320811eec96fbdb98554
	СтруктураАдрес = Новый Структура("гф_АдресВременногоХранилища");
	ЗаполнитьЗначенияСвойств(СтруктураАдрес, ЭтотОбъект);
	Если ЗначениеЗаполнено(СтруктураАдрес.гф_АдресВременногоХранилища) Тогда
		тчТоварыВКоробах = ПолучитьИзВременногоХранилища(СтруктураАдрес.гф_АдресВременногоХранилища);
		ДокументОбъект.гф_ТоварыВКоробах.Загрузить(тчТоварыВКоробах);
	КонецЕсли;
	// -- Галфинд СадомцевСА 12.02.2024
КонецПроцедуры
