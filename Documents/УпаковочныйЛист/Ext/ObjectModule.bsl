#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

&Перед("ПередЗаписью")
Процедура гф_ПередЗаписью1(Отказ, РежимЗаписи, РежимПроведения)
	
	// #wortmann {
	// Галфинд Sakovich 2022/09/18
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	Если Не Отказ И  РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		гф_ПодготовитьАгрегациюКМ(Отказ);
	КонецЕсли;
	// } #wortmann
	
КонецПроцедуры

// #wortmann {
// Галфинд Sakovich 2022/09/09
&Перед("ОбработкаПроверкиЗаполнения")
Процедура гф_ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Если Не ЗначениеЗаполнено(гф_Поставка) Тогда
		Текст = "Не заполнено поле ""Поставка/Отгрузка""";
		ОбщегоНазначения.СообщитьПользователю(Текст, Ссылка, , "Объект.гф_Поставка", Отказ);
	КонецЕсли;
	Если Не ЗначениеЗаполнено(гф_Комплектация) Тогда
		Текст = "Не заполнено поле ""Комплектация (ростовка)""";
		ОбщегоНазначения.СообщитьПользователю(Текст, Ссылка, , "Объект.гф_Комплектация", Отказ);
	КонецЕсли;
КонецПроцедуры // } #wortmann

&Перед("ОбработкаПроведения")
Процедура гф_ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если Не Отказ И ЭтоУчетПоОбувнойПродукции() Тогда
		Если Не ЗначениеЗаполнено(гф_Агрегация) Тогда
		    ТекстСообщения = 
			"Не заполнено значение ""Агрегация КМ"".
			|Документ " + Ссылка + " по виду учета ""Обувная продукция "" не может быть проведен.";
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , , , Отказ);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ЭтоУчетПоОбувнойПродукции()

	спрНоменклатура = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(гф_Комплектация, "Владелец");
	ОсобенностиУчета = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
	?(ЗначениеЗаполнено(спрНоменклатура), спрНоменклатура, Справочники.Номенклатура.ПустаяСсылка()),
	"ОсобенностьУчета");
	Если ОсобенностиУчета = Перечисления.ОсобенностиУчетаНоменклатуры.ОбувнаяПродукция Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;

КонецФункции 

Процедура гф_ПодготовитьАгрегациюКМ(Отказ)
	
	тчТовары = Товары.Выгрузить();
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	т.Номенклатура КАК Номенклатура,
	|	т.Характеристика КАК Характеристика,
	|	т.КоличествоУпаковок КАК КоличествоУпаковок
	|ПОМЕСТИТЬ УпаковочныйЛистТовары
	|ИЗ
	|	&тчТовары КАК т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ШтрихкодыУпаковокТоваровВложенныеШтрихкоды.Штрихкод КАК Штрихкод
	|ПОМЕСТИТЬ ЗанятыеКМ
	|ИЗ
	|	Справочник.ШтрихкодыУпаковокТоваров.ВложенныеШтрихкоды КАК ШтрихкодыУпаковокТоваровВложенныеШтрихкоды
	|ГДЕ
	|	ШтрихкодыУпаковокТоваровВложенныеШтрихкоды.Штрихкод.ТипУпаковки = &ТипУпаковкиМаркированныйТовар
	|	И НЕ ШтрихкодыУпаковокТоваровВложенныеШтрихкоды.Ссылка.ЗначениеШтрихкода = &КодУпаковочногоЛиста
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Штрихкод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ШтрихкодыУпаковокТоваров.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ШтрихкодыУпаковокТоваров КАК ШтрихкодыУпаковокТоваров
	|ГДЕ
	|	ШтрихкодыУпаковокТоваров.ТипУпаковки = &ТипУпаковкиМультитоварная
	|	И ШтрихкодыУпаковокТоваров.ЗначениеШтрихкода = &КодУпаковочногоЛиста
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УпаковочныйЛистТовары.Номенклатура КАК Номенклатура,
	|	УпаковочныйЛистТовары.Характеристика КАК Характеристика,
	|	УпаковочныйЛистТовары.КоличествоУпаковок КАК Количество,
	|	ШтрихкодыУпаковокТоваров.Ссылка КАК КМ,
	|	ШтрихкодыУпаковокТоваров.ТипУпаковки КАК ТипУпаковки,
	|	ШтрихкодыУпаковокТоваров.ТипШтрихкода КАК ТипШтрихкода,
	|	ШтрихкодыУпаковокТоваров.ЗначениеШтрихкода КАК ЗначениеШтрихкода
	|ИЗ
	|	УпаковочныйЛистТовары КАК УпаковочныйЛистТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ШтрихкодыУпаковокТоваров КАК ШтрихкодыУпаковокТоваров
	|		ПО УпаковочныйЛистТовары.Номенклатура = ШтрихкодыУпаковокТоваров.Номенклатура
	|			И УпаковочныйЛистТовары.Характеристика = ШтрихкодыУпаковокТоваров.Характеристика
	|ГДЕ
	|	ШтрихкодыУпаковокТоваров.ТипУпаковки = &ТипУпаковкиМаркированныйТовар
	|	И НЕ ШтрихкодыУпаковокТоваров.Ссылка В
	|				(ВЫБРАТЬ
	|					т.Штрихкод КАК Штрихкод
	|				ИЗ
	|					ЗанятыеКМ КАК т)
	|ИТОГИ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Количество");
	
	Запрос.УстановитьПараметр("ТипУпаковкиМультитоварная", Перечисления.ТипыУпаковок.МультитоварнаяУпаковка);
	Запрос.УстановитьПараметр("ТипУпаковкиМаркированныйТовар", Перечисления.ТипыУпаковок.МаркированныйТовар);
	Запрос.УстановитьПараметр("КодУпаковочногоЛиста", Код);
	Запрос.УстановитьПараметр("тчТовары", тчТовары);
	ПакетРезультатов = Запрос.ВыполнитьПакет();
	
	Если ПакетРезультатов[2].Пустой() Тогда
		ОбъектШтрихкод = Справочники.ШтрихкодыУпаковокТоваров.СоздатьЭлемент();	
		ОбъектШтрихкод.ТипУпаковки = Перечисления.ТипыУпаковок.МультитоварнаяУпаковка;
		ОбъектШтрихкод.ТипШтрихкода = Перечисления.ТипыШтрихкодов.GS1_128;
		ОбъектШтрихкод.ЗначениеШтрихкода = Код;
		ОбъектШтрихкод.гф_АртикулАгрегата = гф_Комплектация;
	Иначе
		Выборка = ПакетРезультатов[2].Выбрать();
		Выборка.Следующий();
		ОбъектШтрихкод = Выборка.Ссылка.ПолучитьОбъект();
		Если Не ЗначениеЗаполнено(ОбъектШтрихкод.гф_АртикулАгрегата) Тогда
			ОбъектШтрихкод.гф_АртикулАгрегата = гф_Комплектация;
		КонецЕсли;
	КонецЕсли;
	
	ВыборкаИтогиПоНоменклатуре = ПакетРезультатов[3].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ЗаполнитьВложенныеШтрихкоды(ОбъектШтрихкод, ВыборкаИтогиПоНоменклатуре);
	
	Если ЭтоУчетПоОбувнойПродукции() Тогда
		КоличествоВложенныхШтрихкодов = ОбъектШтрихкод.ВложенныеШтрихкоды.Количество();
		ОбъектШтрихкод.Количество = КоличествоВложенныхШтрихкодов;
		Если КоличествоВложенныхШтрихкодов = Товары.Итог("КоличествоУпаковок") Тогда
			ОбъектШтрихкод.Записать();
			гф_Агрегация = ОбъектШтрихкод.Ссылка;
		Иначе
			ТекстСообщения = 
			"При создании агрегата Штрихкодов упаковок товаров не "
			+ "найдено достаточного количества кодов маркировки 
			|Документ ""Упаковочный лист"" по виду учета ""Обувная продукция "" не может быть проведен.";
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , , , Отказ);
		КонецЕсли;
	Иначе
		ОбъектШтрихкод.Записать();
		гф_Агрегация = ОбъектШтрихкод.Ссылка;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьВложенныеШтрихкоды(ОбъектШтрихкод, ВыборкаНоменклатура)
	
	ОбъектШтрихкод.ВложенныеШтрихкоды.Очистить();
	Пока ВыборкаНоменклатура.Следующий() Цикл
		ВыборкаХарактеристика = ВыборкаНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаХарактеристика.Следующий() Цикл
			ВыборкаКоличество = ВыборкаХарактеристика.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаКоличество.Следующий() Цикл
				КоличествоКМ = ВыборкаКоличество.Количество;
				ВыборкаДетали = ВыборкаКоличество.Выбрать();
				Сч = 1;
				Пока Сч <= КоличествоКМ И ВыборкаДетали.Следующий() Цикл
					нс = ОбъектШтрихкод.ВложенныеШтрихкоды.Добавить();
					нс.Штрихкод = ВыборкаДетали.КМ;
					Сч = Сч + 1;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли