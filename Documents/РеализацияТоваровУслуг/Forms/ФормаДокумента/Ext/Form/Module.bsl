#Область ОбработчикиСобытийФормы

&НаСервере
Процедура гф_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	
	гф_СоздатьНовыеЭлементы();
	
	гф_УстановитьДоступностьТоваровВКоробах();
	// ++ Галфинд СадомцевСА 26.01.2024
	// Ограничил доступ для пользователя к кнопкам:"Провести" и "Провести и закрыть"
	//при наличии роли "Реализация товаров и услуг ограничение проведения (гф)"
	// e1cib/data/Задача.ЗадачаИсполнителя?ref=8eabb083fed1320811eebc2c35d94705
	Если РольДоступна("гф_РеализацияТоваровИУслугОграничениеПроведения") Тогда
		Элементы.ФормаПровести.Доступность = Ложь;
		Элементы.ФормаПровестиИЗакрыть.Доступность = Ложь;
	КонецЕсли;
	// -- Галфинд СадомцевСА 26.01.2024
	
КонецПроцедуры 

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура гф_СкладПриИзмененииПосле(Элемент)
	
	гф_УстановитьДоступностьТоваровВКоробах();
	
КонецПроцедуры

&НаКлиенте
&После("ПартнерПриИзменении")
Процедура гф_ПартнерПриИзменении(Элемент)
	
	гф_ПартнерПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура гф_АдресДоставкиПриИзменении(Элемент)
	
	гф_УстановитьАдресДоставкиНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура гф_АдресДоставкиНачалоВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	гф_АдресДоставкиНачалоВыбораНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура гф_АдресДоставкиАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	//а = гф_АдресДоставкиАвтоПодборНаСервере();
	//Если Не а Тогда;
	//	СтандартнаяОбработка = Ложь;
	//КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_гф_ТоварыВКоробах

&НаКлиенте
Процедура гф_ТоварыВКоробахУпаковочныйЛистПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы["гф_ТаблицаТоварыВКоробах"].ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда   
		
		Если ТекущиеДанные.УпаковочныйЛист <> ЭтотОбъект["гф_ТекущийУпаковочныйЛист"] Тогда
			
			ОтборСтрок = Новый Структура("УпаковочныйЛист", ТекущиеДанные.УпаковочныйЛист);    
			
			СтрокиДублей = Объект.гф_ТоварыВКоробах.НайтиСтроки(ОтборСтрок);
			
			Если СтрокиДублей.Количество() > 1 Тогда     
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Упаковочный лист " 
																	+ ТекущиеДанные.УпаковочныйЛист
																	+ " уже есть в документе");
				
				ТекущиеДанные.УпаковочныйЛист = ЭтотОбъект["гф_ТекущийУпаковочныйЛист"];
				
			Иначе	
				
				ИдентификаторСтроки = Элементы["гф_ТаблицаТоварыВКоробах"].ТекущаяСтрока;
		
				гф_УстановитьДанныеУпаковочногоЛиста(ИдентификаторСтроки);
				
				гф_УдалитьТоварыПоУпаковочномуЛисту(ЭтотОбъект["гф_ТекущийУпаковочныйЛист"]);
				
				гф_ДобавитьТоварыПоУпаковочномуЛисту(ТекущиеДанные.УпаковочныйЛист);
		
				ЭтотОбъект["гф_ТекущийУпаковочныйЛист"] = ТекущиеДанные.УпаковочныйЛист;
			
			КонецЕсли;	
		
		КонецЕсли;	
		
	КонецЕсли;	
	
КонецПроцедуры	

&НаКлиенте
Процедура гф_ТоварыВКоробахПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы["гф_ТаблицаТоварыВКоробах"].ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		
		гф_ТекущийУпаковочныйЛист = ТекущиеДанные.УпаковочныйЛист;
		
	Иначе	   
		
		гф_ТекущийУпаковочныйЛист = ПредопределенноеЗначение("Документ.УпаковочныйЛист.ПустаяСсылка");
		
	КонецЕсли;	
	
КонецПроцедуры	

&НаКлиенте
Процедура гф_ТоварыВКоробахПередУдалением(Элемент, Отказ)
	
	ТекущиеДанные = Элементы["гф_ТаблицаТоварыВКоробах"].ТекущиеДанные;
	
	гф_УдалитьТоварыПоУпаковочномуЛисту(ТекущиеДанные.УпаковочныйЛист);
	
КонецПроцедуры	

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура гф_КомандаПодбор(Команда)     
	
	ОписаниеОповещения = Новый ОписаниеОповещения("гф_КомандаПодборЗавершение", ЭтотОбъект);
	
	ПараметрыОткрытия = Новый Структура;
	
	ПараметрыОткрытия.Вставить("Реализация",	Объект.Ссылка);
	ПараметрыОткрытия.Вставить("Склад",			Объект.Склад);   
	
	ОткрытьФорму("Документ.РеализацияТоваровУслуг.Форма.гф_ФормаПодбораУпаковочныхЛистов", 
		ПараметрыОткрытия, ЭтотОбъект, , , , ОписаниеОповещения, 
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры	

&НаКлиенте
Процедура гф_КомандаПодборЗавершение(Результат, Параметры) Экспорт   
	
	Если Результат = Неопределено Тогда
		
		Возврат;
		
	КонецЕсли;	
	
	Для Каждого УпаковочныйЛист Из Результат Цикл
		
		ОтборСтрок = Новый Структура("УпаковочныйЛист", УпаковочныйЛист);
		
		Строки = Объект.гф_ТоварыВКоробах.НайтиСтроки(ОтборСтрок);
		
		Если Не Строки.Количество() Тогда
			
			НоваяСтрока = Объект.гф_ТоварыВКоробах.Добавить();
			
			НоваяСтрока.УпаковочныйЛист = УпаковочныйЛист;   
			
			ИдентификаторСтроки = НоваяСтрока.ПолучитьИдентификатор();
			
			гф_УстановитьДанныеУпаковочногоЛиста(ИдентификаторСтроки);
				
			гф_ДобавитьТоварыПоУпаковочномуЛисту(УпаковочныйЛист);
			
		КонецЕсли;	
		
	КонецЦикла;	
	
КонецПроцедуры	

&НаКлиенте
Процедура гф_КомандаЗаполнитьПоТоварамВКоробах()
	
	Для Каждого СтрокаКоробов Из Объект.гф_ТоварыВКоробах Цикл
		
		Если ЗначениеЗаполнено(СтрокаКоробов.УпаковочныйЛист) Тогда
			
			гф_УдалитьТоварыПоУпаковочномуЛисту(СтрокаКоробов.УпаковочныйЛист);
				
		КонецЕсли;	
		
	КонецЦикла;	
	
	Для Каждого СтрокаКоробов Из Объект.гф_ТоварыВКоробах Цикл
		
		Если ЗначениеЗаполнено(СтрокаКоробов.УпаковочныйЛист) Тогда
			
			гф_ДобавитьТоварыПоУпаковочномуЛисту(СтрокаКоробов.УпаковочныйЛист);
			
		КонецЕсли;	
		
	КонецЦикла;	
	
КонецПроцедуры	

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура гф_СоздатьНовыеЭлементы()                                  
	
	ДобавляемыеРеквизиты = Новый Массив;
	
	ТипУпаковочныйЛист = Новый ОписаниеТипов("ДокументСсылка.УпаковочныйЛист");
	
	НовыйРеквизит = Новый РеквизитФормы("гф_ТекущийУпаковочныйЛист", ТипУпаковочныйЛист);
	
	ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);

	ИзменитьРеквизиты(ДобавляемыеРеквизиты);	
	
	НовоеПолеСтраница = Элементы.Вставить("гф_СтраницаТоварыВКоробах", Тип("ГруппаФормы"),
	Элементы.ГруппаСтраницы, Элементы.ГруппаТовары); 
	НовоеПолеСтраница.Вид					= ВидГруппыФормы.Страница;	
	НовоеПолеСтраница.Видимость				= Истина;
	НовоеПолеСтраница.Заголовок				= "Товары в коробах";
	НовоеПолеСтраница.ПутьКДаннымЗаголовка	= "Объект.гф_ТоварыВКоробах.КоличествоСтрок";
	
	НовоеПолеТаблица = Элементы.Добавить("гф_ТаблицаТоварыВКоробах", Тип("ТаблицаФормы"), НовоеПолеСтраница);									
	НовоеПолеТаблица.ПутьКДанным = "Объект.гф_ТоварыВКоробах";
	НовоеПолеТаблица.Подвал = Истина;  
	НовоеПолеТаблица.УстановитьДействие("ПриАктивизацииСтроки", "гф_ТоварыВКоробахПриАктивизацииСтроки");
	НовоеПолеТаблица.УстановитьДействие("ПередУдалением", "гф_ТоварыВКоробахПередУдалением");
	
	НовоеПоле = Элементы.Добавить("гф_ТоварыВКоробахУпаковочныйЛист", Тип("ПолеФормы"), НовоеПолеТаблица);
	НовоеПоле.Заголовок			= "Упаковочный лист";
	НовоеПоле.Вид				= ВидПоляФормы.ПолеВвода;
	НовоеПоле.ПутьКДанным		= "Объект.гф_ТоварыВКоробах.УпаковочныйЛист";
	НовоеПоле.УстановитьДействие("ПриИзменении", "гф_ТоварыВКоробахУпаковочныйЛистПриИзменении");
	
	
	НовоеПоле = Элементы.Добавить("гф_ТоварыВКоробахАртикул", Тип("ПолеФормы"), НовоеПолеТаблица);
	НовоеПоле.Заголовок			= "Артикул";
	НовоеПоле.Вид				= ВидПоляФормы.ПолеВвода;
	НовоеПоле.ПутьКДанным		= "Объект.гф_ТоварыВКоробах.Артикул";
	НовоеПоле.ТолькоПросмотр	= Истина;	
	
	НовоеПоле = Элементы.Добавить("гф_ТоварыВКоробахКоличествоПар", Тип("ПолеФормы"), НовоеПолеТаблица);
	НовоеПоле.Заголовок				= "Количество пар";
	НовоеПоле.Вид					= ВидПоляФормы.ПолеВвода;
	НовоеПоле.ПутьКДанным			= "Объект.гф_ТоварыВКоробах.КоличествоПар";
	НовоеПоле.ПутьКДаннымПодвала	= "Объект.гф_ТоварыВКоробах.ИтогКоличествоПар";
	НовоеПоле.ТолькоПросмотр		= Истина;	
	
	НовоеПоле = Элементы.Добавить("гф_ТоварыВКоробахКоэффициент", Тип("ПолеФормы"), НовоеПолеТаблица);
	НовоеПоле.Заголовок				= "К.";
	НовоеПоле.Вид					= ВидПоляФормы.ПолеВвода;
	НовоеПоле.ПутьКДанным			= "Объект.гф_ТоварыВКоробах.Коэффициент";
	НовоеПоле.ПутьКДаннымПодвала	= "Объект.гф_ТоварыВКоробах.ИтогКоэффициент";
	НовоеПоле.ТолькоПросмотр		= Истина;	
	
	НовоеПоле = Элементы.Добавить("гф_ТоварыВКоробахЦенаКороба", Тип("ПолеФормы"), НовоеПолеТаблица);
	НовоеПоле.Заголовок				= "Цена короба";
	НовоеПоле.Вид					= ВидПоляФормы.ПолеВвода;
	НовоеПоле.ПутьКДанным			= "Объект.гф_ТоварыВКоробах.ЦенаКороба";
	НовоеПоле.ПутьКДаннымПодвала	= "Объект.гф_ТоварыВКоробах.ИтогЦенаКороба";
	НовоеПоле.ТолькоПросмотр		= Истина;	
	
	НовоеПоле = Элементы.Добавить("гф_ТоварыВКоробахНДС", Тип("ПолеФормы"), НовоеПолеТаблица);
	НовоеПоле.Заголовок				= "НДС";
	НовоеПоле.Вид					= ВидПоляФормы.ПолеВвода;
	НовоеПоле.ПутьКДанным			= "Объект.гф_ТоварыВКоробах.НДС";
	НовоеПоле.ПутьКДаннымПодвала	= "Объект.гф_ТоварыВКоробах.ИтогНДС";
	НовоеПоле.ТолькоПросмотр		= Истина;	   
	
	НоваяКоманда = Команды.Добавить("гф_КомандаПодбор");
	НоваяКоманда.Действие = "гф_КомандаПодбор";
	
	НоваяКнопка = Элементы.Добавить("гф_ТоварыВКоробахПодбор", Тип("КнопкаФормы"), НовоеПолеТаблица.КоманднаяПанель);
	НоваяКнопка.Заголовок	= "Подбор";
	НоваяКнопка.Вид			= ВидКнопкиФормы.ОбычнаяКнопка;
	НоваяКнопка.ИмяКоманды	= "гф_КомандаПодбор";
	
	НоваяКоманда = Команды.Добавить("гф_КомандаЗаполнитьПоТоварамВКоробах");
	НоваяКоманда.Действие = "гф_КомандаЗаполнитьПоТоварамВКоробах";
	
	НоваяКнопка = Элементы.Добавить("гф_КомандаЗаполнитьПоТоварамВКоробах", Тип("КнопкаФормы"), Элементы.ТоварыГруппаЗаполнить);
	НоваяКнопка.Заголовок	= "Заполнить товары  на основании товаров в коробах";
	НоваяКнопка.Вид			= ВидКнопкиФормы.ОбычнаяКнопка;
	НоваяКнопка.ИмяКоманды	= "гф_КомандаЗаполнитьПоТоварамВКоробах";
	
	Элементы.ГруппаСклад.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	НовоеПоле = Элементы.Добавить("гф_РасходныйОрдер", Тип("ПолеФормы"), Элементы.ГруппаСклад);
	НовоеПоле.Заголовок			= "Расходный ордер";
	НовоеПоле.Вид				= ВидПоляФормы.ПолеВвода;
	НовоеПоле.ПутьКДанным		= "Объект.гф_РасходныйОрдер";
	
	НовоеПоле = Элементы.Добавить("гф_АдресДоставки", Тип("ПолеФормы"), Элементы.ГруппаСклад);
	НовоеПоле.Заголовок			= "Адрес Доставки";
	НовоеПоле.Вид				= ВидПоляФормы.ПолеВвода;
	НовоеПоле.ПутьКДанным		= "Объект.гф_АдресДоставки";
	НовоеПоле.КнопкаВыбора 				= Истина;
	НовоеПоле.КнопкаВыпадающегоСписка 	= Истина;
	// Установка связи для отбора при открытии окна выбора адресов по контрагенту
	НоваяСвязь = Новый СвязьПараметраВыбора("Отбор.Владелец", "Объект.Контрагент");
	НовыйМассив = Новый Массив();
	НовыйМассив.Добавить(НоваяСвязь);
	НовоеПоле.СвязиПараметровВыбора	= Новый ФиксированныйМассив(НовыйМассив);
	НовоеПоле.УстановитьДействие("ПриИзменении", "гф_АдресДоставкиПриИзменении");
	НовоеПоле.УстановитьДействие("НачалоВыбора", "гф_АдресДоставкиНачалоВыбора");
	НовоеПоле.УстановитьДействие("АвтоПодбор", "гф_АдресДоставкиАвтоПодбор");
	
	// #wortmann { 
	// #Монитор логиста Галфинд Окунев 2022/11/18
	НовоеПоле = Элементы.Добавить("гф_ПочтовоеОтправление", Тип("ПолеФормы"), Элементы.ГруппаШапкаПраво);
	НовоеПоле.Заголовок			= "Почтовое отправление";
	НовоеПоле.Вид				= ВидПоляФормы.ПолеВвода;
	НовоеПоле.ПутьКДанным		= "Объект.гф_ПочтовоеОтправление"; 
	// } #wortmann       
	
	// #wortmann {
	// e1cib/data/Задача.ЗадачаИсполнителя?ref=812ebcee7bda45d711edbcd637270ac2
	// Галфинд Sakovich 2023/03/07
	НовоеПоле = Элементы.Вставить("гф_Дополнение", Тип("ПолеФормы"),
		Элементы.ГруппаДополнительно, Элементы.ГруппаДополнительныеРеквизиты);
	НовоеПоле.Заголовок			= "Дополнение";
	НовоеПоле.Вид				= ВидПоляФормы.ПолеВвода;
	НовоеПоле.МногострочныйРежим = Истина;
	НовоеПоле.АвтоМаксимальнаяВысота = Ложь;
	НовоеПоле.МаксимальнаяВысота = 6;
	НовоеПоле.ПутьКДанным		= "Объект.гф_Дополнение";
	// } #wortmann
	
	// #wortmann { 
	// Галфинд СадомцевСА 2023/07/04 Добавил на форму поле "Маркировка товаров ИСМП" (только просмотр)
	//e1cib/data/Задача.ЗадачаИсполнителя?ref=8eabb083fed1320811ee166b434dc8ce
	НовоеПоле = Элементы.Добавить("гф_МаркировкаТоваровИСМП", Тип("ПолеФормы"), Элементы.ГруппаДополнительныеРеквизиты);
	НовоеПоле.Заголовок			= "Маркировка товаров ИСМП";
	НовоеПоле.Вид				= ВидПоляФормы.ПолеВвода;
	НовоеПоле.ПутьКДанным		= "Объект.гф_МаркировкаТоваровИСМП";
	НовоеПоле.ТолькоПросмотр	= Истина;
	// } #wortmann
	
КонецПроцедуры 

&НаСервере
Процедура гф_УстановитьДанныеУпаковочногоЛиста(ИдентификаторСтроки)
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	|	УпаковочныйЛистШапка.Ссылка КАК УпаковочныйЛист,
	|	УпаковочныйЛистШапка.гф_Заказ КАК гф_Заказ,
	|	УпаковочныйЛистШапка.гф_Комплектация КАК гф_Комплектация,
	|	СУММА(УпаковочныйЛистТовары.Количество) КАК Количество,
	|	МАКСИМУМ(УпаковочныйЛистТовары.Номенклатура.Артикул) КАК Артикул
	|ПОМЕСТИТЬ ВТ_УпаковочныйЛист
	|ИЗ
	|	Документ.УпаковочныйЛист КАК УпаковочныйЛистШапка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УпаковочныйЛист.Товары КАК УпаковочныйЛистТовары
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСправочник
	|			ПО УпаковочныйЛистТовары.Номенклатура = НоменклатураСправочник.Ссылка
	|		ПО УпаковочныйЛистШапка.Ссылка = УпаковочныйЛистТовары.Ссылка
	|ГДЕ
	|	УпаковочныйЛистШапка.Ссылка = &Ссылка
	|	И НЕ УпаковочныйЛистТовары.ЭтоУпаковочныйЛист
	|
	|СГРУППИРОВАТЬ ПО
	|	УпаковочныйЛистШапка.Ссылка,
	|	УпаковочныйЛистШапка.гф_Заказ,
	|	УпаковочныйЛистШапка.гф_Комплектация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказКлиентаТовары.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА СУММА(ЗаказКлиентаТовары.Количество) = 0
	|			ТОГДА СУММА(ЗаказКлиентаТовары.СуммаСНДС) - СУММА(ЗаказКлиентаТовары.СуммаНДС)
	|		ИНАЧЕ (СУММА(ЗаказКлиентаТовары.СуммаСНДС) - СУММА(ЗаказКлиентаТовары.СуммаНДС)) / СУММА(ЗаказКлиентаТовары.Количество)
	|	КОНЕЦ КАК Цена,
	|	ВЫБОР
	|		КОГДА СУММА(ЗаказКлиентаТовары.Количество) = 0
	|			ТОГДА СУММА(ЗаказКлиентаТовары.СуммаНДС)
	|		ИНАЧЕ СУММА(ЗаказКлиентаТовары.СуммаНДС) / СУММА(ЗаказКлиентаТовары.Количество)
	|	КОНЕЦ КАК НДС
	|ПОМЕСТИТЬ ВТ_Цены
	|ИЗ
	|	ВТ_УпаковочныйЛист КАК ВТ_УпаковочныйЛист
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
	|		ПО ВТ_УпаковочныйЛист.гф_Заказ = ЗаказКлиентаТовары.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказКлиентаТовары.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(УпаковочныйЛистТовары.Количество * ЕСТЬNULL(ВТ_Цены.Цена, 0)) КАК Цена,
	|	СУММА(УпаковочныйЛистТовары.Количество * ЕСТЬNULL(ВТ_Цены.НДС, 0)) КАК НДС
	|ПОМЕСТИТЬ ВТ_ЦенаНДС
	|ИЗ
	|	Документ.УпаковочныйЛист.Товары КАК УпаковочныйЛистТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Цены КАК ВТ_Цены
	|		ПО УпаковочныйЛистТовары.Номенклатура = ВТ_Цены.Номенклатура
	|ГДЕ
	|	УпаковочныйЛистТовары.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВТ_УпаковочныйЛист.УпаковочныйЛист КАК УпаковочныйЛист,
	|	ВТ_УпаковочныйЛист.Артикул КАК Артикул,
	|	ВТ_УпаковочныйЛист.Количество КАК КоличествоПар,
	|	ВЫБОР
	|		КОГДА СУММА(ЕСТЬNULL(ВариантыКомплектацииНоменклатурыТовары.Количество, 0)) = 0
	|			ТОГДА 1
	|		ИНАЧЕ ВТ_УпаковочныйЛист.Количество / СУММА(ЕСТЬNULL(ВариантыКомплектацииНоменклатурыТовары.Количество, 0))
	|	КОНЕЦ КАК Коэффициент,
	|	ВТ_ЦенаНДС.Цена КАК ЦенаКороба,
	|	ВТ_ЦенаНДС.НДС КАК НДС
	|ИЗ
	|	ВТ_УпаковочныйЛист КАК ВТ_УпаковочныйЛист
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыКомплектацииНоменклатуры.Товары КАК ВариантыКомплектацииНоменклатурыТовары
	|		ПО ВТ_УпаковочныйЛист.гф_Комплектация = ВариантыКомплектацииНоменклатурыТовары.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ЦенаНДС КАК ВТ_ЦенаНДС
	|		ПО (ИСТИНА)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_УпаковочныйЛист.УпаковочныйЛист,
	|	ВТ_УпаковочныйЛист.Артикул,
	|	ВТ_УпаковочныйЛист.Количество,
	|	ВТ_ЦенаНДС.Цена,
	|	ВТ_ЦенаНДС.НДС";
	
	
	ТекущаяСтрока = Объект.гф_ТоварыВКоробах.НайтиПоИдентификатору(ИдентификаторСтроки);
	
	Запрос.Параметры.Вставить("Ссылка", ТекущаяСтрока.УпаковочныйЛист);
	
	Результат = Запрос.Выполнить(); 
	
	Если Результат.Пустой() Тогда
		
		ТекущаяСтрока.Артикул		= "";
		ТекущаяСтрока.КоличествоПар	= 0;
		ТекущаяСтрока.Коэффициент	= 0;
		ТекущаяСтрока.ЦенаКороба	= "";
		ТекущаяСтрока.НДС			= "";
		
	Иначе	
		
		Выборка = Результат.Выбрать();
		
		Выборка.Следующий();
		
		ЗаполнитьЗначенияСвойств(ТекущаяСтрока, Выборка);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура гф_УстановитьДоступностьТоваровВКоробах()
	
	СвойствоТоварыВКоробах = УправлениеСвойствами.ЗначениеСвойства(Объект.Склад, "гф_СкладыТоварыВКоробах"); 
	
	ДоступностьТоварыВКоробах = ?(СвойствоТоварыВКоробах = Неопределено, Ложь, СвойствоТоварыВКоробах);
	
	Элементы["гф_СтраницаТоварыВКоробах"].Доступность = ДоступностьТоварыВКоробах;
	
	Если Не ДоступностьТоварыВКоробах И Объект.гф_ТоварыВКоробах.Количество() Тогда
		
		Объект.гф_ТоварыВКоробах.Очистить();
		
	КонецЕсли;	
		
КонецПроцедуры	

&НаСервере
Процедура гф_УдалитьТоварыПоУпаковочномуЛисту(УпаковочныйЛист)
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	НоменклатураСправочник.Артикул КАК Артикул
	|ИЗ
	|	Документ.УпаковочныйЛист.Товары КАК УпаковочныйЛистТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСправочник
	|		ПО УпаковочныйЛистТовары.Номенклатура = НоменклатураСправочник.Ссылка
	|ГДЕ
	|	УпаковочныйЛистТовары.Ссылка = &Ссылка
	
	|УПОРЯДОЧИТЬ ПО
	|	УпаковочныйЛистТовары.НомерСтроки";
	
	Запрос.Параметры.Вставить("Ссылка", УпаковочныйЛист);
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	
	Выборка.Следующий();
	
	Артикул = Выборка.Артикул;
	
	Если Не ЗначениеЗаполнено(Артикул) Тогда
		
		Возврат;
		
	КонецЕсли;	
	
	МассивУдаляемыхСтрок = Новый Массив;
	
	Для Каждого СтрокаТовары Из Объект.Товары Цикл
		
		Если СокрЛП(СтрокаТовары.Номенклатура.Артикул) = СокрЛП(Артикул) Тогда
			
			МассивУдаляемыхСтрок.Добавить(СтрокаТовары);
			
		КонецЕсли;	
		
	КонецЦикла;	
	
	Для Каждого УдаляемаяСтрока Из МассивУдаляемыхСтрок Цикл 
		
		ИндексСтроки = Объект.Товары.Индекс(УдаляемаяСтрока);
		
		Объект.Товары.Удалить(ИндексСтроки);
		
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Процедура гф_ДобавитьТоварыПоУпаковочномуЛисту(УпаковочныйЛист)      
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	|	УпаковочныйЛист.гф_Заказ КАК гф_Заказ,
	|	ЗаказКлиентаТовары.Номенклатура КАК Номенклатура,
	|	ЗаказКлиентаТовары.Характеристика КАК Характеристика,
	|	ЗаказКлиентаТовары.Серия КАК Серия,
	|	ЗаказКлиентаТовары.Цена КАК Цена,
	|	ЗаказКлиентаТовары.ВидЦены КАК ВидЦены,
	|	ЗаказКлиентаТовары.Сумма КАК Сумма,
	|	ЗаказКлиентаТовары.СтавкаНДС КАК СтавкаНДС,
	|	ЗаказКлиентаТовары.СуммаНДС КАК СуммаНДС,
	|	ЗаказКлиентаТовары.СуммаСНДС КАК СуммаСНДС,
	|	ЗаказКлиентаТовары.ПроцентРучнойСкидки КАК ПроцентРучнойСкидки,
	|	ЗаказКлиентаТовары.СуммаРучнойСкидки КАК СуммаРучнойСкидки,
	|	ЗаказКлиентаТовары.ПроцентАвтоматическойСкидки КАК ПроцентАвтоматическойСкидки,
	|	ЗаказКлиентаТовары.СуммаАвтоматическойСкидки КАК СуммаАвтоматическойСкидки,
	|	ЗаказКлиентаТовары.Склад КАК Склад,
	|	ЗаказКлиентаТовары.СрокПоставки КАК СрокПоставки,
	|	ЗаказКлиентаТовары.Содержание КАК Содержание,
	|	ЗаказКлиентаТовары.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	ЗаказКлиентаТовары.ВариантОбеспечения КАК ВариантОбеспечения,
	|	ЗаказКлиентаТовары.НоменклатураНабора КАК НоменклатураНабора,
	|	ЗаказКлиентаТовары.Обособленно КАК Обособленно,
	|	ЗаказКлиентаТовары.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	ЗаказКлиентаТовары.ВариантОбеспеченияДоИзмененияОбновлениемИБ КАК ВариантОбеспеченияДоИзмененияОбновлениемИБ,
	|	ЗаказКлиентаТовары.Подразделение КАК Подразделение,
	|	ЗаказКлиентаТовары.НоменклатураПартнера КАК НоменклатураПартнера,
	|	ЗаказКлиентаТовары.Количество КАК Количество
	|ПОМЕСТИТЬ ВТ_Заказ
	|ИЗ
	|	Документ.УпаковочныйЛист КАК УпаковочныйЛист
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
	|		ПО УпаковочныйЛист.гф_Заказ = ЗаказКлиентаТовары.Ссылка
	|ГДЕ
	|	УпаковочныйЛист.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УпаковочныйЛистТовары.НомерСтроки КАК НомерСтроки,
	|	УпаковочныйЛистТовары.Номенклатура КАК Номенклатура,
	|	УпаковочныйЛистТовары.Характеристика КАК Характеристика,
	|	УпаковочныйЛистТовары.Серия КАК Серия,
	|	УпаковочныйЛистТовары.Упаковка КАК Упаковка,
	|	УпаковочныйЛистТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	УпаковочныйЛистТовары.Количество КАК Количество,
	|	УпаковочныйЛистТовары.УпаковочныйЛист КАК УпаковочныйЛист,
	|	УпаковочныйЛистТовары.НоменклатураПартнера КАК НоменклатураПартнера,
	|	УпаковочныйЛистТовары.Комментарий КАК Комментарий,
	|	УпаковочныйЛистТовары.ЭтоУпаковочныйЛист КАК ЭтоУпаковочныйЛист,
	|	УпаковочныйЛистТовары.ЭтоСлужебнаяСтрокаПустогоУпаковочногоЛиста КАК ЭтоСлужебнаяСтрокаПустогоУпаковочногоЛиста,
	|	УпаковочныйЛистТовары.УпаковочныйЛистРодитель КАК УпаковочныйЛистРодитель,
	|	УпаковочныйЛистТовары.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	УпаковочныйЛистТовары.Назначение КАК Назначение,
	|	ВТ_Заказ.Цена КАК Цена,
	|	ВТ_Заказ.ВидЦены КАК ВидЦены,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВТ_Заказ.Количество, 0) = 0
	|			ТОГДА ВТ_Заказ.Сумма
	|		ИНАЧЕ ВТ_Заказ.Сумма / ВТ_Заказ.Количество * УпаковочныйЛистТовары.Количество
	|	КОНЕЦ КАК Сумма,
	|	ВТ_Заказ.СтавкаНДС КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВТ_Заказ.Количество, 0) = 0
	|			ТОГДА ВТ_Заказ.СуммаНДС
	|		ИНАЧЕ ВТ_Заказ.СуммаНДС / ВТ_Заказ.Количество * УпаковочныйЛистТовары.Количество
	|	КОНЕЦ КАК СуммаНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВТ_Заказ.Количество, 0) = 0
	|			ТОГДА ВТ_Заказ.СуммаСНДС
	|		ИНАЧЕ ВТ_Заказ.СуммаСНДС / ВТ_Заказ.Количество * УпаковочныйЛистТовары.Количество
	|	КОНЕЦ КАК СуммаСНДС,
	|	ВТ_Заказ.ПроцентРучнойСкидки КАК ПроцентРучнойСкидки,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВТ_Заказ.Количество, 0) = 0
	|			ТОГДА ВТ_Заказ.СуммаРучнойСкидки
	|		ИНАЧЕ ВТ_Заказ.СуммаРучнойСкидки / ВТ_Заказ.Количество * УпаковочныйЛистТовары.Количество
	|	КОНЕЦ КАК СуммаРучнойСкидки,
	|	ВТ_Заказ.ПроцентАвтоматическойСкидки КАК ПроцентАвтоматическойСкидки,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВТ_Заказ.Количество, 0) = 0
	|			ТОГДА ВТ_Заказ.СуммаАвтоматическойСкидки
	|		ИНАЧЕ ВТ_Заказ.СуммаАвтоматическойСкидки / ВТ_Заказ.Количество * УпаковочныйЛистТовары.Количество
	|	КОНЕЦ КАК СуммаАвтоматическойСкидки,
	|	ВТ_Заказ.Склад КАК Склад,
	|	ВТ_Заказ.СрокПоставки КАК СрокПоставки,
	|	ВТ_Заказ.Содержание КАК Содержание,
	|	ВТ_Заказ.ВариантОбеспечения КАК ВариантОбеспечения,
	|	ВТ_Заказ.НоменклатураНабора КАК НоменклатураНабора,
	|	ВТ_Заказ.Обособленно КАК Обособленно,
	|	ВТ_Заказ.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	ВТ_Заказ.ВариантОбеспеченияДоИзмененияОбновлениемИБ КАК ВариантОбеспеченияДоИзмененияОбновлениемИБ,
	|	ВТ_Заказ.Подразделение КАК Подразделение,
	|	ЕСТЬNULL(ВТ_Заказ.Количество, 0) КАК КоличествоВЗаказе
	|ИЗ
	|	Документ.УпаковочныйЛист.Товары КАК УпаковочныйЛистТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Заказ КАК ВТ_Заказ
	|		ПО УпаковочныйЛистТовары.Номенклатура = ВТ_Заказ.Номенклатура
	|			И УпаковочныйЛистТовары.Характеристика = ВТ_Заказ.Характеристика
	|			И УпаковочныйЛистТовары.Серия = ВТ_Заказ.Серия
	|ГДЕ
	|	УпаковочныйЛистТовары.Ссылка = &Ссылка
	|	И Не УпаковочныйЛистТовары.ЭтоУпаковочныйЛист";
	
	Запрос.Параметры.Вставить("Ссылка", УпаковочныйЛист);
	
	Выборка = Запрос.Выполнить().Выбрать(); 
	
	КэшированныеЗначения = Неопределено;
	
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = Объект.Товары.Добавить();
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
		Если КэшированныеЗначения = Неопределено Тогда
			КэшированныеЗначения = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения();
		КонецЕсли;

		СтруктураДействий = Новый Структура;
		
		СтруктураДействий.Вставить("ПроверитьХарактеристикуПоВладельцу", НоваяСтрока.Характеристика);
		СтруктураДействий.Вставить("ПроверитьЗаполнитьУпаковкуПоВладельцу", НоваяСтрока.Упаковка);
		СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
		СтруктураДействий.Вставить("ПроверитьЗаполнитьСклад", ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруЗаполненияСкладаВСтрокеТЧ(Объект, СкладГруппа));
		СтруктураДействий.Вставить("ЗаполнитьКодТНВЭД", Объект.НалогообложениеНДС);
		СтруктураДействий.Вставить("ЗаполнитьПризнакБезВозвратнойТары", Объект.ВернутьМногооборотнуюТару);
		СтруктураДействий.Вставить("ОчиститьСуммуВзаиморасчетов");
		СтруктураДействий.Вставить("ЗаполнитьПризнакТипНоменклатуры", Новый Структура("Номенклатура", "ТипНоменклатуры"));
		СтруктураДействий.Вставить("ЗаполнитьДубликатыЗависимыхРеквизитов", ЗависимыеРеквизиты());
		СтруктураДействий.Вставить("ЗаполнитьПризнакАртикул", Новый Структура("Номенклатура", "Артикул"));
		СтруктураДействий.Вставить("ПроверитьСериюРассчитатьСтатус", Новый Структура("Склад, ПараметрыУказанияСерий", НоваяСтрока.Склад, ПараметрыУказанияСерий));
		СтруктураДействий.Вставить("ПересчитатьСуммуСверхЗаказа", Новый Структура("РеализацияПоступлениеПоЗаказу, ТребуетсяЗалогЗаТару",
		Объект.РеализацияПоЗаказам, Объект.ТребуетсяЗалогЗаТару));
		СтруктураДействий.Вставить("ПриИзмененииТипаНоменклатуры", Новый Структура("ЕстьРаботы, ЕстьОтменено", Истина, Ложь));
		
		НаправленияДеятельностиКлиентСервер.СтруктураДействийВставитьПриДобавленииСтроки(ЭтаФорма, СтруктураДействий);
		
		ОбработкаТабличнойЧастиКлиентСерверЛокализация.ДополнитьСтруктуруДействийПриИзмененииЭлемента(ЭтотОбъект, "Номенклатура", СтруктураДействий);
		УчетПрослеживаемыхТоваровКлиентСерверЛокализация.ДополнитьОписаниеНастроекЗаполненияСлужебныхРеквизитовТабличнойЧасти(СтруктураДействий);
		
		СтруктураДействий.Вставить("НоменклатураПриИзмененииПереопределяемый", Новый Структура("ИмяФормы, ИмяТабличнойЧасти",
		ЭтаФорма.ИмяФормы, "Товары"));
		
		СтруктураДействий.Вставить("ЗаполнитьПодразделениеВСтрокеТЧ", Новый Структура("Подразделение", Объект.Подразделение));
		
		ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(НоваяСтрока, СтруктураДействий, КэшированныеЗначения)
		
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Процедура гф_УстановитьАдресДоставкиНаСервере()
	
	Объект.АдресДоставки = Объект.гф_АдресДоставки.Адрес;
		
КонецПроцедуры

&НаСервере
Процедура гф_ПартнерПриИзмененииНаСервере()
	
	гф_РаботаСАдресами.ПартнерПриИзмененииНаФормеДокумента(Объект);
	
КонецПроцедуры

&НаСервере
Процедура гф_АдресДоставкиНачалоВыбораНаСервере()
	
	гф_РаботаСАдресами.АдресДоставкиНачалоВыбораНаФормеДокумента(Объект)
	
КонецПроцедуры

&НаСервере
Функция гф_АдресДоставкиАвтоПодборНаСервере()
	
	Если ЗначениеЗаполнено(Объект.Партнер) И ЗначениеЗаполнено(Объект.Контрагент) Тогда
		
		Если Не Объект.Партнер = Объект.Контрагент.Партнер Тогда
			Возврат Ложь;	
		Иначе
			Возврат Истина;
		КонецЕсли;
		
	КонецЕсли;
	
КонецФункции

#КонецОбласти

