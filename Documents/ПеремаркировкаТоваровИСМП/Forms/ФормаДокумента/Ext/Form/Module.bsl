
&НаСервере
Процедура гф_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	
	гф_СоздатьНовыеРеквизиты(); // Галфинд_ДомнышеваКР_05_04_2024

КонецПроцедуры

// #wortmann { 
// Процедура добавления новых реквизитов на форму  
// e1cib/data/Задача.ЗадачаИсполнителя?ref=8eabb083fed1320811eef289e54fee5a
// Галфинд_Домнышева 2024/04/05
&НаСервере
Процедура гф_СоздатьНовыеРеквизиты()
	
	ТипКнопкаФормы = Тип("КнопкаФормы");  
	
	Команда = Команды.Добавить("гф_ЗаполнитьПоЭмиссии");
	Команда.Заголовок = "Заполнить по документу Заказ на эмиссию";
	Команда.Действие = "гф_ЗаполнитьПоЭмиссии";
	Команда.ИзменяетСохраняемыеДанные = Истина;

	НоваяКнопка = Элементы.Вставить("гф_ЗаполнитьПоЭмиссии", 
	ТипКнопкаФормы, 
	Элементы.ТоварыПодменюЗаполнить);
	НоваяКнопка.Вид = ВидКнопкиФормы.КнопкаКоманднойПанели;
	НоваяКнопка.ИмяКоманды = "гф_ЗаполнитьПоЭмиссии";
	
КонецПроцедуры// } #wortmann

// #wortmann { 
// Команда гф_ЗаполнитьПоЭмиссии  
// e1cib/data/Задача.ЗадачаИсполнителя?ref=8eabb083fed1320811eef289e54fee5a
// Галфинд_Домнышева 2024/04/05
&НаКлиенте
Процедура гф_ЗаполнитьПоЭмиссии(Команда)
	
	ДокументЭмиссии = НайтиДокументЗаказНаЭмиссию();
	
	Если ДокументЭмиссии = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(" Документ Заказ на эмиссию не найден.");
	Иначе
		ЗаполнитьТоварыПоЭмиссииНаСервере(ДокументЭмиссии);
	КонецЕсли;
	
КонецПроцедуры// } #wortmann 

// #wortmann { 
// Команда гф_ЗаполнитьПоЭмиссии  
// e1cib/data/Задача.ЗадачаИсполнителя?ref=8eabb083fed1320811eef289e54fee5a
// Галфинд_Домнышева 2024/04/05
//	
// Возвращаемое значение:
//	ДокументСсылка.ЗаказНаЭмиссиюКодовМаркировкиСУЗ ИЛИ Неопределено 
&НаСервере
Функция НайтиДокументЗаказНаЭмиссию() 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаказНаЭмиссиюКодовМаркировкиСУЗ.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ЗаказНаЭмиссиюКодовМаркировкиСУЗ КАК ЗаказНаЭмиссиюКодовМаркировкиСУЗ
		|ГДЕ
		|	(ВЫРАЗИТЬ(ЗаказНаЭмиссиюКодовМаркировкиСУЗ.ДокументОснование КАК Документ.ПеремаркировкаТоваровИСМП)) = &ДокументОснование";
	
	Запрос.УстановитьПараметр("ДокументОснование", Объект.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.Ссылка;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции// } #wortmann  

// #wortmann { 
// Подбор в Пуле кодов Маркировки КМ согласно ЗаказуНаЭмисси, подбор Штрихкодв и заполнение ТЧ Товары новыми КМ  
// e1cib/data/Задача.ЗадачаИсполнителя?ref=8eabb083fed1320811eef289e54fee5a
// Галфинд_Домнышева 2024/04/05
&НаСервере
Процедура ЗаполнитьТоварыПоЭмиссииНаСервере(ЗаказНаЭмиссию) 

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПулКодовМаркировкиСУЗ.Номенклатура КАК Номенклатура,
		|	ПулКодовМаркировкиСУЗ.Характеристика КАК Характеристика,
		|	ПулКодовМаркировкиСУЗ.КодМаркировки КАК КодМаркировки
		|ПОМЕСТИТЬ МаркировкиИзПула
		|ИЗ
		|	РегистрСведений.ПулКодовМаркировкиСУЗ КАК ПулКодовМаркировкиСУЗ
		|ГДЕ
		|	ПулКодовМаркировкиСУЗ.ЗаказНаЭмиссию = &ЗаказНаЭмиссию
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ШтрихкодыУпаковокТоваров.Ссылка КАК Ссылка,
		|	ШтрихкодыУпаковокТоваров.Номенклатура КАК Номенклатура,
		|	ШтрихкодыУпаковокТоваров.Характеристика КАК Характеристика,
		|	ШтрихкодыУпаковокТоваров.ЗначениеШтрихкода КАК ЗначениеШтрихкода
		|ПОМЕСТИТЬ Штрихкоды
		|ИЗ
		|	Справочник.ШтрихкодыУпаковокТоваров КАК ШтрихкодыУпаковокТоваров
		|ГДЕ
		|	ШтрихкодыУпаковокТоваров.ЗначениеШтрихкода В
		|			(ВЫБРАТЬ
		|				Т.КодМаркировки
		|			ИЗ
		|				МаркировкиИзПула КАК Т)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МаркировкиИзПула.Номенклатура КАК Номенклатура,
		|	МаркировкиИзПула.Характеристика КАК Характеристика,
		|	МаркировкиИзПула.КодМаркировки КАК КодМаркировки,
		|	Штрихкоды.Ссылка КАК Штрихкод,
		|	Ложь Как Занято
		|ИЗ
		|	МаркировкиИзПула КАК МаркировкиИзПула
		|		ЛЕВОЕ СОЕДИНЕНИЕ Штрихкоды КАК Штрихкоды
		|		ПО МаркировкиИзПула.Номенклатура = Штрихкоды.Номенклатура
		|			И МаркировкиИзПула.Характеристика = Штрихкоды.Характеристика
		|			И МаркировкиИзПула.КодМаркировки = Штрихкоды.ЗначениеШтрихкода";
   
   Запрос.УстановитьПараметр("ЗаказНаЭмиссию", ЗаказНаЭмиссию);
   
   РезультатЗапроса = Запрос.Выполнить();
   
   ТаблицаКМ = РезультатЗапроса.Выгрузить();
   
   ТоварыДокумента = Объект.Товары;
   
   Для каждого Строка Из ТоварыДокумента Цикл
	   
	   Отбор = Новый Структура;
	   Отбор.Вставить("Номенклатура", Строка.НоваяНоменклатура);
	   Отбор.Вставить("Характеристика", Строка.НоваяХарактеристика);
       Отбор.Вставить("Занято", Ложь);
	   
	   МассивСтрокКМ = ТаблицаКМ.НайтиСтроки(Отбор);
	   
	   Если МассивСтрокКМ.Количество() > 0 Тогда
		   МассивСтрокКМ[0].Занято = Истина;
		   Строка.НовыйКодМаркировки = МассивСтрокКМ[0].Штрихкод;
	   КонецЕсли;
	   
   КонецЦикла;
   
КонецПроцедуры// } #wortmann
