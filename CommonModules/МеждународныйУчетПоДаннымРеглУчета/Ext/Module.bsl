
&Перед("ДополнитьТаблицыРегистрацииКОтражению")
Процедура гф_ДополнитьТаблицыРегистрацииКОтражению(Объект, ДополнительныеСвойстваОбъекта, ДополнительныеСвойстваРегистра, ТаблицаРегистрации, ВыборочнаяРегистрация, ТаблицаВыборочнойРегистрации)
	// #wortmann { 
	// e1cib/data/Задача.ЗадачаИсполнителя?ref=8eabb083fed1320811ee8f5197032edf 
	// Галфинд_Домнышева 2023/11/30
	ДорабатываемыеСтатусы = Новый Массив;
	ДорабатываемыеСтатусы.Добавить(Перечисления.ТипыРегламентныхОпераций.РасчетНалогаНаПрибыль);
	ДорабатываемыеСтатусы.Добавить(Перечисления.ТипыРегламентныхОпераций.РасчетОтложенногоНалога);

	Если Объект.Метаданные().Реквизиты.Найти("ТипОперации") <> Неопределено 
		И ДорабатываемыеСтатусы.Найти(Объект.ТипОперации) <> Неопределено Тогда 
		Если ДополнительныеСвойстваОбъекта.Свойство("НеРегистрироватьКОтражениюВРеглУчете") Тогда
		ДополнительныеСвойстваОбъекта.НеРегистрироватьКОтражениюВРеглУчете = Ложь;
		КонецЕсли;

	КонецЕсли;
	// } #wortmann
КонецПроцедуры


&ИзменениеИКонтроль("ТранслироватьПроводкиПоСоответствиямСчетов")
Процедура гф_ТранслироватьПроводкиПоСоответствиямСчетов(ПроводкиРеглУчета, ТаблицаПроводок, ПараметрыФормированияПроводок)

	#Область ТекстЗапросаДанныеТрансляцииСчетов
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПроводкиРеглУчета.Регистратор,
	|	ПроводкиРеглУчета.НомерСтроки,
	|	ПроводкиРеглУчета.Период,
	|	ПроводкиРеглУчета.СчетДт,
	|	ПроводкиРеглУчета.СубконтоДт1,
	|	ПроводкиРеглУчета.ВидСубконтоДт1,
	|	ПроводкиРеглУчета.СубконтоДт2,
	|	ПроводкиРеглУчета.ВидСубконтоДт2,
	|	ПроводкиРеглУчета.СубконтоДт3,
	|	ПроводкиРеглУчета.ВидСубконтоДт3,
	|	ПроводкиРеглУчета.СчетКт,
	|	ПроводкиРеглУчета.СубконтоКт1,
	|	ПроводкиРеглУчета.ВидСубконтоКт1,
	|	ПроводкиРеглУчета.СубконтоКт2,
	|	ПроводкиРеглУчета.ВидСубконтоКт2,
	|	ПроводкиРеглУчета.СубконтоКт3,
	|	ПроводкиРеглУчета.ВидСубконтоКт3,
	|	ПроводкиРеглУчета.Организация,
	|	ПроводкиРеглУчета.ВалютаДт,
	|	ПроводкиРеглУчета.ВалютаКт,
	|	ПроводкиРеглУчета.ПодразделениеДт,
	|	ПроводкиРеглУчета.ПодразделениеКт,
	|	ПроводкиРеглУчета.НаправлениеДеятельностиДт,
	|	ПроводкиРеглУчета.НаправлениеДеятельностиКт,
	|	ПроводкиРеглУчета.Сумма,
	|	ПроводкиРеглУчета.Сумма КАК СуммаПредставления,
	|	ПроводкиРеглУчета.ВалютнаяСуммаДт,
	|	ПроводкиРеглУчета.ВалютнаяСуммаКт,
	|	ПроводкиРеглУчета.КоличествоДт,
	|	ПроводкиРеглУчета.КоличествоКт,
	|	ПроводкиРеглУчета.ПланСчетов,
	|	ПроводкиРеглУчета.НастройкаФормированияПроводок
	|ПОМЕСТИТЬ ПроводкиРеглУчета
	|ИЗ
	|	&ПроводкиРеглУчета КАК ПроводкиРеглУчета
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПроводкиРеглУчета.СчетДт,
	|	ПроводкиРеглУчета.СчетКт
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПроводкиРеглУчета.СчетДт,
	|	ПроводкиРеглУчета.СчетКт,
	|	ПроводкиРеглУчета.НастройкаФормированияПроводок
	|ПОМЕСТИТЬ СчетаПроводокРеглУчета
	|ИЗ
	|	ПроводкиРеглУчета КАК ПроводкиРеглУчета
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПроводкиРеглУчета.СчетДт,
	|	ПроводкиРеглУчета.СчетКт
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СоответствияСчетов.Ссылка КАК Ссылка,
	|	СоответствияСчетов.СчетРеглУчета КАК СчетРеглУчета,
	|	СоответствияСчетов.СчетМеждународногоУчета КАК СчетМеждународногоУчета,
	|	СоответствияСчетов.СчетМеждународногоУчета.Валютный КАК СчетМеждународногоУчетаВалютный,
	|	СоответствияСчетов.СчетМеждународногоУчета.Количественный КАК СчетМеждународногоУчетаКоличественный,
	|	СоответствияСчетов.СчетМеждународногоУчета.УчетПоПодразделениям КАК УчетПоПодразделениям,
	|	СоответствияСчетов.СчетМеждународногоУчета.УчетПоНаправлениямДеятельности КАК УчетПоНаправлениям,
	|	СоответствияСчетов.УстановленДополнительныйОтбор КАК УстановленДополнительныйОтбор,
	|	ПравилаОтраженияВУчете.НастройкаФормированияПроводок КАК НастройкаФормированияПроводок,
	|	ВЫБОР
	|		КОГДА ПроводкиРеглУчетаСчетПоДт.СчетДт ЕСТЬ НЕ NULL 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПрименятьДляСчетаДт,
	|	ВЫБОР
	|		КОГДА ПроводкиРеглУчетаСчетПоКт.СчетКт ЕСТЬ НЕ NULL 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПрименятьДляСчетаКт,
	|	СоответствияСчетов.РеквизитДопУпорядочивания
	|ПОМЕСТИТЬ ТаблицаСоответствияСчетов
	|ИЗ
	|	Справочник.СоответствияСчетовМеждународногоУчета КАК СоответствияСчетов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПравилаОтраженияВМеждународномУчете КАК ПравилаОтраженияВУчете
	|		ПО (ПравилаОтраженияВУчете.ШаблонПроводки = СоответствияСчетов.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаПроводокРеглУчета КАК ПроводкиРеглУчетаСчетПоДт
	|		ПО СоответствияСчетов.СчетРеглУчета = ПроводкиРеглУчетаСчетПоДт.СчетДт
	|			И (ПравилаОтраженияВУчете.НастройкаФормированияПроводок = ПроводкиРеглУчетаСчетПоДт.НастройкаФормированияПроводок)
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаПроводокРеглУчета КАК ПроводкиРеглУчетаСчетПоКт
	|		ПО СоответствияСчетов.СчетРеглУчета = ПроводкиРеглУчетаСчетПоКт.СчетКт
	|			И (ПравилаОтраженияВУчете.НастройкаФормированияПроводок = ПроводкиРеглУчетаСчетПоКт.НастройкаФормированияПроводок)
	|ГДЕ
	|	НЕ СоответствияСчетов.ПометкаУдаления
	|	И (НЕ ПроводкиРеглУчетаСчетПоДт.СчетДт ЕСТЬ NULL 
	|			ИЛИ НЕ ПроводкиРеглУчетаСчетПоКт.СчетКт ЕСТЬ NULL )
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПроводкиРеглУчета.Регистратор,
	|	ПроводкиРеглУчета.НомерСтроки,
	|	ПроводкиРеглУчета.Период,
	|	ПроводкиРеглУчета.СчетДт,
	|	ПроводкиРеглУчета.СубконтоДт1,
	|	ПроводкиРеглУчета.ВидСубконтоДт1,
	|	ПроводкиРеглУчета.СубконтоДт2,
	|	ПроводкиРеглУчета.ВидСубконтоДт2,
	|	ПроводкиРеглУчета.СубконтоДт3,
	|	ПроводкиРеглУчета.ВидСубконтоДт3,
	|	ПроводкиРеглУчета.СчетКт,
	|	ПроводкиРеглУчета.СубконтоКт1,
	|	ПроводкиРеглУчета.ВидСубконтоКт1,
	|	ПроводкиРеглУчета.СубконтоКт2,
	|	ПроводкиРеглУчета.ВидСубконтоКт2,
	|	ПроводкиРеглУчета.СубконтоКт3,
	|	ПроводкиРеглУчета.ВидСубконтоКт3,
	|	ПроводкиРеглУчета.Организация,
	|	ПроводкиРеглУчета.ВалютаДт,
	|	ПроводкиРеглУчета.ВалютаКт,
	|	ПроводкиРеглУчета.ПодразделениеДт,
	|	ПроводкиРеглУчета.ПодразделениеКт,
	|	ПроводкиРеглУчета.НаправлениеДеятельностиДт,
	|	ПроводкиРеглУчета.НаправлениеДеятельностиКт,
	|	ПроводкиРеглУчета.Сумма,
	|	ПроводкиРеглУчета.Сумма КАК СуммаПредставления,
	|	ПроводкиРеглУчета.ВалютнаяСуммаДт,
	|	ПроводкиРеглУчета.ВалютнаяСуммаКт,
	|	ПроводкиРеглУчета.КоличествоДт,
	|	ПроводкиРеглУчета.КоличествоКт,
	|	ПроводкиРеглУчета.ПланСчетов,
	|	ПроводкиРеглУчета.НастройкаФормированияПроводок,
	|	СоответствияСчетов.Ссылка КАК Соответствие
	|ИЗ
	|	ПроводкиРеглУчета КАК ПроводкиРеглУчета
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСоответствияСчетов КАК СоответствияСчетов
	|	ПО ПроводкиРеглУчета.СчетДт = СоответствияСчетов.СчетРеглУчета
	|		ИЛИ ПроводкиРеглУчета.СчетКт = СоответствияСчетов.СчетРеглУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НастройкиЗаполненияСубконтоСоответствий.Ссылка КАК СоответствиеСчетов,
	|	НастройкиЗаполненияСубконтоСоответствий.ВидСубконто,
	|	НастройкиЗаполненияСубконтоСоответствий.ЗаполнятьИзИсточника,
	|	НастройкиЗаполненияСубконтоСоответствий.УказанноеЗначение,
	|	НастройкиЗаполненияСубконтоСоответствий.Выражение
	|ИЗ
	|	Справочник.СоответствияСчетовМеждународногоУчета.НастройкиЗаполненияСубконто КАК НастройкиЗаполненияСубконтоСоответствий
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СоответствияСчетовМеждународногоУчета КАК СоответствияСчетов
	|		ПО НастройкиЗаполненияСубконтоСоответствий.Ссылка = СоответствияСчетов.Ссылка
	|			И (НЕ СоответствияСчетов.ПометкаУдаления)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСоответствияСчетов.Ссылка,
	|	ТаблицаСоответствияСчетов.СчетРеглУчета,
	|	ТаблицаСоответствияСчетов.СчетМеждународногоУчета,
	|	ТаблицаСоответствияСчетов.СчетМеждународногоУчетаВалютный,
	|	ТаблицаСоответствияСчетов.СчетМеждународногоУчетаКоличественный,
	|	ТаблицаСоответствияСчетов.УчетПоПодразделениям,
	|	ТаблицаСоответствияСчетов.УчетПоНаправлениям,
	|	ВидыСубконто1.ВидСубконто КАК ВидСубконто1,
	|	ВидыСубконто2.ВидСубконто КАК ВидСубконто2,
	|	ВидыСубконто3.ВидСубконто КАК ВидСубконто3,
	|	ТаблицаСоответствияСчетов.Ссылка.ДополнительныйОтбор КАК ДополнительныйОтбор,
	|	ТаблицаСоответствияСчетов.УстановленДополнительныйОтбор,
	|	ТаблицаСоответствияСчетов.НастройкаФормированияПроводок,
	|	ТаблицаСоответствияСчетов.ПрименятьДляСчетаДт,
	|	ТаблицаСоответствияСчетов.ПрименятьДляСчетаКт,
	|	ТаблицаСоответствияСчетов.РеквизитДопУпорядочивания КАК Порядок,
	|	ВидыСубконто1Регл.ВидСубконто КАК ВидСубконто1Регл,
	|	ВидыСубконто2Регл.ВидСубконто КАК ВидСубконто2Регл,
	|	ВидыСубконто3Регл.ВидСубконто КАК ВидСубконто3Регл,
	|	ВидыСубконто1Регл.ВидСубконто.ТипЗначения КАК ТипЗначВидСубконтоРегл1,
	|	ВидыСубконто2Регл.ВидСубконто.ТипЗначения КАК ТипЗначВидСубконтоРегл2,
	|	ВидыСубконто3Регл.ВидСубконто.ТипЗначения КАК ТипЗначВидСубконтоРегл3,
	|	ВидыСубконто1.ВидСубконто.ТипЗначения КАК ТипЗначВидСубконто1,
	|	ВидыСубконто2.ВидСубконто.ТипЗначения КАК ТипЗначВидСубконто2,
	|	ВидыСубконто3.ВидСубконто.ТипЗначения КАК ТипЗначВидСубконто3,
	|	ВЫБОР
	|		КОГДА ТаблицаСоответствияСчетов.НастройкаФормированияПроводок ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		КОГДА ТаблицаСоответствияСчетов.НастройкаФормированияПроводок.СпособАннулированияПроводок
	|			= ЗНАЧЕНИЕ(Перечисление.СпособыАннулированияПроводокМеждународногоУчета.РеверсивнымиПроводками)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЗаменитьСторноРеверсом
	|ИЗ
	|	ТаблицаСоответствияСчетов КАК ТаблицаСоответствияСчетов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Международный.ВидыСубконто КАК ВидыСубконто1
	|		ПО ТаблицаСоответствияСчетов.СчетМеждународногоУчета = ВидыСубконто1.Ссылка
	|			И (ВидыСубконто1.НомерСтроки = 1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Международный.ВидыСубконто КАК ВидыСубконто2
	|		ПО ТаблицаСоответствияСчетов.СчетМеждународногоУчета = ВидыСубконто2.Ссылка
	|			И (ВидыСубконто2.НомерСтроки = 2)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Международный.ВидыСубконто КАК ВидыСубконто3
	|		ПО ТаблицаСоответствияСчетов.СчетМеждународногоУчета = ВидыСубконто3.Ссылка
	|			И (ВидыСубконто3.НомерСтроки = 3)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконто1Регл
	|		ПО ТаблицаСоответствияСчетов.СчетРеглУчета = ВидыСубконто1Регл.Ссылка
	|			И (ВидыСубконто1Регл.НомерСтроки = 1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконто2Регл
	|		ПО ТаблицаСоответствияСчетов.СчетРеглУчета = ВидыСубконто2Регл.Ссылка
	|			И (ВидыСубконто2Регл.НомерСтроки = 2)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконто3Регл
	|		ПО ТаблицаСоответствияСчетов.СчетРеглУчета = ВидыСубконто3Регл.Ссылка
	|			И (ВидыСубконто3Регл.НомерСтроки = 3)
	|
	|УПОРЯДОЧИТЬ ПО
	#Удаление
	|	ТаблицаСоответствияСчетов.РеквизитДопУпорядочивания";
	#КонецУдаления
	#Вставка
	// ++ Галфинд_ДомнышеваКР_06_12_2023
	// e1cib/data/Задача.ЗадачаИсполнителя?ref=8eabb083fed1320811ee9062a7e31a79
	|	ТаблицаСоответствияСчетов.РеквизитДопУпорядочивания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НастройкиЗаполненияПодразделений.Подразделение КАК Подразделение,
	|	НастройкиЗаполненияПодразделений.УказанноеЗначение КАК УказанноеЗначение,
	|	НастройкиЗаполненияПодразделений.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.СоответствияСчетовМеждународногоУчета.гф_НастройкиЗаполненияПодразделений КАК НастройкиЗаполненияПодразделений";
	// -- Галфинд_ДомнышеваКР_06_12_2023
	#КонецВставки
	#КонецОбласти

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ПроводкиРеглУчета", ПроводкиРеглУчета);

	РезультатЗапроса = Запрос.ВыполнитьПакет();

	СоответствияСчетов = РезультатЗапроса[5].Выгрузить();
	#Вставка
	// ++ Галфинд_ДомнышеваКР_06_12_2023
	// e1cib/data/Задача.ЗадачаИсполнителя?ref=8eabb083fed1320811ee9062a7e31a79
	НастройкаПодразделений = РезультатЗапроса[6].Выгрузить();
	// -- Галфинд_ДомнышеваКР_06_12_2023
	#КонецВставки

	ПрименяемыеСоответствия = ПолучитьПрименяемыеСоответствия(СоответствияСчетов, РезультатЗапроса[3]);

	НастройкиЗаполненияСубконто = РезультатЗапроса[4].Выгрузить(); // ТаблицаЗначений - 
	НастройкиЗаполненияСубконто.Индексы.Добавить("СоответствиеСчетов");

	ПоложенияСчета = Новый Массив();
	ПоложенияСчета.Добавить("Дт");
	ПоложенияСчета.Добавить("Кт");

	СхемыКомпоновкиДанных = Новый Структура;
	Для каждого ПоложениеСчета Из ПоложенияСчета Цикл
		КлючСхемаКомпоновкиДанных = "СхемаКомпоновкиДанных" + ПоложениеСчета;
		СхемыКомпоновкиДанных.Вставить(КлючСхемаКомпоновкиДанных, СхемаКомпоновкиДанныхРеглУчета(ПроводкиРеглУчета, ПоложениеСчета));
	КонецЦикла;

	ПрименениеСоответствий = Новый ТаблицаЗначений;
	ПрименениеСоответствий.Колонки.Добавить("Регистратор");
	ПрименениеСоответствий.Колонки.Добавить("НомерСтроки");
	ПрименениеСоответствий.Колонки.Добавить("СчетДт");
	ПрименениеСоответствий.Колонки.Добавить("СчетДтВалютный", Новый ОписаниеТипов("Булево"));
	ПрименениеСоответствий.Колонки.Добавить("СчетДтКоличественный", Новый ОписаниеТипов("Булево"));
	ПрименениеСоответствий.Колонки.Добавить("УчетПоПодразделениямДт", Новый ОписаниеТипов("Булево"));
	ПрименениеСоответствий.Колонки.Добавить("УчетПоНаправлениямДт", Новый ОписаниеТипов("Булево"));
	ПрименениеСоответствий.Колонки.Добавить("ВидСубконтоДт1");
	ПрименениеСоответствий.Колонки.Добавить("ВидСубконтоДт2");
	ПрименениеСоответствий.Колонки.Добавить("ВидСубконтоДт3");
	ПрименениеСоответствий.Колонки.Добавить("СубконтоДт1");
	ПрименениеСоответствий.Колонки.Добавить("СубконтоДт2");
	ПрименениеСоответствий.Колонки.Добавить("СубконтоДт3");
	ПрименениеСоответствий.Колонки.Добавить("СчетКт");
	ПрименениеСоответствий.Колонки.Добавить("СчетКтВалютный", Новый ОписаниеТипов("Булево"));
	ПрименениеСоответствий.Колонки.Добавить("СчетКтКоличественный", Новый ОписаниеТипов("Булево"));
	ПрименениеСоответствий.Колонки.Добавить("УчетПоПодразделениямКт", Новый ОписаниеТипов("Булево"));
	ПрименениеСоответствий.Колонки.Добавить("УчетПоНаправлениямКт", Новый ОписаниеТипов("Булево"));
	ПрименениеСоответствий.Колонки.Добавить("ВидСубконтоКт1");
	ПрименениеСоответствий.Колонки.Добавить("ВидСубконтоКт2");
	ПрименениеСоответствий.Колонки.Добавить("ВидСубконтоКт3");
	ПрименениеСоответствий.Колонки.Добавить("СубконтоКт1");
	ПрименениеСоответствий.Колонки.Добавить("СубконтоКт2");
	ПрименениеСоответствий.Колонки.Добавить("СубконтоКт3");
	ПрименениеСоответствий.Колонки.Добавить("СоответствиеСчетаДт");
	ПрименениеСоответствий.Колонки.Добавить("СоответствиеСчетаКт");
	ПрименениеСоответствий.Индексы.Добавить("Регистратор, НомерСтроки");

	Для каждого СоответствиеСчетов Из СоответствияСчетов Цикл

		Если ПрименяемыеСоответствия[СоответствиеСчетов.Ссылка] = Неопределено Тогда
			Продолжить;
		КонецЕсли;

		Если ПроводкиРеглУчета.Количество() = 0 Тогда
			Прервать;
		КонецЕсли;

		Для каждого ПоложениеСчета Из ПоложенияСчета Цикл

			Если Не СоответствиеСчетов["ПрименятьДляСчета" + ПоложениеСчета] Тогда
				Продолжить;
			КонецЕсли;

			СхемаКомпоновкиДанных = СхемыКомпоновкиДанных["СхемаКомпоновкиДанных" + ПоложениеСчета];

			Настройки = Новый НастройкиКомпоновкиДанных;
			НоваяГруппировка = Настройки.Структура.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
			НоваяГруппировка.Выбор.Элементы.Добавить(Тип("АвтоВыбранноеПолеКомпоновкиДанных"));
			НоваяГруппировка.Порядок.Элементы.Добавить(Тип("АвтоЭлементПорядкаКомпоновкиДанных"));

			ФинансоваяОтчетностьСервер.НовоеПолеВыбора(Настройки, "Регистратор");
			ФинансоваяОтчетностьСервер.НовоеПолеВыбора(Настройки, "НомерСтроки");

			УстановитьЗаполнениеСубконтоПоСоответствиюСчетов(
			СхемаКомпоновкиДанных, 
			Настройки, 
			СоответствиеСчетов, 
			НастройкиЗаполненияСубконто);

			УстановитьОтборПроводокПоСоответствиюСчетов(
			СхемаКомпоновкиДанных, 
			Настройки, 
			СоответствиеСчетов);

			ВнешниеНаборы = Новый Структура;
			ВнешниеНаборы.Вставить("ТаблицаДанных", ПроводкиРеглУчета);

			Попытка
				РезультатПримененияСоответствия = 
				ФинансоваяОтчетностьСервер.ВыгрузитьРезультатСКД(СхемаКомпоновкиДанных, Настройки, ВнешниеНаборы);
			Исключение
				ТекстСообщения = Символы.ПС + НСтр("ru = 'Не удалось получить данные для отражения счета по соответствию ""%СоответствиеСчета%""
				|по причине';
				|en = 'Cannot get data for account recording by correspondence ""%СоответствиеСчета%""
				|due to'") + ":" + Символы.ПС + Символы.Таб + "%Причина%";
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СоответствиеСчета%", СоответствиеСчетов.Ссылка);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				ТекстСообщения = ТекстСообщения + Символы.ПС
				+ НСтр("ru = 'Возможно в соответствии счета установлены некорректные настройки дополнительного отбора или заполнения субконто.';
				|en = 'Incorrect settings of filling additional filter or extra dimension may have been selected in the account mapping.'");
				ВызватьИсключение ТекстСообщения;
			КонецПопытки;

			Для каждого Строка Из РезультатПримененияСоответствия Цикл

				Отбор = Новый Структура;
				Отбор.Вставить("Регистратор", Строка.Регистратор);
				Отбор.Вставить("НомерСтроки", Строка.НомерСтроки);
				РезультатПоиска = ПрименениеСоответствий.НайтиСтроки(Отбор);
				Если РезультатПоиска.Количество() Тогда
					СтрокаПримененияСоответствий = РезультатПоиска[0];
					Если ЗначениеЗаполнено(СтрокаПримененияСоответствий["СоответствиеСчета" + ПоложениеСчета]) Тогда
						Продолжить;
					КонецЕсли;
				Иначе
					СтрокаПримененияСоответствий = ПрименениеСоответствий.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаПримененияСоответствий, Отбор);
				КонецЕсли;

				ПроводкаРеглУчета = ПроводкиРеглУчета.НайтиСтроки(Отбор)[0];

				СтрокаПримененияСоответствий["Счет" + ПоложениеСчета] = СоответствиеСчетов.СчетМеждународногоУчета;
				СтрокаПримененияСоответствий["Счет" + ПоложениеСчета + "Валютный"] = СоответствиеСчетов.СчетМеждународногоУчетаВалютный;
				СтрокаПримененияСоответствий["Счет" + ПоложениеСчета + "Количественный"] = СоответствиеСчетов.СчетМеждународногоУчетаКоличественный;
				СтрокаПримененияСоответствий["УчетПоПодразделениям" + ПоложениеСчета] = СоответствиеСчетов.УчетПоПодразделениям;
				СтрокаПримененияСоответствий["УчетПоНаправлениям" + ПоложениеСчета] = СоответствиеСчетов.УчетПоНаправлениям;
				СтрокаПримененияСоответствий["ВидСубконто" + ПоложениеСчета + "1"] = СоответствиеСчетов.ВидСубконто1;
				СтрокаПримененияСоответствий["ВидСубконто" + ПоложениеСчета + "2"] = СоответствиеСчетов.ВидСубконто2;
				СтрокаПримененияСоответствий["ВидСубконто" + ПоложениеСчета + "3"] = СоответствиеСчетов.ВидСубконто3;
				СтрокаПримененияСоответствий["Субконто" + ПоложениеСчета + "1"] = Строка.СубконтоМеждународный1;
				СтрокаПримененияСоответствий["Субконто" + ПоложениеСчета + "2"] = Строка.СубконтоМеждународный2;
				СтрокаПримененияСоответствий["Субконто" + ПоложениеСчета + "3"] = Строка.СубконтоМеждународный3;
				СтрокаПримененияСоответствий["СоответствиеСчета" + ПоложениеСчета] = СоответствиеСчетов.Ссылка;

				ТранслироватьПроводку = Истина;
				Если Не ЗначениеЗаполнено(СтрокаПримененияСоответствий.СчетДт) 
					И ЗначениеЗаполнено(ПроводкаРеглУчета.СчетДт) Тогда
					ТранслироватьПроводку = Ложь;
				КонецЕсли;

				Если Не ЗначениеЗаполнено(СтрокаПримененияСоответствий.СчетКт) 
					И ЗначениеЗаполнено(ПроводкаРеглУчета.СчетКт) Тогда
					ТранслироватьПроводку = Ложь;
				КонецЕсли;

				Если Не ТранслироватьПроводку Тогда
					Продолжить;
				КонецЕсли;

				Проводка = ОбщегоНазначения.СкопироватьРекурсивно(ПараметрыФормированияПроводок.СтруктураПроводки);
				ИсключаемыеПоля = ИсключаемыеПоля(СтрокаПримененияСоответствий);
				ЗаполнитьЗначенияСвойств(Проводка, ПроводкаРеглУчета, , ИсключаемыеПоля);
				ЗаполнитьЗначенияСвойств(Проводка, СтрокаПримененияСоответствий);

				УчетныеВалютыНаПланеСчетов = МеждународныйУчетСерверПовтИсп.УчетныеВалюты(ПроводкаРеглУчета.ПланСчетов, ПроводкаРеглУчета.Организация);
				ФункциональнаяСумма = ФункциональнаяСумма(ПроводкаРеглУчета, ПараметрыФормированияПроводок, УчетныеВалютыНаПланеСчетов); 
				Проводка.Сумма = ФункциональнаяСумма.Сумма;
				Проводка.ВалютаХраненияСуммыФункциональной = ФункциональнаяСумма.Валюта;
				Проводка.ВалютаФункциональная = УчетныеВалютыНаПланеСчетов.Функциональная;

				СуммаПредставления = СуммаПредставления(ПроводкаРеглУчета, ПараметрыФормированияПроводок, УчетныеВалютыНаПланеСчетов);
				Проводка.СуммаПредставления = СуммаПредставления.Сумма;
				Проводка.ВалютаХраненияСуммыПредставления = СуммаПредставления.Валюта;
				Если СуммаПредставления.Сумма = 0 Тогда
					Проводка.СуммаПредставления = ФункциональнаяСумма.Сумма;
					Проводка.ВалютаХраненияСуммыПредставления = ФункциональнаяСумма.Валюта;
				КонецЕсли;
				Проводка.ВалютаПредставления = УчетныеВалютыНаПланеСчетов.Представления;

				ЗаполнитьВалютнуюСумму(Проводка, 
				СтрокаПримененияСоответствий.СчетДтВалютный, 
				СтрокаПримененияСоответствий.СчетКтВалютный);

				Если СоответствиеСчетов.ЗаменитьСторноРеверсом
					И ((ЗначениеЗаполнено(Проводка.Сумма) И Проводка.Сумма < 0)
					ИЛИ (ЗначениеЗаполнено(Проводка.СуммаПредставления) И Проводка.СуммаПредставления < 0)) Тогда
					РегистрыБухгалтерии.Международный.ИнвертироватьПроводку(
					Проводка,
					ПараметрыФормированияПроводок.ИнвертируемыеПоля,
					ПараметрыФормированияПроводок.ИнвертируемыеРесурсы,
					ПараметрыФормированияПроводок.КоличествоСубконто);
				КонецЕсли;
				#Вставка
				// ++ Галфинд_ДомнышеваКР_06_12_2023
				// e1cib/data/Задача.ЗадачаИсполнителя?ref=8eabb083fed1320811ee9062a7e31a79
				Отбор = Новый Структура();
				Отбор.Вставить("Ссылка", СтрокаПримененияСоответствий["СоответствиеСчетаДт"]);
				МассивПодразделений = НастройкаПодразделений.НайтиСтроки(Отбор);
				Если МассивПодразделений.Количество() > 0 Тогда
					Отбор.Вставить("Подразделение", ПроводкаРеглУчета.ПодразделениеДт);
					СтрокиНайдены = НастройкаПодразделений.НайтиСтроки(Отбор);
					Если СтрокиНайдены.Количество() > 0 Тогда
						Проводка.ПодразделениеДт = СтрокиНайдены[0].УказанноеЗначение;	
					КонецЕсли;
				КонецЕсли;
				Отбор = Новый Структура();
				Отбор.Вставить("Ссылка", СтрокаПримененияСоответствий["СоответствиеСчетаКт"]);
				МассивПодразделений = НастройкаПодразделений.НайтиСтроки(Отбор);
				Если МассивПодразделений.Количество() > 0 Тогда
					Отбор.Вставить("Подразделение", ПроводкаРеглУчета.ПодразделениеКт);
					СтрокиНайдены = НастройкаПодразделений.НайтиСтроки(Отбор);
					Если СтрокиНайдены.Количество() > 0 Тогда	
						Проводка.ПодразделениеКт = СтрокиНайдены[0].УказанноеЗначение;
					КонецЕсли;
				КонецЕсли;
				// -- Галфинд_ДомнышеваКР_06_12_2023
				#КонецВставки
				МеждународныйУчетПроведениеСервер.ДобавитьПроводкуВТаблицуПроводок(ТаблицаПроводок, Проводка);

				ПроводкиРеглУчета.Удалить(ПроводкаРеглУчета);

			КонецЦикла; // по результату применения соответствия

		КонецЦикла;// по Дт и Кт

	КонецЦикла;

	Если ПроводкиРеглУчета.Количество() Тогда

		#Область ТекстЗапросаПроводокБезСоответствия
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ПроводкиРеглУчета.Период КАК Период,
		|	ПроводкиРеглУчета.Регистратор КАК Регистратор,
		|	ПроводкиРеглУчета.НомерСтроки КАК НомерСтроки,
		|	ПроводкиРеглУчета.ПодразделениеДт КАК ПодразделениеДт,
		|	ПроводкиРеглУчета.ПодразделениеКт КАК ПодразделениеКт,
		|	ПроводкиРеглУчета.СчетДт КАК СчетДт,
		|	ПроводкиРеглУчета.СчетКт КАК СчетКт,
		|	ПроводкиРеглУчета.НастройкаФормированияПроводок КАК НастройкаФормированияПроводок,
		|	ПроводкиРеглУчета.ПланСчетов КАК ПланСчетов,
		|	ПроводкиРеглУчета.Организация КАК Организация,
		|	ЕСТЬNULL(ПроводкиРеглУчета.КоличествоДт, 0) КАК КоличествоДт,
		|	ЕСТЬNULL(ПроводкиРеглУчета.КоличествоКт, 0) КАК КоличествоКт,
		|	ЕСТЬNULL(ПроводкиРеглУчета.ВалютнаяСуммаДт, 0) КАК ВалютнаяСуммаДт,
		|	ЕСТЬNULL(ПроводкиРеглУчета.ВалютнаяСуммаКт, 0) КАК ВалютнаяСуммаКт,
		|	ПроводкиРеглУчета.Сумма КАК Сумма,
		|	ПроводкиРеглУчета.СуммаУУ КАК СуммаУУ
		|ПОМЕСТИТЬ ПроводкиРеглУчета
		|ИЗ
		|	&ПроводкиРеглУчета КАК ПроводкиРеглУчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПроводкиРеглУчета.Период КАК Период,
		|	ПроводкиРеглУчета.Регистратор КАК Регистратор,
		|	ПроводкиРеглУчета.НомерСтроки КАК НомерСтроки,
		|	""Дт"" КАК ПоложениеСчета,
		|	ПроводкиРеглУчета.ПодразделениеДт КАК ПодразделениеДт,
		|	ПроводкиРеглУчета.ПодразделениеКт КАК ПодразделениеКт,
		|	ПроводкиРеглУчета.СчетДт КАК Счет,
		|	ПроводкиРеглУчета.НастройкаФормированияПроводок КАК НастройкаФормированияПроводок,
		|	ПроводкиРеглУчета.ПланСчетов КАК ПланСчетов,
		|	ПроводкиРеглУчета.Организация КАК Организация,
		|	ПроводкиРеглУчета.КоличествоДт КАК КоличествоДт,
		|	ПроводкиРеглУчета.КоличествоКт КАК КоличествоКт,
		|	ПроводкиРеглУчета.ВалютнаяСуммаДт КАК ВалютнаяСуммаДт,
		|	ПроводкиРеглУчета.ВалютнаяСуммаКт КАК ВалютнаяСуммаКт,
		|	ПроводкиРеглУчета.Сумма КАК Сумма,
		|	ПроводкиРеглУчета.СуммаУУ КАК СуммаУУ
		|ПОМЕСТИТЬ СчетаПроводокРеглУчета
		|ИЗ
		|	ПроводкиРеглУчета КАК ПроводкиРеглУчета
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПроводкиРеглУчета.Период КАК Период,
		|	ПроводкиРеглУчета.Регистратор,
		|	ПроводкиРеглУчета.НомерСтроки,
		|	""Кт"",
		|	ПроводкиРеглУчета.ПодразделениеДт КАК ПодразделениеДт,
		|	ПроводкиРеглУчета.ПодразделениеКт КАК ПодразделениеКт,
		|	ПроводкиРеглУчета.СчетКт,
		|	ПроводкиРеглУчета.НастройкаФормированияПроводок,
		|	ПроводкиРеглУчета.ПланСчетов КАК ПланСчетов,
		|	ПроводкиРеглУчета.Организация,
		|	ПроводкиРеглУчета.КоличествоДт КАК КоличествоДт,
		|	ПроводкиРеглУчета.КоличествоКт КАК КоличествоКт,
		|	ПроводкиРеглУчета.ВалютнаяСуммаДт КАК ВалютнаяСуммаДт,
		|	ПроводкиРеглУчета.ВалютнаяСуммаКт КАК ВалютнаяСуммаКт,
		|	ПроводкиРеглУчета.Сумма КАК Сумма,
		|	ПроводкиРеглУчета.СуммаУУ КАК СуммаУУ
		|ИЗ
		|	ПроводкиРеглУчета КАК ПроводкиРеглУчета
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НастройкаФормированияПроводок,
		|	Счет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СчетаРеглУчета.Период КАК Период,
		|	СчетаРеглУчета.Регистратор КАК Регистратор,
		|	СчетаРеглУчета.НомерСтроки КАК НомерСтроки,
		|	СчетаРеглУчета.ПодразделениеДт КАК ПодразделениеДт,
		|	СчетаРеглУчета.ПодразделениеКт КАК ПодразделениеКт,
		|	СчетаРеглУчета.Счет КАК Счет,
		|	СчетаРеглУчета.ПоложениеСчета КАК ПоложениеСчета,
		|	СчетаРеглУчета.ПланСчетов КАК ПланСчетов,
		|	СчетаРеглУчета.НастройкаФормированияПроводок КАК НастройкаФормированияПроводок,
		|	СчетаРеглУчета.Организация КАК Организация,
		|	СчетаРеглУчета.КоличествоДт КАК КоличествоДт,
		|	СчетаРеглУчета.КоличествоКт КАК КоличествоКт,
		|	СчетаРеглУчета.ВалютнаяСуммаДт КАК ВалютнаяСуммаДт,
		|	СчетаРеглУчета.ВалютнаяСуммаКт КАК ВалютнаяСуммаКт,
		|	СчетаРеглУчета.Сумма КАК Сумма,
		|	СчетаРеглУчета.СуммаУУ КАК СуммаУУ
		|ИЗ
		|	СчетаПроводокРеглУчета КАК СчетаРеглУчета
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаРеглУчетаИгнорируемыеПриОтраженииВМеждународномУчете КАК ИгнорируемыеСчета
		|		ПО СчетаРеглУчета.НастройкаФормированияПроводок = ИгнорируемыеСчета.НастройкаФормированияПроводок
		|			И СчетаРеглУчета.Счет = ИгнорируемыеСчета.СчетРеглУчета
		|ГДЕ
		|	ИгнорируемыеСчета.СчетРеглУчета ЕСТЬ NULL ";
		#КонецОбласти

		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("ПроводкиРеглУчета", ПроводкиРеглУчета);

		Выборка = Запрос.Выполнить().Выбрать();

		ШаблонОшибки = НСтр("ru = 'Не указан соответствующий счет для %Счет%.';
		|en = 'Corresponding account for %Счет% is not specified.'");

		Пока Выборка.Следующий() Цикл

			Отбор = Новый Структура;
			Отбор.Вставить("Регистратор", Выборка.Регистратор);
			Отбор.Вставить("НомерСтроки", Выборка.НомерСтроки);

			РезультатПоиска = ПрименениеСоответствий.НайтиСтроки(Отбор);
			Если РезультатПоиска.Количество() Тогда
				СтрокаПримененияСоответствий = РезультатПоиска[0];
			Иначе
				СтрокаПримененияСоответствий = Неопределено;
			КонецЕсли;

			Если Не ЗначениеЗаполнено(Выборка.Счет) Тогда
				Продолжить;
			КонецЕсли;

			Если СтрокаПримененияСоответствий <> Неопределено 
				И ЗначениеЗаполнено(СтрокаПримененияСоответствий["Счет" + Выборка.ПоложениеСчета]) Тогда
				Продолжить;
			КонецЕсли;

			УчетныеВалюты = МеждународныйУчетСерверПовтИсп.УчетныеВалюты(Выборка.ПланСчетов, Выборка.Организация);
			ФункциональнаяСумма = ФункциональнаяСумма(Выборка, ПараметрыФормированияПроводок, УчетныеВалюты);
			РесурсыЗаполнены = Ложь;
			Если ФункциональнаяСумма.Сумма <> 0 Тогда
				РесурсыЗаполнены = Истина;	
			ИначеЕсли Выборка.КоличествоДт <> 0 Или Выборка.КоличествоКт <> 0 Или Выборка.ВалютнаяСуммаДт <> 0 Или Выборка.ВалютнаяСуммаКт <> 0 Тогда
				РесурсыЗаполнены = Истина;
			КонецЕсли;
			Если Не РесурсыЗаполнены Тогда
				Продолжить;
			КонецЕсли;

			ТекстОшибки = СтрЗаменить(ШаблонОшибки, "%Счет%", Выборка.Счет);

			Проводка = ОбщегоНазначения.СкопироватьРекурсивно(ПараметрыФормированияПроводок.СтруктураПроводки);
			ЗаполнитьЗначенияСвойств(Проводка, Отбор);
			ЗаполнитьЗначенияСвойств(Проводка, Выборка);
			МеждународныйУчетПроведениеСервер.ЗаполнитьСтатусПроводки(Проводка, Перечисления.СтатусыОтраженияВМеждународномУчете.ОтсутствуютПравилаОтраженияВУчете);
			МеждународныйУчетПроведениеСервер.ДобавитьОшибкуПроводки(Проводка, ТекстОшибки);
			МеждународныйУчетПроведениеСервер.ДобавитьПроводкуВТаблицуПроводок(ТаблицаПроводок, Проводка);

			МенеджерЗаписи = РегистрыСведений.СоответствияСчетовМеждународногоУчетаТребующиеНастройки.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.ПланСчетов = Выборка.ПланСчетов;
			МенеджерЗаписи.НастройкаФормированияПроводок = Выборка.НастройкаФормированияПроводок;
			МенеджерЗаписи.СчетУчета = Выборка.Счет;
			МенеджерЗаписи.Документ = Выборка.Регистратор;
			МенеджерЗаписи.Записать();

		КонецЦикла;

	КонецЕсли;

КонецПроцедуры

