#Область СлужебныйПрограммныйИнтерфейс

// Возвращает таблицу кодов и атрибутов операций
Функция ПолучитьТаблицуКодовОпераций() Экспорт          
	
	ИнициализироватьСправочник_гф_ПочтаРоссииОперацииОтслеживания();
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	гф_ПочтаРоссииОперацииОтслеживания.Ссылка КАК Ссылка,
	               |	гф_ПочтаРоссииОперацииОтслеживания.КодОперации КАК КодОперации,
	               |	гф_ПочтаРоссииОперацииОтслеживания.КодАтрибута КАК КодАтрибута,
	               |	гф_ПочтаРоссииОперацииОтслеживания.Операция КАК Операция,
	               |	гф_ПочтаРоссииОперацииОтслеживания.Атрибут КАК Атрибут,
	               |	гф_ПочтаРоссииОперацииОтслеживания.КонечнаяОперация КАК КонечнаяОперация
	               |ИЗ
	               |	Справочник.гф_ПочтаРоссииОперацииОтслеживания КАК гф_ПочтаРоссииОперацииОтслеживания";
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		
		Возврат Неопределено;
		
	КонецЕсли;	 
	
	ТаблицаКодовОпераций = Результат.Выгрузить();
	
	Возврат ТаблицаКодовОпераций; 
	
КонецФункции	

// Возвращает таблицу кодов категорий почтовых отправлений
Функция ПолучитьТаблицуКодовКатегорий() Экспорт          
	
	ТаблицаКодовКатегорий = ПолучитьТаблицуКодовКатегорийСлужебный();
	
	Возврат ТаблицаКодовКатегорий; 
	
КонецФункции	

// Возвращает таблицу разрядов почтовых отправлений
Функция ПолучитьТаблицуКодовРазрядовПочтовыхОтправлений() Экспорт          
	
	ТаблицаКодовРазрядовПочтовыхОтправлений = ПолучитьТаблицуКодовРазрядовПочтовыхОтправленийСлужебный();
	
	Возврат ТаблицаКодовРазрядовПочтовыхОтправлений; 
	
КонецФункции	

#КонецОбласти

#Область СлужебныеПроцедурыИФункции  

// Заполняет справочник гф_ПочтаРоссииОперацииОтслеживания 
// из табличного документа Обработки.гф_ПочтаРоссииЗапросКТрекеру.КодыОпераций
Процедура ИнициализироватьСправочник_гф_ПочтаРоссииОперацииОтслеживания()
	
	ТаблицаСоответствий = гф_ПочтаРоссииПовтИсп.ПолучитьТаблицуКодовОперацийСлужебный();
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВТ_Соответствия.КодОперации КАК КодОперации,
	               |	ВТ_Соответствия.КодАтрибута КАК КодАтрибута,
	               |	ВТ_Соответствия.Операция КАК Операция,
	               |	ВТ_Соответствия.Атрибут КАК Атрибут,
	               |	ВТ_Соответствия.КонечнаяОперация КАК КонечнаяОперация
	               |ПОМЕСТИТЬ ВТ_Соответствия
	               |ИЗ
	               |	&ТаблицаСоответствий КАК ВТ_Соответствия
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ   
				   |	гф_ПочтаРоссииОперацииОтслеживания.Ссылка КАК Ссылка,
	               |	ВТ_Соответствия.КодОперации КАК КодОперации,
	               |	ВТ_Соответствия.КодАтрибута КАК КодАтрибута,
	               |	ВТ_Соответствия.Операция КАК Операция,
	               |	ВТ_Соответствия.Атрибут КАК Атрибут,
	               |	ВТ_Соответствия.КонечнаяОперация КАК КонечнаяОперация
	               |ИЗ
	               |	ВТ_Соответствия КАК ВТ_Соответствия
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.гф_ПочтаРоссииОперацииОтслеживания КАК гф_ПочтаРоссииОперацииОтслеживания
	               |		ПО ВТ_Соответствия.КодОперации = гф_ПочтаРоссииОперацииОтслеживания.КодОперации
	               |			И ВТ_Соответствия.КодАтрибута = гф_ПочтаРоссииОперацииОтслеживания.КодАтрибута
	               |ГДЕ
	               |	гф_ПочтаРоссииОперацииОтслеживания.Ссылка ЕСТЬ NULL";
	
	Запрос.Параметры.Вставить("ТаблицаСоответствий", ТаблицаСоответствий);
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		
		Возврат;
		
	КонецЕсли;	 
	
	Таб = Результат.Выгрузить();
	
	Выборка = Результат.Выбрать();
	
	УстановитьПривилегированныйРежим(Истина);
	
	Пока Выборка.Следующий() Цикл
		
		СправочникОбъект = Справочники.гф_ПочтаРоссииОперацииОтслеживания.СоздатьЭлемент();
		
		СправочникОбъект.ОбменДанными.Загрузка = Истина;
		
		ЗаполнитьЗначенияСвойств(СправочникОбъект, Выборка);     
		
		Если Выборка.КодАтрибута = 0  Тогда
			
			СправочникОбъект.Наименование = СправочникОбъект.Операция + ".";
			
		Иначе	
		
			СправочникОбъект.Наименование = СправочникОбъект.Операция + ". " + СправочникОбъект.Атрибут + ".";
		
		КонецЕсли;
		
		СправочникОбъект.Записать();
		
	КонецЦикла;	
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

// Возвращает таблицу кодов и атрибутов операций
// из табличного документа Обработки.гф_ПочтаРоссииЗапросКТрекеру.КодыОпераций
Функция ПолучитьТаблицуКодовОперацийСлужебный() Экспорт
	
	ТаблицаКодов = Новый ТаблицаЗначений;    
	
	КвалификаторыЧисла4		= Новый КвалификаторыЧисла(4, 0, ДопустимыйЗнак.Неотрицательный);
	КвалификаторыСтроки64	= Новый КвалификаторыСтроки(64, ДопустимаяДлина.Переменная);
	КвалификаторыСтроки120	= Новый КвалификаторыСтроки(120, ДопустимаяДлина.Переменная);
	
	ОписаниеТиповБулево		= Новый ОписаниеТипов("Булево");
	ОписаниеТиповЧисло4		= Новый ОписаниеТипов("Число", , , КвалификаторыЧисла4);
	ОписаниеТиповСтрока64	= Новый ОписаниеТипов("Строка", , , КвалификаторыСтроки64);
	ОписаниеТиповСтрока120	= Новый ОписаниеТипов("Строка", , , КвалификаторыСтроки120);
	
	ТаблицаКодов.Колонки.Добавить("КодОперации",		ОписаниеТиповЧисло4);
	ТаблицаКодов.Колонки.Добавить("КодАтрибута",		ОписаниеТиповЧисло4);
	ТаблицаКодов.Колонки.Добавить("Операция",			ОписаниеТиповСтрока64);
	ТаблицаКодов.Колонки.Добавить("Атрибут",			ОписаниеТиповСтрока120);
	ТаблицаКодов.Колонки.Добавить("КонечнаяОперация",	ОписаниеТиповБулево);
	
	ДокументКоды = Обработки.гф_ПочтаРоссииЗапросКТрекеру.ПолучитьМакет("КодыОпераций"); 
	
	КолонкаКодОперации		= 1; 
	КолонкаОперация			= 2; 
	КолонкаКодАтрибута		= 3; 
	КолонкаАтрибут			= 4; 
	КолонкаКонечнаяОперация	= 5;  
	
	ПерваяСтрокаДанных		= 2;
	
	КодОперации = Неопределено;
	
	Для НомерСтроки = ПерваяСтрокаДанных По ДокументКоды.ВысотаТаблицы Цикл
		
		ОбластьКодОперации		= ДокументКоды.Область(НомерСтроки, КолонкаКодОперации);
		ОбластьОперация			= ДокументКоды.Область(НомерСтроки, КолонкаОперация);
		ОбластьКодАтрибута		= ДокументКоды.Область(НомерСтроки, КолонкаКодАтрибута);
		ОбластьАтрибут			= ДокументКоды.Область(НомерСтроки, КолонкаАтрибут);
		ОбластьКонечнаяОперация	= ДокументКоды.Область(НомерСтроки, КолонкаКонечнаяОперация);
		
		КодСледующейОперации = гф_ПочтаРоссии.СтрокаВЧисло(ОбластьКодОперации.Текст);
		
		Если ЗначениеЗаполнено(КодСледующейОперации) Тогда       
			
			КодОперации	= КодСледующейОперации; 
			Операция	= ОбластьОперация.Текст;
			
		КонецЕсли;	 
		
		НоваяСтрока = ТаблицаКодов.Добавить();
		
		НоваяСтрока.КодОперации			= КодОперации;
		НоваяСтрока.КодАтрибута			= гф_ПочтаРоссии.СтрокаВЧисло(ОбластьКодАтрибута.Текст);
		НоваяСтрока.Операция			= Операция;
		НоваяСтрока.Атрибут				= ?(НоваяСтрока.КодАтрибута = 0, "", ОбластьАтрибут.Текст);
		НоваяСтрока.КонечнаяОперация	= ЗначениеЗаполнено(ОбластьКонечнаяОперация.Текст);
		
	КонецЦикла;	
	
	Возврат ТаблицаКодов; 
	
КонецФункции	

// Возвращает таблицу кодов категорий почтовых отправлений
// из табличного документа Обработки.гф_ПочтаРоссииЗапросКТрекеру.КодыКатегорий
Функция ПолучитьТаблицуКодовКатегорийСлужебный() Экспорт          
	
	ТаблицаКодов = Новый ТаблицаЗначений;    
	
	КвалификаторыЧисла2		= Новый КвалификаторыЧисла(2, 0, ДопустимыйЗнак.Неотрицательный);
	КвалификаторыСтроки64	= Новый КвалификаторыСтроки(64, ДопустимаяДлина.Переменная);
	
	ОписаниеТиповЧисло2		= Новый ОписаниеТипов("Число", , , КвалификаторыЧисла2);
	ОписаниеТиповСтрока64	= Новый ОписаниеТипов("Строка", , , КвалификаторыСтроки64);
	
	ТаблицаКодов.Колонки.Добавить("Код",		ОписаниеТиповЧисло2);
	ТаблицаКодов.Колонки.Добавить("Категория",	ОписаниеТиповСтрока64);
	
	ДокументКоды = Обработки.гф_ПочтаРоссииЗапросКТрекеру.ПолучитьМакет("КодыКатегорий"); 
	
	КолонкаКод			= 1; 
	КолонкаКатегория	= 2; 
	
	ПерваяСтрокаДанных		= 2;
	
	Для НомерСтроки = ПерваяСтрокаДанных По ДокументКоды.ВысотаТаблицы Цикл
		
		ОбластьКод			= ДокументКоды.Область(НомерСтроки, КолонкаКод);
		ОбластьКатегория	= ДокументКоды.Область(НомерСтроки, КолонкаКатегория);
		
		НоваяСтрока = ТаблицаКодов.Добавить();
		
		НоваяСтрока.Код			= СокрЛП(ОбластьКод.Текст);
		НоваяСтрока.Категория	= СокрЛП(ОбластьКатегория.Текст);
		
	КонецЦикла;	
	
	Возврат ТаблицаКодов; 
	
КонецФункции	

// Возвращает таблицу кодов разрядов почтовых отправлений
// из табличного документа Обработки.гф_ПочтаРоссииЗапросКТрекеру.КодыКодовРазрядовПочтовыхОтправлений
Функция ПолучитьТаблицуКодовРазрядовПочтовыхОтправленийСлужебный() Экспорт          
	
	ТаблицаКодов = Новый ТаблицаЗначений;    
	
	КвалификаторыЧисла2		= Новый КвалификаторыЧисла(2, 0, ДопустимыйЗнак.Неотрицательный);
	КвалификаторыСтроки20	= Новый КвалификаторыСтроки(20, ДопустимаяДлина.Переменная);
	
	ОписаниеТиповЧисло2		= Новый ОписаниеТипов("Число", , , КвалификаторыЧисла2);
	ОписаниеТиповСтрока20	= Новый ОписаниеТипов("Строка", , , КвалификаторыСтроки20);
	
	ТаблицаКодов.Колонки.Добавить("Код",	ОписаниеТиповЧисло2);
	ТаблицаКодов.Колонки.Добавить("Разряд",	ОписаниеТиповСтрока20);
	
	ДокументКоды = Обработки.гф_ПочтаРоссииЗапросКТрекеру.ПолучитьМакет("КодыРазрядовПочтовыхОтправлений"); 
	
	КолонкаКод		= 1; 
	КолонкаРазряд	= 2; 
	
	ПерваяСтрокаДанных = 2;
	
	Для НомерСтроки = ПерваяСтрокаДанных По ДокументКоды.ВысотаТаблицы Цикл
		
		ОбластьКод		= ДокументКоды.Область(НомерСтроки, КолонкаКод);
		ОбластьРазряд	= ДокументКоды.Область(НомерСтроки, КолонкаРазряд);
		
		НоваяСтрока = ТаблицаКодов.Добавить();
		
		НоваяСтрока.Код		= СокрЛП(ОбластьКод.Текст);
		НоваяСтрока.Разряд	= СокрЛП(ОбластьРазряд.Текст);
		
	КонецЦикла;	
	
	Возврат ТаблицаКодов; 
	
КонецФункции	

#КонецОбласти

