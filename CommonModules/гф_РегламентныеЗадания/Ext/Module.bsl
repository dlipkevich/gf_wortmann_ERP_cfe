
&Вместо("ВыставитьСчетаНаОплату")
Процедура гф_ВыставитьСчетаНаОплату() Экспорт
	
	Попытка 
		ЗаписьЖурналаРегистрации("РегламентноеВыставлениеСчетов.СтартОбработки", УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_ВыставлениеСчетов);
		ОбработкаЗапуска = Обработки.гф_ВыставлениеСчетов.Создать();
		ОбработкаЗапуска.ВыставитьСчетаНаПоставку(); 
		ЗаписьЖурналаРегистрации("РегламентноеВыставлениеСчетов.ЗавершениеОбработки", УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_ВыставлениеСчетов);
	Исключение
		ОписаниеОшибки = ОписаниеОшибки();  
		СтрокаСообщений = "Ошибка при запуске обработки: " + ОписаниеОшибки;
		ЗаписьЖурналаРегистрации("РегламентноеВыставлениеСчетов.ОшибкаПриЗапуске", УровеньЖурналаРегистрации.Ошибка, Метаданные.Обработки.гф_ВыставлениеСчетов,,СтрокаСообщений);
	КонецПопытки;
	
	ПродолжитьВызов();
	
КонецПроцедуры

&Вместо("Почта_России_ЗапроситьДанныеТрекинга")
Процедура гф_Почта_России_ЗапроситьДанныеТрекинга() Экспорт
	
	гф_ПочтаРоссии.ОбновитьДанныеОтслеживаемыхОтправлений();
	
КонецПроцедуры

// #wortmann {
// #2.1 Интеграция с маркетплейсами
// Метод регламентного задания Загрузка продаж Wildberries
// Галфинд (Уфимцев) Перминов 2022/11/15
&Вместо("ЗапроситьПродажиWildberries")
Процедура гф_ЗапроситьПродажиWildberries()
	
	Попытка
		ЗаписьЖурналаРегистрации("РегламентнаяЗагрузкаПродажWildberries.СтартОбработки", УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_ЗагрузкаПродажWildberries);
		ОбработкаЗапуска = Обработки.гф_ЗагрузкаПродажWildberries.Создать();
		ОбработкаЗапуска.ВыполнитьКоманду("ЗагрузкаПродажWildberriesAPI");
		ЗаписьЖурналаРегистрации("РегламентнаяЗагрузкаПродажWildberries.ЗавершениеОбработки", УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_ЗагрузкаПродажWildberries);
	Исключение
		ТекстОшибки = ОписаниеОшибки();
		СтрокаСообщения = "Ошибка при запуске обработки: " + ТекстОшибки;
		ЗаписьЖурналаРегистрации("РегламентнаяЗагрузкаПродажWildberries.ОшибкаПриЗапуске", УровеньЖурналаРегистрации.Ошибка, Метаданные.Обработки.гф_ЗагрузкаПродажWildberries,,СтрокаСообщения);
	КонецПопытки;
	
	ПродолжитьВызов();
	
КонецПроцедуры // } #wortmann 

// #wortmann {
// #2.2 Интеграция с маркетплейсами
// Метод регламентного задания Загрузка продаж Cactus
// Галфинд (Уфимцев) Перминов 2022/11/15
&Вместо("ЗапроситьПродажиCactus")
Процедура гф_ЗапроситьПродажиCactus()
	
	Попытка
		ЗаписьЖурналаРегистрации("РегламентнаяЗагрузкаПродажCactus.СтартОбработки", УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_ЗагрузкаПродажКактус);
		ОбработкаЗапуска = Обработки.гф_ЗагрузкаПродажКактус.Создать();
		ОбработкаЗапуска.ВыполнитьОсновныеДействия();
		ЗаписьЖурналаРегистрации("РегламентнаяЗагрузкаПродажCactus.ЗавершениеОбработки", УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_ЗагрузкаПродажКактус);
	Исключение
		ТекстОшибки = ОписаниеОшибки();
		СтрокаСообщения = "Ошибка при запуске обработки: " + ТекстОшибки;
		ЗаписьЖурналаРегистрации("РегламентнаяЗагрузкаПродажCactus.ОшибкаПриЗапуске", УровеньЖурналаРегистрации.Ошибка, Метаданные.Обработки.гф_ЗагрузкаПродажКактус,,СтрокаСообщения);
	КонецПопытки;
	
	ПродолжитьВызов(); 
	
КонецПроцедуры

// #wortmann {
// Метод регламентного задания "Создание заказов на эмиссию кодов маркировки"
// Галфинд Sakovich 2022/11/30
&Вместо("СоздатьДокументыЗаказЭмиссииКодовМаркировки")
Процедура гф_СоздатьДокументыЗаказЭмиссииКодовМаркировки()
	
	Попытка
		ЗаписьЖурналаРегистрации("ЗапускОбработкиСозданияЭмиссииКМ.СтартОбработки", УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_ОбработкаЗаказовНаЭмиссиюКМ);
		ОбработкаЗапуска = Обработки.гф_ОбработкаЗаказовНаЭмиссиюКМ.Создать();
	Исключение
		ТекстОшибки = ОписаниеОшибки();
		СтрокаСообщения = "Ошибка при запуске обработки: " + ТекстОшибки;
		ЗаписьЖурналаРегистрации("ЗапускОбработкиСозданияЭмиссииКМ.ОшибкаПриЗапуске", УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_ОбработкаЗаказовНаЭмиссиюКМ,,СтрокаСообщения);
		Возврат;
	КонецПопытки;

	Попытка
		ЗаписьЖурналаРегистрации("РегламентноеСозданиеДокументовЭмиссииКМ.СозданиеДокументовЭмиссии", УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_ОбработкаЗаказовНаЭмиссиюКМ);
		РезультатСозданияЭмиссии = Неопределено;
		ОбработкаЗапуска.СоздатьДокументыЗаказНаЭмиссиюКодовМаркировки(РезультатСозданияЭмиссии);
		ЗаписьЖурналаРегистрации("РегламентноеСозданиеДокументовЭмиссииКМ.ЗавершениеСозданияДокументовЭмиссии", УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_ОбработкаЗаказовНаЭмиссиюКМ);
	Исключение
		ТекстОшибки = ОписаниеОшибки();
		СтрокаСообщения = "Ошибка при создании документов Эмиссии КМ: " + ТекстОшибки;
		ЗаписьЖурналаРегистрации("РегламентноеСозданиеДокументовЭмиссииКМ.ОшибкаПриСозданииДокументовЭмиссии", УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_ОбработкаЗаказовНаЭмиссиюКМ,,СтрокаСообщения);
	КонецПопытки;
	
	ПродолжитьВызов();
КонецПроцедуры // } #wortmann

// #wortmann {
// #4.1 Создание документов движений КМ Внешних систем
// Метод регламентного задания "Создание документов движения кодов маркироваки внешних систем"
// Галфинд (Уфимцев) Перминов 2022/12/06
&Вместо("СозданиеДокументовДвиженийКМВнешнихСистем")
Процедура гф_СозданиеДокументовДвиженийКМВнешнихСистем()
	
	Попытка
		ЗаписьЖурналаРегистрации("РегламентноеСозданиеДокументовДвиженийКодовМаркировкиВнешнихСистем.СтартОбработки", УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_СозданиеДокументовДвиженийКМВнешнихСистем);
		ОбработкаЗапуска = Обработки.гф_СозданиеДокументовДвиженийКМВнешнихСистем.Создать();
		ОбработкаЗапуска.ВыполнитьОсновныеДействия();
		ЗаписьЖурналаРегистрации("РегламентноеСозданиеДокументовДвиженийКодовМаркировкиВнешнихСистем.ЗавершениеОбработки", УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_СозданиеДокументовДвиженийКМВнешнихСистем);
	Исключение
		ТекстОшибки = ОписаниеОшибки();
		СтрокаСообщения = "Ошибка при запуске обработки: " + ТекстОшибки;
		ЗаписьЖурналаРегистрации("РегламентноеСозданиеДокументовДвиженийКодовМаркировкиВнешнихСистем.ОшибкаПриЗапуске", УровеньЖурналаРегистрации.Ошибка, Метаданные.Обработки.гф_СозданиеДокументовДвиженийКМВнешнихСистем,,СтрокаСообщения);
	КонецПопытки;
	
	ПродолжитьВызов();
	
КонецПроцедуры// } #wortmann

// #wortmann {
// Метод регламентного задания "Загрузка файлов и писем"
// Галфинд Домнышева 2022/12/19
&Вместо("ЗагрузитьФайлыИПисьма")
Процедура гф_ЗагрузитьФайлыИПисьма()
	
	Попытка
		ЗаписьЖурналаРегистрации("РегламентнаяЗагрузкаФайловИзПочты.СтартОбработки", УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_ЗагрузкаФайловИзПочты);
		ОбработкаЗапуска = Обработки.гф_ЗагрузкаФайловИзПочты.Создать();
		ОбработкаЗапуска.ЗагрузкаФайловИзПочты();
		ЗаписьЖурналаРегистрации("РегламентнаяЗагрузкаФайловИзПочты.ЗавершениеОбработки", УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_ЗагрузкаФайловИзПочты);
	Исключение
		ТекстОшибки = ОписаниеОшибки();
		СтрокаСообщения = "Ошибка при запуске обработки: " + ТекстОшибки;
		ЗаписьЖурналаРегистрации("РегламентнаяЗагрузкаФайловИзПочты.ОшибкаПриЗапуске", УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_ЗагрузкаФайловИзПочты,,СтрокаСообщения);
	КонецПопытки;

	ПродолжитьВызов(); 
	
КонецПроцедуры// } #wortmann

// #wortmann {
// #7.2 Движения КМ Wildberries
// Метод регламентного задания Загрузка движений КМ Wildberries
// Галфинд (Уфимцев) Перминов 2022/12/28
&Вместо("ЗапроситьДвиженияКМWildberries")
Процедура гф_ЗапроситьДвиженияКМWildberries()

	Попытка
		ЗаписьЖурналаРегистрации("РегламентнаяЗагрузкаДвиженийКМWildberries.СтартОбработки", УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_ЗагрузкаПродажWildberries);
		ОбработкаЗапуска = Обработки.гф_ЗагрузкаПродажWildberries.Создать();
		ОбработкаЗапуска.ВыполнитьКоманду("ЗагрузкаДвиженийКМWildberriesAPI");
		ЗаписьЖурналаРегистрации("РегламентнаяЗагрузкаДвиженийКМWildberries.ЗавершениеОбработки", УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_ЗагрузкаПродажWildberries);
	Исключение
		ТекстОшибки = ОписаниеОшибки();
		СтрокаСообщения = "Ошибка при запуске обработки: " + ТекстОшибки;
		ЗаписьЖурналаРегистрации("РегламентнаяЗагрузкаДвиженийКМWildberries.ОшибкаПриЗапуске", УровеньЖурналаРегистрации.Ошибка, Метаданные.Обработки.гф_ЗагрузкаПродажWildberries,,СтрокаСообщения);
	КонецПопытки;
	
	ПродолжитьВызов();
КонецПроцедуры// } #wortmann

// #wortmann {
// Метод регламентного задания "Загрузка файлов из I5"
// Галфинд Домнышева 2022/12/29
&Вместо("ЗагрузитьФайлыИзИ5")
Процедура гф_ЗагрузитьФайлыИзИ5()
	
	Попытка
		ЗаписьЖурналаРегистрации("РегламентнаяЗагрузкаФайловИзИ5.СтартОбработки", УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_ЗагрузкаИзI5);
		ОбработкаЗапуска = Обработки.гф_ЗагрузкаИзI5.Создать();
		ОбработкаЗапуска.ВыполнитьЗагрузкуИРазборФайлов();
		ЗаписьЖурналаРегистрации("РегламентнаяЗагрузкаФайловИзИ5.ЗавершениеОбработки", УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_ЗагрузкаИзI5);
	Исключение
		ТекстОшибки = ОписаниеОшибки();
		СтрокаСообщения = "Ошибка при запуске обработки: " + ТекстОшибки;
		ЗаписьЖурналаРегистрации("РегламентнаяЗагрузкаФайловИзИ5.ОшибкаПриЗапуске", УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_ЗагрузкаИзI5,,СтрокаСообщения);
	КонецПопытки;

	ПродолжитьВызов();
КонецПроцедуры// } #wortmann

// #wortmann {
// Метод регламентного задания "Загрузка инвойс"
// Галфинд Домнышева 2023/02/17
&Вместо("ЗагрузитьФайлыИнвойс")
Процедура гф_ЗагрузитьФайлыИнвойс()
	
	Попытка
		ЗаписьЖурналаРегистрации("РегламентнаяЗагрузкаИнвойс.СтартОбработки", УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_ЗагрузкаИнвойс);
		ОбработкаЗапуска = Обработки.гф_ЗагрузкаИнвойс.Создать();
		ОбработкаЗапуска.ВыполнитьЗагрузкуИРазборФайлов();
		ЗаписьЖурналаРегистрации("РегламентнаяЗагрузкаИнвойс.ЗавершениеОбработки", УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_ЗагрузкаИнвойс);
	Исключение
		ТекстОшибки = ОписаниеОшибки();
		СтрокаСообщения = "Ошибка при запуске обработки: " + ТекстОшибки;
		ЗаписьЖурналаРегистрации("РегламентнаяЗагрузкаИнвойс.ОшибкаПриЗапуске", УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_ЗагрузкаИнвойс,,СтрокаСообщения);
	КонецПопытки;

	ПродолжитьВызов();
КонецПроцедуры

// Метод регламентного задания "Корректировка назначений"
// ++ ЛигаКода Сгонник 2023/02/21
&Вместо("КорректировкаНазначений")
Процедура гф_КорректировкаНазначений()
	
	Попытка
		ЗаписьЖурналаРегистрации("РегламентнаяКорректировкаНазначений.СтартОбработки", УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_КорректировкаНазначений);
		ОбработкаЗапуска = Обработки.гф_КорректировкаНазначений.Создать();
		ОбработкаЗапуска.ВыполнитьКоманду("гф_КорректировкаНазначенийАвтоматически");
		ЗаписьЖурналаРегистрации("РегламентнаяКорректировкаНазначений.ЗавершениеОбработки", УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_КорректировкаНазначений);
	Исключение
		ТекстОшибки = ОписаниеОшибки();
		СтрокаСообщения = "Ошибка при запуске обработки: " + ТекстОшибки;
		ЗаписьЖурналаРегистрации("РегламентнаяКорректировкаНазначений.ОшибкаПриЗапуске", УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_КорректировкаНазначений,,СтрокаСообщения);
	КонецПопытки;

	ПродолжитьВызов();
КонецПроцедуры

// #wortmann {
// Метод регламентного задания "Сопоставление приходных ордеров и заявок на возврат"
// Галфинд Sakovich 2023/03/30
&Вместо("СопоставитьПриходныеОрдераИЗаявкиНаВозврат")
Процедура гф_СопоставитьПриходныеОрдераИЗаявкиНаВозврат()
	Попытка
		ЗаписьЖурналаРегистрации("ЗапускОбработкиСопоставлениеОрдеровИЗаявокНаВозврат.СтартОбработки", 
		УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_СопоставлениеОрдеровИЗаявокНаВозврат);
		ОбработкаЗапуска = Обработки.гф_СопоставлениеОрдеровИЗаявокНаВозврат.Создать();
	Исключение
		ТекстОшибки = ОписаниеОшибки();
		СтрокаСообщения = "Ошибка при запуске обработки: " + ТекстОшибки;
		ЗаписьЖурналаРегистрации("ЗапускОбработкиСопоставлениеОрдеровИЗаявокНаВозврат.ОшибкаПриЗапуске", 
		УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_СопоставлениеОрдеровИЗаявокНаВозврат,,
		СтрокаСообщения);
		Возврат;
	КонецПопытки;

	Попытка
		ЗаписьЖурналаРегистрации("РегламентноеСопоставлениеОрдеровИЗаявокНаВозврат.СопоставлениеДокументов", 
		УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_СопоставлениеОрдеровИЗаявокНаВозврат);
		РезультатВыполнения = Неопределено;
		ОбработкаЗапуска.ВыполнитьСопоставлениеПрОрдеровИЗаявокНаВозврат(РезультатВыполнения);
		ЗаписьЖурналаРегистрации("РегламентноеСопоставлениеОрдеровИЗаявокНаВозврат.ЗавершениеСопоставленияДокументов", 
		УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_СопоставлениеОрдеровИЗаявокНаВозврат);
	Исключение
		ТекстОшибки = ОписаниеОшибки();
		СтрокаСообщения = "Ошибка при сопоставлении прих.ордеров и заявок на возврат: " + ТекстОшибки;
		ЗаписьЖурналаРегистрации("РегламентноеСопоставлениеОрдеровИЗаявокНаВозврат.ОшибкаПриСопоставленииДокументов", 
		УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_СопоставлениеОрдеровИЗаявокНаВозврат,,СтрокаСообщения);
		Возврат;
	КонецПопытки;

	ПродолжитьВызов();
КонецПроцедуры

// #wortmann {
// Метод регламентного задания "Отработка статусов КМ в документах"
// Галфинд Sakovich 2023/03/30
&Вместо("ОтработкаСтатусовКМ_в_документах")
Процедура гф_ОтработкаСтатусовКМ_в_документах()
	Попытка
		ЗаписьЖурналаРегистрации("ЗапускОбработкиСозданияЭмиссииКМ.СтартОбработки",
		УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_ОбработкаЗаказовНаЭмиссиюКМ);
		ОбработкаЗапуска = Обработки.гф_ОбработкаЗаказовНаЭмиссиюКМ.Создать();
	Исключение
		ТекстОшибки = ОписаниеОшибки();
		СтрокаСообщения = "Ошибка при запуске обработки: " + ТекстОшибки;
		ЗаписьЖурналаРегистрации("ЗапускОбработкиСозданияЭмиссииКМ.ОшибкаПриЗапуске", 
		УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_ОбработкаЗаказовНаЭмиссиюКМ,,СтрокаСообщения);
		Возврат;
	КонецПопытки;
	
	Попытка
		ЗаписьЖурналаРегистрации("РегламентноеСозданиеДокументовЭмиссииКМ.ОтработкаСтатусовКМ_в_документах", 
		УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_ОбработкаЗаказовНаЭмиссиюКМ);
		ОбработкаЗапуска.ПроверитьУстановитьСтатусыКМЭмитированы();
		ЗаписьЖурналаРегистрации("РегламентноеСозданиеДокументовЭмиссииКМ.ЗавершениеОтработкиСтатусовКМ_в_документах", 
		УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_ОбработкаЗаказовНаЭмиссиюКМ);
	Исключение
		ТекстОшибки = ОписаниеОшибки();
		СтрокаСообщения = "Ошибка при обработке статусов ""КМ Эмитированы"": "  + ТекстОшибки;
		ЗаписьЖурналаРегистрации("РегламентноеСозданиеДокументовЭмиссииКМ.ОшибкаПриОтработкеСтатусовКМ_в_документах", 
		УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_ОбработкаЗаказовНаЭмиссиюКМ,,СтрокаСообщения);
		Возврат;
	КонецПопытки;
	
	ПродолжитьВызов();
КонецПроцедуры

// #wortmann {
// Метод регламентного задания "Подготовить документы Заказ на эмиссию КМ к передаче ИСМП"
// Галфинд СадомцевСА 2023/05/23
&Вместо("ПодготовитьДокументыЗаказНаЭмиссиюКМкПередачеИСМП")
Процедура гф_ПодготовитьДокументыЗаказНаЭмиссиюКМкПередачеИСМП()
	Попытка
		СтрокаСообщения = "Запуск регл. задания.";
		ЗаписьЖурналаРегистрации("РегламентированноеЗаданиеПодготовитьДокументыЗаказНаЭмиссиюКМкПередачеИСМП",
		УровеньЖурналаРегистрации.Информация,
		Метаданные.РегламентныеЗадания.гф_ПодготовитьДокументыЗаказНаЭмиссиюКМкПередачеИСМП,
		,СтрокаСообщения);
		МассивДокументов = ПодготовитьМассивДокументовЗаказНаЭмиссиюКМ();
		Если МассивДокументов.Количество() > 0 Тогда
			гф_ЭмиссияКодовМаркировкиВызовСервера.гф_ПодготовитьКПередачеИСМП(МассивДокументов, Истина);
		КонецЕсли;
	Исключение
		ТекстОшибки = ОписаниеОшибки();
		СтрокаСообщения = "Ошибка при запуске обработки: " + ТекстОшибки;
		ЗаписьЖурналаРегистрации("РегламентированноеЗаданиеПодготовитьДокументыЗаказНаЭмиссиюКМкПередачеИСМП",
		УровеньЖурналаРегистрации.Информация,
		Метаданные.РегламентныеЗадания.гф_ПодготовитьДокументыЗаказНаЭмиссиюКМкПередачеИСМП,
		,СтрокаСообщения);
		Возврат;
	КонецПопытки;
	
	ПродолжитьВызов();
КонецПроцедуры

Функция ПодготовитьМассивДокументовЗаказНаЭмиссиюКМ()
	МассивДокументов = Новый Массив;
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Таблица.Ссылка КАК Ссылка,
	|	Таблица.ПометкаУдаления КАК ПометкаУдаления,
	|	Таблица.Номер КАК Номер,
	|	Таблица.Дата КАК Дата,
	|	Таблица.Проведен КАК Проведен,
	|	Таблица.ДокументОснование КАК ДокументОснование,
	|	Таблица.Организация КАК Организация,
	|	Таблица.ВидПродукции КАК ВидПродукции,
	|	Таблица.СпособВводаВОборот КАК СпособВводаВОборот,
	|	Таблица.Ответственный КАК Ответственный,
	|	Статусы.Статус КАК СтатусИСМП,
	|	Статусы.ДальнейшееДействие1 КАК ДальнейшееДействиеИСМП1
	|ИЗ
	|	Документ.ЗаказНаЭмиссиюКодовМаркировкиСУЗ КАК Таблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовИСМП КАК Статусы
	|		ПО (Статусы.Документ = Таблица.Ссылка)
	|ГДЕ
	|	Таблица.ДокументОснование ССЫЛКА Документ.ПриобретениеТоваровУслуг
	|	И ВЫРАЗИТЬ(Таблица.ДокументОснование КАК Документ.ПриобретениеТоваровУслуг).Проведен
	|	И Статусы.ДальнейшееДействие1 = ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюИСМП.ЗапроситеКодыМаркировки)
	//|	И НЕ Статусы.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОбработкиЗаказовНаЭмиссиюКодовМаркировкиИСМП.Ошибка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Таблица.Ссылка,
	|	Таблица.ПометкаУдаления,
	|	Таблица.Номер,
	|	Таблица.Дата,
	|	Таблица.Проведен,
	|	Таблица.ДокументОснование,
	|	Таблица.Организация,
	|	Таблица.ВидПродукции,
	|	Таблица.СпособВводаВОборот,
	|	Таблица.Ответственный,
	|	Статусы.Статус,
	|	Статусы.ДальнейшееДействие1
	|ИЗ
	|	Документ.ЗаказНаЭмиссиюКодовМаркировкиСУЗ КАК Таблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовИСМП КАК Статусы
	|		ПО (Статусы.Документ = Таблица.Ссылка)
	|ГДЕ
	|	Таблица.ДокументОснование ССЫЛКА Документ.ЗаказПоставщику
	|	И ВЫРАЗИТЬ(Таблица.ДокументОснование КАК Документ.ЗаказПоставщику).Проведен
	|	И Статусы.ДальнейшееДействие1 = ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюИСМП.ЗапроситеКодыМаркировки)";
	//|	И НЕ Статусы.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОбработкиЗаказовНаЭмиссиюКодовМаркировкиИСМП.Ошибка)";
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ОчередьСообщенийИСМП.Сообщение   КАК Сообщение,
	|	ОчередьСообщенийИСМП.Операция    КАК Операция,
	|	ОчередьСообщенийИСМП.Организация КАК Организация
	|ИЗ
	|	РегистрСведений.ОчередьСообщенийИСМП КАК ОчередьСообщенийИСМП
	|ГДЕ
	|	ОчередьСообщенийИСМП.Документ = &Документ";
	
	Пока Выборка.Следующий() Цикл
		//ОчередьПоДокументу = РегистрыСведений.ОчередьСообщенийИСМП.ОчередьСообщенийПоДокументу(Выборка.Ссылка);
		Запрос.УстановитьПараметр("Документ", Выборка.Ссылка);
		Результат = Запрос.Выполнить();
		Если НЕ Результат.Пустой() Тогда
			// здесь документ ЗаказНаЭмиссиюКМ уже есть в очереди сообщений
			Продолжить;
		КонецЕсли;
		Если МассивДокументов.Найти(Выборка.Ссылка) = Неопределено Тогда
			МассивДокументов.Добавить(Выборка.Ссылка);
		КонецЕсли;
	КонецЦикла;
	Возврат МассивДокументов;
КонецФункции
