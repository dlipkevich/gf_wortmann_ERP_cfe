
&Вместо("ВыставитьСчетаНаОплату")
Процедура гф_ВыставитьСчетаНаОплату() Экспорт
	
	Попытка 
		ЗаписьЖурналаРегистрации("РегламентноеВыставлениеСчетов.СтартОбработки", УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_ВыставлениеСчетов);
		ОбработкаЗапуска = Обработки.гф_ВыставлениеСчетов.Создать();
		ОбработкаЗапуска.ВыставитьСчетаНаПоставку(); 
		ЗаписьЖурналаРегистрации("РегламентноеВыставлениеСчетов.ЗавершениеОбработки", УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_ВыставлениеСчетов);
	Исключение
		ОписаниеОшибки = ОписаниеОшибки();  
		СтрокаСообщений = "Ошибка при запуске обработки: " + ОписаниеОшибки;
		ЗаписьЖурналаРегистрации("РегламентноеВыставлениеСчетов.ОшибкаПриЗапуске", УровеньЖурналаРегистрации.Ошибка, Метаданные.Обработки.гф_ВыставлениеСчетов,,СтрокаСообщений);
	КонецПопытки;
	
	ПродолжитьВызов();
	
КонецПроцедуры

&Вместо("Почта_России_ЗапроситьДанныеТрекинга")
Процедура гф_Почта_России_ЗапроситьДанныеТрекинга() Экспорт
	
	гф_ПочтаРоссии.ОбновитьДанныеОтслеживаемыхОтправлений();
	
КонецПроцедуры

// #wortmann {
// #2.1 Интеграция с маркетплейсами
// Метод регламентного задания Загрузка продаж Wildberries
// Галфинд (Уфимцев) Перминов 2022/11/15
&Вместо("ЗапроситьПродажиWildberries")
Процедура гф_ЗапроситьПродажиWildberries()
	
	Попытка
		ЗаписьЖурналаРегистрации("РегламентнаяЗагрузкаПродажWildberries.СтартОбработки", УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_ЗагрузкаПродажWildberries);
		ОбработкаЗапуска = Обработки.гф_ЗагрузкаПродажWildberries.Создать();
		ОбработкаЗапуска.ВыполнитьКоманду("ЗагрузкаПродажWildberriesAPI");
		ЗаписьЖурналаРегистрации("РегламентнаяЗагрузкаПродажWildberries.ЗавершениеОбработки", УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_ЗагрузкаПродажWildberries);
	Исключение
		ТекстОшибки = ОписаниеОшибки();
		СтрокаСообщения = "Ошибка при запуске обработки: " + ТекстОшибки;
		ЗаписьЖурналаРегистрации("РегламентнаяЗагрузкаПродажWildberries.ОшибкаПриЗапуске", УровеньЖурналаРегистрации.Ошибка, Метаданные.Обработки.гф_ЗагрузкаПродажWildberries,,СтрокаСообщения);
	КонецПопытки;
	
	ПродолжитьВызов();
	
КонецПроцедуры // } #wortmann 

// #wortmann {
// #2.2 Интеграция с маркетплейсами
// Метод регламентного задания Загрузка продаж Cactus
// Галфинд (Уфимцев) Перминов 2022/11/15
&Вместо("ЗапроситьПродажиCactus")
Процедура гф_ЗапроситьПродажиCactus()
	
	Попытка
		ЗаписьЖурналаРегистрации("РегламентнаяЗагрузкаПродажCactus.СтартОбработки", УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_ЗагрузкаПродажКактус);
		ОбработкаЗапуска = Обработки.гф_ЗагрузкаПродажКактус.Создать();
		ОбработкаЗапуска.ВыполнитьОсновныеДействия();
		ЗаписьЖурналаРегистрации("РегламентнаяЗагрузкаПродажCactus.ЗавершениеОбработки", УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_ЗагрузкаПродажКактус);
	Исключение
		ТекстОшибки = ОписаниеОшибки();
		СтрокаСообщения = "Ошибка при запуске обработки: " + ТекстОшибки;
		ЗаписьЖурналаРегистрации("РегламентнаяЗагрузкаПродажCactus.ОшибкаПриЗапуске", УровеньЖурналаРегистрации.Ошибка, Метаданные.Обработки.гф_ЗагрузкаПродажКактус,,СтрокаСообщения);
	КонецПопытки;
	
	ПродолжитьВызов(); 
	
КонецПроцедуры

// #wortmann {
// Метод регламентного задания "Создание заказов на эмиссию кодов маркировки"
// Галфинд Sakovich 2022/11/30
&Вместо("СоздатьДокументыЗаказЭмиссииКодовМаркировки")
Процедура гф_СоздатьДокументыЗаказЭмиссииКодовМаркировки()
	
	Попытка
		ЗаписьЖурналаРегистрации("ЗапускОбработкиСозданияЭмиссииКМ.СтартОбработки", УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_ОбработкаЗаказовНаЭмиссиюКМ);
		ОбработкаЗапуска = Обработки.гф_ОбработкаЗаказовНаЭмиссиюКМ.Создать();
	Исключение
		ТекстОшибки = ОписаниеОшибки();
		СтрокаСообщения = "Ошибка при запуске обработки: " + ТекстОшибки;
		ЗаписьЖурналаРегистрации("ЗапускОбработкиСозданияЭмиссииКМ.ОшибкаПриЗапуске", УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_ОбработкаЗаказовНаЭмиссиюКМ,,СтрокаСообщения);
		Возврат;
	КонецПопытки;

	Попытка
		ЗаписьЖурналаРегистрации("РегламентноеСозданиеДокументовЭмиссииКМ.СозданиеДокументовЭмиссии", УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_ОбработкаЗаказовНаЭмиссиюКМ);
		РезультатСозданияЭмиссии = Неопределено;
		ОбработкаЗапуска.СоздатьДокументыЗаказНаЭмиссиюКодовМаркировки(РезультатСозданияЭмиссии);
		ЗаписьЖурналаРегистрации("РегламентноеСозданиеДокументовЭмиссииКМ.ЗавершениеСозданияДокументовЭмиссии", УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_ОбработкаЗаказовНаЭмиссиюКМ);
	Исключение
		ТекстОшибки = ОписаниеОшибки();
		СтрокаСообщения = "Ошибка при создании документов Эмиссии КМ: " + ТекстОшибки;
		ЗаписьЖурналаРегистрации("РегламентноеСозданиеДокументовЭмиссииКМ.ОшибкаПриСозданииДокументовЭмиссии", УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_ОбработкаЗаказовНаЭмиссиюКМ,,СтрокаСообщения);
	КонецПопытки;
	
	Попытка
		ЗаписьЖурналаРегистрации("РегламентноеСозданиеДокументовЭмиссииКМ.УстановкаСтатусовКМЭтитированы", УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_ОбработкаЗаказовНаЭмиссиюКМ);
		ОбработкаЗапуска.ПроверитьУстановитьСтатусыКМЭмитированы();
		ЗаписьЖурналаРегистрации("РегламентноеСозданиеДокументовЭмиссииКМ.ЗавершениеУстановкиСтатусовКМЭмитированы", УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_ОбработкаЗаказовНаЭмиссиюКМ);
	Исключение
		ТекстОшибки = ОписаниеОшибки();
		СтрокаСообщения = "Ошибка при обработке статусов ""КМ Эмитированы"": "  + ТекстОшибки;
		ЗаписьЖурналаРегистрации("РегламентноеСозданиеДокументовЭмиссииКМ.ОшибкаПриУстановкеСтатусовКМЭтитированы", УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_ОбработкаЗаказовНаЭмиссиюКМ,,СтрокаСообщения);
	КонецПопытки;

	
	ПродолжитьВызов();
КонецПроцедуры // } #wortmann

// #wortmann {
// #4.1 Создание документов движений КМ Внешних систем
// Метод регламентного задания "Создание документов движения кодов маркироваки внешних систем"
// Галфинд (Уфимцев) Перминов 2022/12/06
&Вместо("СозданиеДокументовДвиженийКМВнешнихСистем")
Процедура гф_СозданиеДокументовДвиженийКМВнешнихСистем()
	
	Попытка
		ЗаписьЖурналаРегистрации("РегламентноеСозданиеДокументовДвиженийКодовМаркировкиВнешнихСистем.СтартОбработки", УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_СозданиеДокументовДвиженийКМВнешнихСистем);
		ОбработкаЗапуска = Обработки.гф_СозданиеДокументовДвиженийКМВнешнихСистем.Создать();
		ОбработкаЗапуска.ВыполнитьОсновныеДействия();
		ЗаписьЖурналаРегистрации("РегламентноеСозданиеДокументовДвиженийКодовМаркировкиВнешнихСистем.ЗавершениеОбработки", УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_СозданиеДокументовДвиженийКМВнешнихСистем);
	Исключение
		ТекстОшибки = ОписаниеОшибки();
		СтрокаСообщения = "Ошибка при запуске обработки: " + ТекстОшибки;
		ЗаписьЖурналаРегистрации("РегламентноеСозданиеДокументовДвиженийКодовМаркировкиВнешнихСистем.ОшибкаПриЗапуске", УровеньЖурналаРегистрации.Ошибка, Метаданные.Обработки.гф_СозданиеДокументовДвиженийКМВнешнихСистем,,СтрокаСообщения);
	КонецПопытки;
	
	ПродолжитьВызов();
	
КонецПроцедуры// } #wortmann
