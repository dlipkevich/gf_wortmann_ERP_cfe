#Область ПрограммныйИнтерфейс

Процедура СозданиеДокументовВыводаКМ() Экспорт 
	
	ОтобранныеРТУ = ОтобратьРТУ();
	Если ОтобранныеРТУ.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаРТУсМВ();
	Запрос.УстановитьПараметр("Дата", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("МассивРТУ", ОтобранныеРТУ);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ЕстьМВ Тогда
			СоздатьДокументОтгрузкаТоваровИСМП(Выборка);
		Иначе
			СоздатьДокументВыводаИзОборотаИСМП(Выборка);
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры  

Функция ОтобратьРТУ()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ВЫРАЗИТЬ(ВыводИзОборотаИСМП.ДокументОснование КАК Документ.РеализацияТоваровУслуг) КАК Ссылка
		|ПОМЕСТИТЬ РТУ
		|ИЗ
		|	Документ.ВыводИзОборотаИСМП КАК ВыводИзОборотаИСМП
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(ОтгрузкаТоваровИСМП.ДокументОснование КАК Документ.РеализацияТоваровУслуг)
		|ИЗ
		|	Документ.ОтгрузкаТоваровИСМП КАК ОтгрузкаТоваровИСМП
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	РеализацияТоваровУслуг.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|ГДЕ
		|	НЕ РеализацияТоваровУслуг.ВариантВыбытияМаркируемойПродукции В 
		|	(ЗНАЧЕНИЕ(Перечисление.ВариантыВыбытияМаркируемойПродукции.ИспользованиеПокупателемДляСобственныхНужд),
		|	ЗНАЧЕНИЕ(Перечисление.ВариантыВыбытияМаркируемойПродукции.БезвозмезднаяПередачаПокупателю))
		|	И РеализацияТоваровУслуг.Контрагент.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ЮрЛицоНеРезидент)
		|	И НЕ РеализацияТоваровУслуг.Ссылка В
		|				(ВЫБРАТЬ
		|					РТУ.Ссылка
		|				ИЗ
		|					РТУ КАК РТУ)";
         	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Новый Массив;
	КонецЕсли;
	МассивРТУ = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Ссылка");
	Возврат МассивРТУ;
 	
КонецФункции 

Функция ТекстЗапросаРТУсМВ()
	
	Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	РеализацияТоваровУслуг.Ссылка КАК Ссылка,
		|	РеализацияТоваровУслуг.Контрагент КАК Контрагент,
		|	РеализацияТоваровУслуг.Контрагент.СтранаРегистрации КАК СтранаРегистрации
		|ПОМЕСТИТЬ РТУ
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|ГДЕ
		|	РеализацияТоваровУслуг.Ссылка В(&МассивРТУ)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СтраныМежоператорскогоВзаимодействия.Страна КАК Страна
		|ПОМЕСТИТЬ СтраныМВ
		|ИЗ
		|	РегистрСведений.гф_СтраныМежоператорскогоВзаимодействия КАК СтраныМежоператорскогоВзаимодействия
		|ГДЕ
		|	СтраныМежоператорскогоВзаимодействия.Дата <= &Дата
		|	И СтраныМежоператорскогоВзаимодействия.ОбменЦРПТ = ИСТИНА
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РТУ.Ссылка КАК Ссылка,
		|	ИСТИНА КАК ЕстьМВ
		|ПОМЕСТИТЬ РТУсМВ
		|ИЗ
		|	РТУ КАК РТУ,
		|	СтраныМВ КАК СтраныМВ
		|ГДЕ
		|	РТУ.СтранаРегистрации В
		|			(ВЫБРАТЬ
		|				СтраныМВ.Страна
		|			ИЗ
		|				СтраныМВ КАК СтраныМВ)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РТУ.Ссылка КАК Ссылка,
		|	РТУ.Контрагент КАК Контрагент,
		|	РТУ.Организация КАК Организация,
		|	РТУ.СтранаРегистрации КАК СтранаРегистрации,
		|	ЕСТЬNULL(РТУсМВ.ЕстьМВ, ЛОЖЬ) КАК ЕстьМВ
		|ИЗ
		|	РТУ КАК РТУ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РТУсМВ КАК РТУсМВ
		|		ПО РТУ.Ссылка = РТУсМВ.Ссылка";
	
	Возврат Текст;
	
КонецФункции

Процедура СоздатьДокументОтгрузкаТоваровИСМП(Выборка)
	
	ДокОтгрузка = Документы.ОтгрузкаТоваровИСМП.СоздатьДокумент();
	ДокОтгрузка.Дата = ТекущаяДатаСеанса();
	ДокОтгрузка.Заполнить(Выборка.Ссылка);
	ДокОтгрузка.Ответственный = ПолучитьОтветственногоИзСертификата(Выборка.Организация);
	ДокОтгрузка.GLNКонтрагента = ДокОтгрузка.Контрагент.гф_GLN_номер;
	Попытка
		ДокОтгрузка.Записать(РежимЗаписиДокумента.Проведение);
	Исключение
		Текст = ОписаниеОшибки();
		СтрокаСообщения = "Для РТУ: " + Выборка.Ссылка + " не удалось создать документ ""Отгрузка товаров ИС МП""."
		+ Символы.ПС + Текст;
		ЗаписьЖурналаРегистрации("РегламентированноеЗаданиеСозданиеДокументовВыводаКМдляРТУвЕАЭС",
		УровеньЖурналаРегистрации.Информация,
		Метаданные.РегламентныеЗадания.гф_СозданиеДокументовВыводаКМдляРТУвЕАЭС,
		,СтрокаСообщения);	
	КонецПопытки;
КонецПроцедуры 

Процедура СоздатьДокументВыводаИзОборотаИСМП(Выборка)
	
	ДокВыводИзОборота = Документы.ВыводИзОборотаИСМП.СоздатьДокумент();
	ДокВыводИзОборота.Дата = ТекущаяДатаСеанса();
	
	ДокВыводИзОборота.Заполнить(Выборка.Ссылка);
	ДокВыводИзОборота.Ответственный = ПолучитьОтветственногоИзСертификата(Выборка.Организация);
	ДокВыводИзОборота.Операция = Перечисления.ВидыОперацийИСМП.ВыводИзОборотаЭкспортВСтраныЕАЭС;
	Попытка
		ДокВыводИзОборота.Записать(РежимЗаписиДокумента.Проведение);
	Исключение
		Текст = ОписаниеОшибки();
		СтрокаСообщения = "Для РТУ: " + Выборка.Ссылка + " не удалось создать документ ""Вывод из оборота ИС МП""."
		+ Символы.ПС + Текст;
		ЗаписьЖурналаРегистрации("РегламентированноеЗаданиеСозданиеДокументовВыводаКМдляРТУвЕАЭС",
		УровеньЖурналаРегистрации.Информация,
		Метаданные.РегламентныеЗадания.гф_СозданиеДокументовВыводаКМдляРТУвЕАЭС,
		,СтрокаСообщения);
	КонецПопытки;
	
КонецПроцедуры

// Код взят из ОМ гф_ЭмиссияКодовМаркировкиВызовСервера проц. ЗаказНаЭмиссиюКодовМаркировкиОтветственныйЗаполнить
Функция ПолучитьОтветственногоИзСертификата(Организация)

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|СертификатыКлючейЭлектроннойПодписиИШифрования.Фамилия КАК Фамилия,
	|СертификатыКлючейЭлектроннойПодписиИШифрования.Имя КАК Имя,
	|СертификатыКлючейЭлектроннойПодписиИШифрования.Отчество КАК Отчество
	|ИЗ
	|Справочник.СертификатыКлючейЭлектроннойПодписиИШифрования КАК СертификатыКлючейЭлектроннойПодписиИШифрования
	|ГДЕ
	|НЕ СертификатыКлючейЭлектроннойПодписиИШифрования.ПометкаУдаления
	|И СертификатыКлючейЭлектроннойПодписиИШифрования.Организация = &Организация";
	Запрос.УстановитьПараметр("Организация", Организация);
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Пользователи.АвторизованныйПользователь();
	КонецЕсли;
	Выборка = Результат.Выбрать();
	Если НЕ Выборка.Следующий() Тогда
		Возврат Пользователи.АвторизованныйПользователь();
	КонецЕсли;
	Ответственный = Неопределено;
	// поиск Пользователя по ФИО
	ФИО = СокрЛП(Выборка.Фамилия) + " " + СокрЛП(Выборка.Имя) + " " + СокрЛП(Выборка.Отчество);
	Запрос.Текст = "ВЫБРАТЬ
	               |	Пользователи.Наименование КАК Наименование,
	               |	Пользователи.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.Пользователи КАК Пользователи
	               |ГДЕ
	               |	НЕ Пользователи.ПометкаУдаления";
	Результат = Запрос.Выполнить();
	ТЗВсеПользователи = Результат.Выгрузить();
	НайденнаяСтрока = ТЗВсеПользователи.Найти(ФИО, "Наименование");
	Если НайденнаяСтрока <> Неопределено Тогда
		Ответственный = НайденнаяСтрока.Ссылка;
	Иначе
		ФИО = СокрЛП(Выборка.Фамилия) + " " + СокрЛП(Выборка.Имя);
		НайденнаяСтрока = ТЗВсеПользователи.Найти(ФИО, "Наименование");
		Если НайденнаяСтрока <> Неопределено Тогда
			Ответственный = НайденнаяСтрока.Ссылка;
		Иначе
			ФИО = СокрЛП(Выборка.Фамилия);
			НайденнаяСтрока = ТЗВсеПользователи.Найти(ФИО, "Наименование");
			Если НайденнаяСтрока <> Неопределено Тогда
				Ответственный = НайденнаяСтрока.Ссылка;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Если Ответственный = Неопределено Тогда
		Возврат Пользователи.АвторизованныйПользователь();
	КонецЕсли;

	Возврат Ответственный;
КонецФункции

Процедура ПодготовитьДокументыВыводаКМКПередачеИСМП() Экспорт 
	
	МассивВыводаКМ = ПолучитьМассивСтруктурыДокументовВывода();
	
	Если МассивВыводаКМ.Количество() > 0 Тогда
		гф_МаркировкаТоваровИСМПВызовСервера.гф_ПодготовитьКПередачеИСМП(МассивВыводаКМ);
	КонецЕсли;
	
КонецПроцедуры 

Функция ПолучитьМассивСтруктурыДокументовВывода()
	
	МассивДокументов = Новый Массив;

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ОтгрузкаТоваровИСМП.Ссылка КАК Ссылка,
		|	Статусы.Статус КАК СтатусИСМП,
		|	Статусы.ДальнейшееДействие1 КАК ДальнейшееДействиеИСМП1,
		|	ОчередьСообщенийИСМП.Сообщение КАК Сообщение
		|ИЗ
		|	Документ.ОтгрузкаТоваровИСМП КАК ОтгрузкаТоваровИСМП
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовИСМП КАК Статусы
		|		ПО (Статусы.Документ = ОтгрузкаТоваровИСМП.Ссылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОчередьСообщенийИСМП КАК ОчередьСообщенийИСМП
		|		ПО (ОчередьСообщенийИСМП.Документ = ОтгрузкаТоваровИСМП.Ссылка)
		|ГДЕ
		|	ОтгрузкаТоваровИСМП.Проведен
		|	И Статусы.ДальнейшееДействие1 = ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюИСМП.ПередайтеДанные)
		|	И Статусы.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОбработкиОтгрузкиТоваровИСМП.Черновик)
		|	И ОчередьСообщенийИСМП.Сообщение ЕСТЬ NULL
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВыводИзОборотаИСМП.Ссылка,
		|	Статусы.Статус,
		|	Статусы.ДальнейшееДействие1,
		|	ОчередьСообщенийИСМП.Сообщение
		|ИЗ
		|	Документ.ВыводИзОборотаИСМП КАК ВыводИзОборотаИСМП
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовИСМП КАК Статусы
		|		ПО (Статусы.Документ = ВыводИзОборотаИСМП.Ссылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОчередьСообщенийИСМП КАК ОчередьСообщенийИСМП
		|		ПО (ОчередьСообщенийИСМП.Документ = ВыводИзОборотаИСМП.Ссылка)
		|ГДЕ
		|	ВыводИзОборотаИСМП.Проведен
		|	И Статусы.ДальнейшееДействие1 = ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюИСМП.ПередайтеДанные)
		|	И Статусы.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОбработкиВыводаИзОборотаИСМП.Черновик)
		|	И ОчередьСообщенийИСМП.Сообщение ЕСТЬ NULL";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		Если МассивДокументов.Найти(Выборка.Ссылка) = Неопределено Тогда
			МассивДокументов.Добавить(Выборка.Ссылка);
		КонецЕсли;
	КонецЦикла;	
	Возврат МассивДокументов;
КонецФункции

#КонецОбласти