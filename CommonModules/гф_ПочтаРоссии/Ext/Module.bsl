#Область ПрограммныйИнтерфейс

Функция ПолучитьДанныеОтслеживания(УчетнаяЗапись, ТрекНомер, Ошибки = Неопределено) Экспорт 
	
	Если Ошибки = Неопределено Тогда
		
		Ошибки = Новый Массив;
		
	КонецЕсли;	
	
	Логин = УчетнаяЗапись.Логин;
	
	УстановитьПривилегированныйРежим(Истина);
	
   	Пароль = ОбщегоНазначения.ПрочитатьДанныеИзБезопасногоХранилища(УчетнаяЗапись, "Пароль");
	
	УстановитьПривилегированныйРежим(Ложь);
	
	ОтветОтСервера = ПолучитьДанныеОтслеживанияСлужебный(Логин, Пароль, ТрекНомер, Ошибки); 
	
	Возврат ОтветОтСервера;
	
КонецФункции	

Функция ПолучитьДеталиОперацииОтслеживания(Знач КодОперации, Знач КодАтрибута = 0) Экспорт  

	Результат = Новый Структура("Имя, Атрибут, КонечнаяОперация", "", "", Ложь);
	
	СоответствиеКодовОпераций = гф_ПочтаРоссииПовтИсп.ПолучитьСоответствиеКодовОпераций();     
	
	Операция = СоответствиеКодовОпераций[гф_ПочтаРоссии.СтрокаВЧисло(КодОперации)];     
	
	Если ЗначениеЗаполнено(Операция) Тогда

		Результат.Имя = Операция.Имя;   
		
		СоответствиеАтрибутов = Операция.СоответствиеАтрибутов;  
		
		Атрибут = СоответствиеАтрибутов[гф_ПочтаРоссии.СтрокаВЧисло(КодАтрибута)];
		
		Если ЗначениеЗаполнено(Атрибут) Тогда
			
			Результат.Атрибут = Атрибут.Атрибут;      
			Результат.КонечнаяОперация = Атрибут.КонечнаяОперация;
			
		КонецЕсли;	
		
	КонецЕсли;	
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ПолучитьДанныеОтслеживанияСлужебный(Логин, Пароль, ТрекНомер, Ошибки = Неопределено) Экспорт
	
	Если Ошибки = Неопределено Тогда
		
		Ошибки = Новый Массив;
		
	КонецЕсли;	
	
	URI						= "http://russianpost.org/operationhistory";
	НаименованиеВебСервиса	= "OperationHistory12";
	НаименованиеПорта		= "OperationHistory12Port";     
	ТипЗначенияXDTO			= "http://russianpost.org/operationhistory/data";
	WSСсылка				= WSСсылки.гф_ПочтаРоссииЕдиничныйДоступКТрекеру;
	
	Соединение = Новый ЗащищенноеСоединениеOpenSSL;
	
	Попытка
		
		Прокси = WSСсылка.СоздатьWSПрокси(URI, НаименованиеВебСервиса, НаименованиеПорта, , , Соединение);
		
	Исключение   
		
		Ошибки.Добавить(ОписаниеОшибки());
		
		Возврат Неопределено;
		
	КонецПопытки;
	
	Фабрика = Прокси.ФабрикаXDTO;        
	
	ЗаголовокАвторизации = Фабрика.Создать(ТипЗначенияXDTO, "AuthorizationHeader");
	
	ЗаголовокАвторизации.login		= Логин;
	ЗаголовокАвторизации.password	= Пароль;
	
	ЗапросИстории = Фабрика.Создать(ТипЗначенияXDTO, "OperationHistoryRequest");
	
	ЗапросИстории.Barcode		= ТрекНомер;
	ЗапросИстории.MessageType	= 0;
	ЗапросИстории.Language		= "RUS";
	
	Пакеты = Фабрика.Пакеты.Получить(URI);    
	
	ПакетЗапроса = Пакеты.Получить("getOperationHistory");
	
	Запрос = Фабрика.Создать(ПакетЗапроса);
	
	Запрос.OperationHistoryRequest	= ЗапросИстории;
	Запрос.AuthorizationHeader		= ЗаголовокАвторизации;
	
	Попытка
		
		ОтветОтСервера = Прокси.getOperationHistory(Запрос);  
		
	Исключение   
		
		Ошибки.Добавить(ОписаниеОшибки());
		
		Возврат Неопределено;
		
	КонецПопытки;
	
	Возврат ОтветОтСервера;
	
КонецФункции	

Функция ОтветОтТрекераСтруктураОперация() Экспорт

	Результат = Новый Структура(
	"Дата,
	|ID,
	|Имя,
	|IDАтрибута,
	|Атрибут,
	|КонечнаяОперация");	
	
	Возврат Результат;
	
КонецФункции

Функция СтрокаВЧисло(Значение) Экспорт
	
	Если ТипЗнч(Значение) = Тип("Число") Тогда
		
		Результат = Значение;
		
	ИначеЕсли ОбщегоНазначенияКлиентСервер.ЭтоЧисло(Значение) Тогда
		
		Результат = Число(Значение);
		
	Иначе
		
		Результат = 0;
		
	КонецЕсли;	 
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти
