#Область ПрограммныйИнтерфейс

Функция ПолучитьДанныеОтслеживания(УчетнаяЗапись, ТрекНомер, Ошибки = Неопределено) Экспорт 
	
	Если Ошибки = Неопределено Тогда
		
		Ошибки = Новый Массив;
		
	КонецЕсли;	
	
	Логин = УчетнаяЗапись.Логин;
	
	УстановитьПривилегированныйРежим(Истина);
	
   	Пароль = ОбщегоНазначения.ПрочитатьДанныеИзБезопасногоХранилища(УчетнаяЗапись, "Пароль");
	
	УстановитьПривилегированныйРежим(Ложь);
	
	ОтветОтСервера = ПолучитьДанныеОтслеживанияСлужебный(Логин, Пароль, ТрекНомер, Ошибки); 
	
	Возврат ОтветОтСервера;
	
КонецФункции	

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ПолучитьДанныеОтслеживанияСлужебный(Логин, Пароль, ТрекНомер, Ошибки = Неопределено) Экспорт
	
	Если Ошибки = Неопределено Тогда
		
		Ошибки = Новый Массив;
		
	КонецЕсли;	
	
	URI						= "http://russianpost.org/operationhistory";
	НаименованиеВебСервиса	= "OperationHistory12";
	НаименованиеПорта		= "OperationHistory12Port";     
	ТипЗначенияXDTO			= "http://russianpost.org/operationhistory/data";
	WSСсылка				= WSСсылки.гф_ПочтаРоссииЕдиничныйДоступКТрекеру;
	
	Соединение = Новый ЗащищенноеСоединениеOpenSSL;
	
	Попытка
		
		Прокси = WSСсылка.СоздатьWSПрокси(URI, НаименованиеВебСервиса, НаименованиеПорта, , , Соединение);
		
	Исключение   
		
		Ошибки.Добавить(ОписаниеОшибки());
		
		Возврат Неопределено;
		
	КонецПопытки;
	
	Фабрика = Прокси.ФабрикаXDTO;        
	
	ЗаголовокАвторизации = Фабрика.Создать(ТипЗначенияXDTO, "AuthorizationHeader");
	
	ЗаголовокАвторизации.login		= Логин;
	ЗаголовокАвторизации.password	= Пароль;
	
	ЗапросИстории = Фабрика.Создать(ТипЗначенияXDTO, "OperationHistoryRequest");
	
	ЗапросИстории.Barcode		= ТрекНомер;
	ЗапросИстории.MessageType	= 0;
	ЗапросИстории.Language		= "RUS";
	
	Пакеты = Фабрика.Пакеты.Получить(URI);    
	
	ПакетЗапроса = Пакеты.Получить("getOperationHistory");
	
	Запрос = Фабрика.Создать(ПакетЗапроса);
	
	Запрос.OperationHistoryRequest	= ЗапросИстории;
	Запрос.AuthorizationHeader		= ЗаголовокАвторизации;
	
	Попытка
		
		ОтветОтСервера = Прокси.getOperationHistory(Запрос);  
		
	Исключение   
		
		Ошибки.Добавить(ОписаниеОшибки());
		
		Возврат Неопределено;
		
	КонецПопытки;
	
	Возврат ОтветОтСервера;
	
КонецФункции	

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти
