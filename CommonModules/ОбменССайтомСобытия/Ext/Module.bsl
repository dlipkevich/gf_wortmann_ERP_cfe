
// Запускает процедуру обмена с сайтом.
// Параметры
//  УзелОбмена - Ссылка на план обмена с сайтом.
//  РежимЗапускаОбмена - строка - поясняющая был ли обмен запущен интерактивно
//						или через регл. задание.
//  ВыгружатьТолькоИзменения - Булево - определяет будут выгружаться все данные
// 						или только зарегистрированные.
&Вместо ("ВыполнитьОбмен")
Процедура B2B_ВыполнитьОбмен(УзелОбмена, РежимЗапускаОбмена, ВыгружатьТолькоИзменения = Истина, ПараметрыОбновления = Неопределено) Экспорт
	
	Отказ = Ложь;
	ОписаниеОшибки = "";
	
	// Перед обменом необходимо убедиться что есть доступ на сайт или к каталогу.
	ТекстСообщения = "";
	СвойстваНастройки = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(УзелОбмена, 
		"ВыгружатьНаСайт, ФайлЗагрузки, КаталогВыгрузки, ОбменТоварами, ОбменЗаказами,
		|РазмерПорции, КоличествоПовторений, ВладелецКаталога, ОбменЗаказами, ОбменТоварами, ВидОтбораПоНоменклатуре,
		|ВыгружатьКартинки, ВыгружатьТовары, ВыгружатьЦеныОстатки, ВыгружатьОбновленияЦенИОстатков, ВыгружатьФайлыБезОжиданияПодтвержденияИмпортаСервером,
		|ВыполнятьОбменБезИдентификатораСессии, ОграничитьКаталогДоступнымиПредложениями");
	Если СвойстваНастройки.ВыгружатьНаСайт Тогда
		
		Если Не УзелОбмена.B2B_ОбменJSON Тогда
			ДоступноПодключениеКСайту = Ложь;
			
			ПроверитьПодключениеКСайту(ДоступноПодключениеКСайту, УзелОбмена, ТекстСообщения);
			Если Не ДоступноПодключениеКСайту Тогда
				
				ЗаписьЖурналаРегистрации(НСтр("ru = 'Обмен с сайтами';
												|en = 'Exchange with sites'", ОбщегоНазначения.КодОсновногоЯзыка()),
					УровеньЖурналаРегистрации.Предупреждение,
					УзелОбмена.Метаданные(),
					УзелОбмена,
					ТекстСообщения + " " + НСтр("ru = 'Обмен отменен.';
												|en = 'The exchange has been canceled.'"));
				
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
				
				Возврат;
				
			КонецЕсли;
		КонецЕсли;
		
	Иначе
		
		Отказ = Ложь;
		Если СвойстваНастройки.ОбменТоварами Тогда
			ТекстСообщения = "";

			КаталогВыгрузки = СвойстваНастройки.КаталогВыгрузки;
			КаталогДоступен = Ложь;
			ПроверитьДоступностьКаталогаВыгрузки(КаталогДоступен, КаталогВыгрузки, ТекстСообщения);
			Если Не КаталогДоступен Тогда
				
				ЗаписьЖурналаРегистрации(НСтр("ru = 'Обмен с сайтами';
												|en = 'Exchange with sites'", ОбщегоНазначения.КодОсновногоЯзыка()),
				УровеньЖурналаРегистрации.Предупреждение,
				УзелОбмена.Метаданные(),
				УзелОбмена,
				ТекстСообщения + " " + НСтр("ru = 'Обмен отменен.';
											|en = 'The exchange has been canceled.'"));
				
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
				
				Отказ = Истина;
				
			КонецЕсли;
		КонецЕсли;
		
		Если СвойстваНастройки.ОбменЗаказами Тогда
			ТекстСообщения = "";

			ФайлЗагрузки = СвойстваНастройки.ФайлЗагрузки;
			ФайлЗагрузкиДоступен = Истина;
			ПроверитьДоступностьФайлаЗагрузки(ФайлЗагрузкиДоступен, ФайлЗагрузки, ТекстСообщения);
			Если Не ФайлЗагрузкиДоступен Тогда
				
				ЗаписьЖурналаРегистрации(НСтр("ru = 'Обмен с сайтами';
												|en = 'Exchange with sites'", ОбщегоНазначения.КодОсновногоЯзыка()),
					УровеньЖурналаРегистрации.Предупреждение,
					УзелОбмена.Метаданные(),
					УзелОбмена,
					ТекстСообщения + " " + НСтр("ru = 'Обмен отменен.';
												|en = 'The exchange has been canceled.'"));
				
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
				
				Отказ = Истина;
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	ТаблицаИнформации = РегистрыСведений.СостоянияОбменовССайтом.СоздатьНаборЗаписей().Выгрузить();
	ТаблицаИнформации.Колонки.Добавить("Описание", Новый ОписаниеТипов("Строка"));
	
	НастройкиПодключения = Новый Структура;
	ЗаполнитьНастройкиПодключения(НастройкиПодключения, УзелОбмена);
	
	РазрешенныеТипыКартинок = Новый Массив;
	РазрешенныеТипыКартинок.Добавить("gif");
	РазрешенныеТипыКартинок.Добавить("jpg");
	РазрешенныеТипыКартинок.Добавить("jpeg");
	РазрешенныеТипыКартинок.Добавить("png");

	
	ПараметрыОбмена = Новый Структура;
	ПараметрыОбмена.Вставить("УзелОбмена", УзелОбмена);
	ПараметрыОбмена.Вставить("НастройкиПодключения", НастройкиПодключения);
	
	Если ВыгружатьТолькоИзменения Тогда
		ВыгружатьИзменения = УзелОбмена.ВыгружатьИзменения;
	Иначе
		ВыгружатьИзменения = Ложь;
	КонецЕсли;
	ПараметрыОбмена.Вставить("ВыгружатьИзменения", ВыгружатьИзменения);
	
	ПараметрыОбмена.Вставить("ВидОтбораПоНоменклатуре", СвойстваНастройки.ВидОтбораПоНоменклатуре);
	ПараметрыОбмена.Вставить("РазмерПорции", СвойстваНастройки.РазмерПорции);
	ПараметрыОбмена.Вставить("КоличествоПовторов",СвойстваНастройки.КоличествоПовторений);
	ПараметрыОбмена.Вставить("ВладелецКаталога", СвойстваНастройки.ВладелецКаталога);
	ПараметрыОбмена.Вставить("ОбменЗаказами", СвойстваНастройки.ОбменЗаказами);
	ПараметрыОбмена.Вставить("ОбменТоварами", СвойстваНастройки.ОбменТоварами);
	
	ПараметрыОбмена.Вставить("ВыгружатьТовары", СвойстваНастройки.ВыгружатьТовары);
	ПараметрыОбмена.Вставить("ВыгружатьЦеныОстатки", СвойстваНастройки.ВыгружатьЦеныОстатки);
	ПараметрыОбмена.Вставить("ВыгружатьОбновленияЦенИОстатков", СвойстваНастройки.ВыгружатьОбновленияЦенИОстатков);
	
	ПараметрыОбмена.Вставить("КаталогВыгрузки", СвойстваНастройки.КаталогВыгрузки);
	ПараметрыОбмена.Вставить("ВыгружатьНаСайт", СвойстваНастройки.ВыгружатьНаСайт);
	ПараметрыОбмена.Вставить("ВыгружатьКартинки", СвойстваНастройки.ВыгружатьКартинки);
	ПараметрыОбмена.Вставить("ВыгружатьФайлыБезОжиданияПодтвержденияИмпортаСервером", СвойстваНастройки.ВыгружатьФайлыБезОжиданияПодтвержденияИмпортаСервером);
	ПараметрыОбмена.Вставить("ИспользоватьИдентификаторСессии", Не СвойстваНастройки.ВыполнятьОбменБезИдентификатораСессии);
	ПараметрыОбмена.Вставить("ОграничитьКаталогДоступнымиПредложениями", СвойстваНастройки.ОграничитьКаталогДоступнымиПредложениями);

	ПараметрыОбмена.Вставить("РазрешенныеТипыКартинок",РазрешенныеТипыКартинок);
	ПараметрыОбмена.Вставить("НаименованиеНалога", НСтр("ru = 'НДС';
														|en = 'VAT'"));
	
	ИспользоватьХарактеристики = Истина;
	
	ОбменССайтомПереопределяемый.УстановитьПризнакИспользоватьХарактеристики(ИспользоватьХарактеристики);
	ПараметрыОбмена.Вставить("ИспользоватьХарактеристики", ИспользоватьХарактеристики);
	
	ПараметрыОбмена.Вставить("РежимЗапускаОбмена", РежимЗапускаОбмена);
	
	ПрикладныеПараметры = ПараметрыПрикладногоРешения(УзелОбмена);
	
	ПараметрыОбмена.Вставить("ПрикладныеПараметры", ПрикладныеПараметры);
	
	ФайлЗагрузки = УзелОбмена.ФайлЗагрузки;
	ФайлЗагрузки = ОбменССайтом.ПодготовитьПутьДляПлатформы(ОбменССайтом.ПлатформаWindows(), ФайлЗагрузки);
	
	ПараметрыОбмена.Вставить("ФайлЗагрузки", ФайлЗагрузки);
	
	ПараметрыОбмена.Вставить("МассивКаталогов", Новый Массив);
	ПараметрыОбмена.Вставить("ДанныеОЗаказах", Неопределено);
	
	СтруктураИзменений = Новый Структура;
	СтруктураИзменений.Вставить("Заказы", Новый Массив);
	Если ВыгружатьТолькоИзменения Тогда
		СтруктураИзменений.Вставить("Товары", Новый Массив);
	КонецЕсли;
	ПолучитьИзмененияУзла(СтруктураИзменений, УзелОбмена);
	
	ПараметрыОбмена.Вставить("СтруктураИзменений",СтруктураИзменений);
	
	ОбменССайтомПереопределяемый.ИзменитьПараметрыОбмена(ПараметрыОбмена, УзелОбмена);
	
	РезультатОбмена = Новый Структура;
	
	ОбменССайтом.ВыполнитьОбменССайтом(ПараметрыОбмена, РезультатОбмена, ТаблицаИнформации);
	
	Ошибка = (Не РезультатОбмена.ТоварыВыгружены) Или (Не РезультатОбмена.ВыполненОбменЗаказами);
	
	Если ПараметрыОбмена.Свойство("СтруктураСтатистики")
		И ПараметрыОбмена.СтруктураСтатистики.Загружено.Количество() > 0 Тогда
		ИмяДокументаЗаказ = ОбменССайтомПовтИсп.ИмяПрикладногоДокумента("ЗаказПокупателя");
		Если Не ИмяДокументаЗаказ = Неопределено Тогда
			ПараметрыОбновления.Обновить = Истина;
			ПараметрыОбновления.ИмяДокументаЗаказ = ИмяДокументаЗаказ;
		КонецЕсли;
	КонецЕсли;
	
	ВыполнитьДействияПриЗавершенииОбмена(ПараметрыОбмена, ТаблицаИнформации, Ошибка);
	
КонецПроцедуры

// Выборочно регистрирует изменения для узлов плана обмена с сайтом.
//
// Параметры:
//	Объект		- Объект метаданных - источник события
//	Замещение - режим записи набора записей регистра.
//
&Вместо ("ЗарегистрироватьИзменения")
Процедура B2B_ЗарегистрироватьИзменения(Объект, Замещение = Ложь)
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьОбменССайтом") = Ложь
			Или Объект.ДополнительныеСвойства.Свойство("ОтключитьМеханизмРегистрацииОбъектов") Тогда 
			
		Возврат;
		
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТипОбъекта = ТипЗнч(Объект);
	МассивУзловТовары = ОбменССайтомПовтИсп.МассивУзловДляРегистрации(Истина);    
	
	//отфильтруем по указанному порталу 
	Если ТипЗнч(Объект) = Тип("СправочникОбъект.Номенклатура") Тогда
		сч = МассивУзловТовары.Количество()-1;
		Пока сч >= 0 Цикл 
			
			B2B_Портал = Объект.B2B_Портал;
			
			Если B2B_Портал.Пустая() Тогда
				регсв = новый Запрос;
				регсв.Текст = "ВЫБРАТЬ
				              |	ДополнительныеСведения.Значение КАК Значение
				              |ИЗ
				              |	РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
				              |ГДЕ
				              |	ДополнительныеСведения.Объект = &Объект
				              |	И ДополнительныеСведения.Свойство = &Свойство";
				
				регсв.УстановитьПараметр("Объект",Объект.Ссылка);
				регсв.УстановитьПараметр("Свойство",ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию("B2B портал"));
				рез = регсв.Выполнить().Выбрать();
				Если рез.Следующий() тогда
					B2B_Портал = рез.Значение;
				КонецЕсли;
			КонецЕсли;	
			
			Если МассивУзловТовары[сч].B2B_Портал <> B2B_Портал Тогда
				МассивУзловТовары.Удалить(сч);
			КонецЕсли;
			сч = сч - 1;
		КонецЦикла;   
		Если МассивУзловТовары.Количество() = 0 Тогда
			Возврат;
		КонецЕсли;                                                  
	КонецЕсли;
	//
	
	МассивУзловЗаказы = ОбменССайтомПовтИсп.МассивУзловДляРегистрации(,Истина);
	ОбменССайтомПереопределяемый.ЗарегистрироватьИзмененияВУзлах(Объект, МассивУзловТовары, МассивУзловЗаказы, Замещение);
	
КонецПроцедуры