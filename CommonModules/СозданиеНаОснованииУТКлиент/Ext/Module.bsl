
&ИзменениеИКонтроль("СоздатьСчетНаОплату")
Процедура гф_СоздатьСчетНаОплату(МассивСсылок, ПараметрыВыполнения)
	ПараметрыВыполненияКоманды = Новый Структура("Источник,Уникальность,Окно,НавигационнаяСсылка");
	ЗаполнитьЗначенияСвойств(ПараметрыВыполненияКоманды, ПараметрыВыполнения.ОписаниеКоманды.ДополнительныеПараметры);

	Если НЕ ПараметрыВыполнения.ОписаниеКоманды.МножественныйВыбор Тогда
		ПараметрКоманды = МассивСсылок;
	Иначе
		ПараметрКоманды = МассивСсылок[0];
	КонецЕсли;

	ДокументОснование = ПродажиВызовСервера.ПолучитьОснованиеДляСчетаНаОплату(ПараметрКоманды);
	ПараметрыФормы = Новый Структура("ДокументОснование", ДокументОснование);
    #Вставка
	// ++ Галфинд СадомцевСА 12.02.2024
	// e1cib/data/Задача.ЗадачаИсполнителя?ref=8eabb083fed1320811eec96fbdb98554
	Если ТипЗнч(ПараметрКоманды) = Тип("ДокументСсылка.ЗаказКлиента") Тогда
		гф_СчетНаОплатуВызовСервера.ПараметрыФормыДобавитьТЧТоварыВКоробах(ПараметрыФормы, ПараметрКоманды);
	КонецЕсли;
	// -- Галфинд СадомцевСА 12.02.2024
	#КонецВставки

	ОткрытьФорму(
	"Документ.СчетНаОплатуКлиенту.Форма.ФормаСозданияСчетовНаОплату",
	ПараметрыФормы,
	ПараметрыВыполненияКоманды.Источник,
	ПараметрыВыполненияКоманды.Уникальность,
	ПараметрыВыполненияКоманды.Окно);

КонецПроцедуры

&ИзменениеИКонтроль("ВнутреннееПотреблениеСоздатьНаОснованииЗаказа")
Процедура гф_ВнутреннееПотреблениеСоздатьНаОснованииЗаказа(МассивСсылок, ПараметрыВыполнения)

	// &ЗамерПроизводительности
	ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина,
	"ОбщийМодуль.СозданиеНаОснованииУТКлиент.ВнутреннееПотреблениеСоздатьНаОснованииЗаказа");

	ПараметрыВыполненияКоманды = Новый Структура("Источник,Уникальность,Окно,НавигационнаяСсылка");
	ЗаполнитьЗначенияСвойств(ПараметрыВыполненияКоманды, ПараметрыВыполнения.ОписаниеКоманды.ДополнительныеПараметры);

	ПараметрыОткрытия =
	СозданиеНаОснованииУТВызовСервера.ПараметрыОткрытияФормыНакладнойНаОснованииЗаказа(
	МассивСсылок,
	"ВнутреннееПотребление");
	Если ПараметрыОткрытия.ПараметрыФормы.Свойство("Основание") Тогда
		ПараметрыОткрытия.ПараметрыФормы.Основание.Вставить("ОтборПоСкладу", Ложь);
	КонецЕсли;
	#Вставка
	// ++ Галфинд_ДомнышеваКР_04_04_2024
	// e1cib/data/Задача.ЗадачаИсполнителя?ref=8eabb083fed1320811eed9ff2151e5b0
	Если ПараметрыОткрытия.ПараметрыФормы.Свойство("Основание") 
		И ПараметрыОткрытия.ПараметрыФормы.Основание.Свойство("РеквизитыШапки") Тогда
		Шапка = ПараметрыОткрытия.ПараметрыФормы.Основание.РеквизитыШапки;
		Шапка.Вставить("гф_Контрагент", ПараметрыВыполнения.Источник.гф_Контрагент);
		Шапка.Вставить("гф_Партнер", ПараметрыВыполнения.Источник.гф_Партнер);
		Шапка.Вставить("гф_АдресДоставки", ПараметрыВыполнения.Источник.гф_АдресДоставки);
	КонецЕсли;
	// -- Галфинд_ДомнышеваКР_04_04_2024
	#КонецВставки

	ОткрытьФорму(
	ПараметрыОткрытия.ИмяФормы,
	ПараметрыОткрытия.ПараметрыФормы,
	ПараметрыВыполненияКоманды.Источник,
	ПараметрыВыполненияКоманды.Уникальность,
	ПараметрыВыполненияКоманды.Окно,
	ПараметрыВыполненияКоманды.НавигационнаяСсылка,,
	ПараметрыОткрытия.РежимОткрытияОкнаФормы);

КонецПроцедуры

Процедура гф_СоздатьСчетНаОплатуРТУсТабЧ(МассивСсылок, ПараметрыВыполнения) Экспорт
	// ++ Галфинд_ДомнышеваКР_02_04_2024
	Если НЕ ПараметрыВыполнения.ОписаниеКоманды.МножественныйВыбор Тогда
		ПараметрКоманды = МассивСсылок;
	Иначе
		ПараметрКоманды = МассивСсылок[0];
	КонецЕсли;
	
	ПараметрыЗаполнения = Новый Структура;
	ПараметрыЗаполнения.Вставить("ДокументОснование", ПараметрКоманды);
	ПараметрыЗаполнения.Вставить("СТЧ", Истина);
    ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", ПараметрыЗаполнения);
    ПараметрыФормы.Вставить("ЗначенияЗаполнения", ПараметрыЗаполнения);
	гф_СчетНаОплатуВызовСервера.ПараметрыФормыДобавитьТЧТоварыВКоробахРТУ(ПараметрыФормы, ПараметрКоманды);
	
	ОткрытьФорму(
	"Документ.СчетНаОплатуКлиенту.Форма.ФормаДокумента",
	ПараметрыФормы);
	// -- Галфинд_ДомнышеваКР_02_04_2024
КонецПроцедуры