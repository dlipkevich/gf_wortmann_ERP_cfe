Функция гф_СоздатьМаркировкаТоваровИСМП(СтрокаТЗ, ДополнительныеПараметры = Неопределено) Экспорт
	
	СтруктураВозврата = Новый Структура("ОписаниеОшибки,"
	+ "МаркировкаТоваровИСМП,"
	+ "Организация,"
	+ "ЕстьОшибкиЗаполнения,"
	+ "Статус,"
	+ "ДальнейшееДействие,"
	+ "ЗаказКодовВозможен");
	
	Если Не ЗначениеЗаполнено(СтрокаТЗ.ДокументПоступления) Тогда
		СтруктураВозврата["ОписаниеОшибки"] = "Не заполнено основание для создания ""Маркировки товаров ИС МП""";
		Возврат СтруктураВозврата;
	КонецЕсли;
	
	Если ТипЗнч(СтрокаТЗ.ДокументПоступления) = Тип("ДокументСсылка.ПриобретениеТоваровУслуг") Тогда
		
		МаркировкаТоваровИСМП = Документы.МаркировкаТоваровИСМП.СоздатьДокумент();
		МаркировкаТоваровИСМП.Заполнить(СтрокаТЗ.ДокументПоступления);
		// заполняем тч ШтрихкодыУпаковок
		Запрос = Новый Запрос;
		Запрос.Текст = Документы.ПриобретениеТоваровУслуг.гф_ПолучитьТекстЗапросаКодыМаркировки();
		Запрос.УстановитьПараметр("Ссылка", СтрокаТЗ.ДокументПоступления);
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		Запрос.Текст = "ВЫБРАТЬ
		|	ШтрихкодыУпаковокТоваров.Ссылка КАК ШтрихкодУпаковки
		|ИЗ
		|	Справочник.ШтрихкодыУпаковокТоваров КАК ШтрихкодыУпаковокТоваров
		|ГДЕ
		|	ШтрихкодыУпаковокТоваров.ЗначениеШтрихкода = &ЗначениеШтрихкода";
		Пока Выборка.Следующий() Цикл
			Запрос.УстановитьПараметр("ЗначениеШтрихкода", СокрЛП(Выборка.КМ));
			РезультатШК = Запрос.Выполнить();
			ВыборкаШК = РезультатШК.Выбрать();
			Если ВыборкаШК.Следующий() Тогда
				нс = МаркировкаТоваровИСМП.ШтрихкодыУпаковок.Добавить();
				нс.ШтрихкодУпаковки = ВыборкаШК.ШтрихкодУпаковки;
			КонецЕсли;
		КонецЦикла;
		МаркировкаТоваровИСМП.Дата = ТекущаяДатаСеанса();
		МаркировкаТоваровИСМП.Операция = Перечисления.ВидыОперацийИСМП.ВводВОборотИмпортСФТС;
		МаркировкаТоваровИСМП.Комментарий = "Создан автоматически регл. заданием Маркировка товаров (ввод в оборот) " + ТекущаяДатаСеанса();
		МаркировкаТоваровИСМП.РегистрационныйНомерДекларации = СокрЛП(СтрокаТЗ.ГТД.НомерДекларации);
		МаркировкаТоваровИСМП.ДатаДекларации = гф_ПолучитьДатуИзНомераДекларации(МаркировкаТоваровИСМП.РегистрационныйНомерДекларации);
		РезультатПроверки = МаркировкаТоваровИСМП.ПроверитьЗаполнение();
		Если РезультатПроверки Тогда
			РежимЗаписи = РежимЗаписиДокумента.Проведение;
			СтруктураВозврата["ЕстьОшибкиЗаполнения"] = Ложь;
		Иначе
			РежимЗаписи = РежимЗаписиДокумента.Запись;
			СтруктураВозврата["ЕстьОшибкиЗаполнения"] = Истина;
			МаркировкаТоваровИСМП.Комментарий = МаркировкаТоваровИСМП.Комментарий + Символы.ПС + "Есть ошибки при проверке документа (НЕ проведен)!";
		КонецЕсли;
		Попытка
			МаркировкаТоваровИСМП.Записать(РежимЗаписи);
			СтруктураВозврата["МаркировкаТоваровИСМП"] = МаркировкаТоваровИСМП.Ссылка;
		Исключение
			СтруктураВозврата["ОписаниеОшибки"] = "Ошибка при записи документа:" + ОписаниеОшибки();
		КонецПопытки;
	КонецЕсли;
	
	Возврат СтруктураВозврата;
	
КонецФункции

//Параметры:
// МассивВходящихДанных - массив ссылок Документ.МаркировкаТоваровИСМП
Процедура гф_ПодготовитьКПередачеИСМП(МассивВходящихДанных) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьАвтоматическуюОтправкуПолучениеДанныхИСМП") Тогда
		Возврат;
	КонецЕсли;
	
	ВходящиеДанные = Новый Массив;
	Для Каждого Эл Из МассивВходящихДанных Цикл
		ПараметрыОбработкиДокументов = ИнтеграцияИСМПСлужебныйКлиентСервер.ПараметрыОбработкиДокументов();
		ПараметрыОбработкиДокументов.Ссылка = Эл;
		Организация = ОбщегоНазначенияУТВызовСервера.ЗначениеРеквизитаОбъекта(Эл, "Организация");
		ПараметрыОбработкиДокументов.Организация = Организация;
		ПараметрыОбработкиДокументов.ДальнейшееДействие = ПредопределенноеЗначение(
		"Перечисление.ДальнейшиеДействияПоВзаимодействиюИСМП.ПередайтеДанные");
		
		ВходящиеДанные.Добавить(ПараметрыОбработкиДокументов);
	КонецЦикла;
	РезультатОбмена = ИнтеграцияИСМПВызовСервера.ПодготовитьКПередаче(ВходящиеДанные);
	
	Если РезультатОбмена.Свойство("ПараметрыОбмена") Тогда
		СвойстваПодписи = гф_ЭлектроннаяПодписьВызовСервера.ПолучитьЗначениеКонстанты();
		Если ТипЗнч(СвойстваПодписи) <> Тип("Структура") Тогда
			Возврат;
		КонецЕсли;
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ *
		|ИЗ
		|	РегистрСведений.ОчередьСообщенийИСМП КАК ОчередьСообщенийИСМП
		|ГДЕ
		|	ОчередьСообщенийИСМП.Документ = &Документ";
		Для Каждого КлючИЗначение Из РезультатОбмена.ПараметрыОбмена.СообщенияКПодписанию Цикл
			Для Каждого Сообщение Из КлючИЗначение.Значение Цикл
				Запрос.УстановитьПараметр("Документ", Сообщение.Документ);
				Результат = Запрос.Выполнить();
				Выборка = Результат.Выбрать();
				Если Выборка.Следующий() Тогда
					РеквизитыИсходящегоСообщения = Выборка.РеквизитыИсходящегоСообщения.Получить();
					ЗаполнитьЗначенияСвойств(РеквизитыИсходящегоСообщения, Сообщение);
					РеквизитыИсходящегоСообщения.Вставить("СвойстваПодписи", СвойстваПодписи);
					НаборЗаписей = РегистрыСведений.ОчередьСообщенийИСМП.СоздатьНаборЗаписей();
					НаборЗаписей.Отбор.Сообщение.Установить(Сообщение.Идентификатор);
					Запись = НаборЗаписей.Добавить();
					ЗаполнитьЗначенияСвойств(Запись, Сообщение);
					Запись.ДатаМодификацииУниверсальная = Дата(1,1,1);
					Запись.ДатаСоздания = Выборка.ДатаСоздания + 600;
					Запись.Сообщение = Сообщение.Идентификатор;
					Запись.РеквизитыИсходящегоСообщения = Новый ХранилищеЗначения(РеквизитыИсходящегоСообщения);
					НаборЗаписей.Записать();
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

Функция гф_ПолучитьДатуИзНомераДекларации(НомерДекларации)
	_День = Сред(НомерДекларации, 10, 2);
	Если ЗначениеЗаполнено(_День) Тогда
		День = Число(_День);
	Иначе
		День = 1;
	КонецЕсли;
	_Месяц = Сред(НомерДекларации, 12, 2);
	Если ЗначениеЗаполнено(_Месяц) Тогда
		Месяц = Число(_Месяц);
	Иначе
		Месяц = 1;
	КонецЕсли;
	_Год = Сред(НомерДекларации, 14, 2);
	Если ЗначениеЗаполнено(_Год) Тогда
		Год = Число("20"+_Год);
	Иначе
		Год = 1;
	КонецЕсли;
	Возврат Дата(Год, Месяц, День);
КонецФункции
