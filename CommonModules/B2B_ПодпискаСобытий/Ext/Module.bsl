
Процедура B2B_ПередЗаписьюЗаказПокупателя(Источник, Отказ, РежимЗаписи, РежимПроведения) Экспорт 
	
	Если Отказ ИЛИ Источник.ОбменДанными.Загрузка Тогда
		Возврат;	
	КонецЕсли;
	
	Если РежимЗаписи <> РежимЗаписиДокумента.Проведение Тогда  
		Возврат;
	КонецЕсли;
	
	//1БЦ++ МГ 31839
	Попытка		
		
		НомерЗаказаССайта = B2B_ОбщиеПроцедурыИФункции.ПолучитьЗначениеСвойства(Источник.Ссылка,ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию("B2B_НомерЗаказа"));		
		Если НомерЗаказаССайта<>Неопределено Тогда 
			
			НастройкиПодключения = B2B_ОбщиеПроцедурыИФункции.ВосстановитьНастройкиПодключенияПортал();			
			ЗаписьЖурналаРегистрации("ОбменB2B.UpdateOrderInfo", УровеньЖурналаРегистрации.Информация,,,"Начало отправки изменений на сайт");
			
			Если ТипЗнч(НастройкиПодключения) = Тип("Соответствие") Тогда
				
				//Отправлем на портал			
				МассивЗаказов = Новый Массив;
				МассивЗаказов.Добавить(Источник.Ссылка);
				
				B2B_ОбщиеПроцедурыИФункции.ВыгрузитьДокументы(НастройкиПодключения, МассивЗаказов);				
				
				ЗаписьЖурналаРегистрации("ОбменB2B.UpdateOrderInfo", УровеньЖурналаРегистрации.Информация,,,"Окончание отправки изменений на сайт");
				
			КонецЕсли;
			
		КонецЕсли;				
	Исключение
		Сообщение="Ошибка отправки на сайт изменений заказа № " + СокрЛП(Источник.Номер);				
		ЗаписьЖурналаРегистрации("ОбменB2B.UpdateOrderInfo", УровеньЖурналаРегистрации.Ошибка, , , Сообщение);						
	КонецПопытки;
	//1БЦ-- МГ 31839
	
	//Vims 01.12.21
	//Не меняем статус документа на портале
	Возврат;
	
	//Если Отказ ИЛИ Источник.ОбменДанными.Загрузка Тогда
	//	Возврат;	
	//КонецЕсли;
	//
	//Если РежимЗаписи <> РежимЗаписиДокумента.Проведение Тогда  
	//	Возврат;
	//КонецЕсли;     
	//
	//B2B_Статус = ПолучитьСтатусB2B(Источник.Ссылка);
	//Если B2B_Статус = Справочники.гф_В2ВСтатусЗаказаКлиента.Новый Тогда   
	//	
	//	Если ЕстьРеквизитОбъекта("гф_В2ВСтатус", Источник) Тогда
	//		Источник.гф_В2ВСтатус = Справочники.гф_В2ВСтатусЗаказаКлиента.ПодтвержденОжидаетсяОплата;
	//	КонецЕсли;
	//	
	//	МенеджерЗаписи = РегистрыСведений.B2B_СтатусыЗаказов.СоздатьМенеджерЗаписи();
	//	МенеджерЗаписи.ЗаказПокупателя 	= Источник.Ссылка;
	//	МенеджерЗаписи.СтатусЗаказа = Справочники.гф_В2ВСтатусЗаказаКлиента.ПодтвержденОплата;
	//	МенеджерЗаписи.Период = ТекущаяДата();
	//	МенеджерЗаписи.Записать();   
	//	
	//	//Отправлем на портал
	//	
	//	МассивЗаказов = Новый Массив;
	//	МассивЗаказов.Добавить(Источник.Ссылка);
	//	
	//	НастройкиПодключения = B2B_ОбщиеПроцедурыИФункции.ВосстановитьНастройкиПодключенияПортал();
	//	
	//	Если ТипЗнч(НастройкиПодключения) = Тип("Соответствие") Тогда
	//		
	//		B2B_ОбщиеПроцедурыИФункции.ВыгрузитьДокументы(НастройкиПодключения, МассивЗаказов);
	//		
	//	КонецЕсли; 
	//КонецЕсли;
		
КонецПроцедуры   
	
Функция ПолучитьСтатусB2B(Ссылка) 
	
	B2B_Статус = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	*
	|ИЗ
	|	РегистрСведений.B2B_СтатусыЗаказов.СрезПоследних(, ЗаказПокупателя = &Ссылка) КАК СтатусыЗаказовСрезПоследних";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Если ЗначениеЗаполнено(Выборка.СтатусЗаказа) Тогда
			B2B_Статус = Выборка.СтатусЗаказа;
		КонецЕсли;
	КонецЕсли; 
	
	Возврат B2B_Статус;

КонецФункции

Функция ЕстьРеквизитОбъекта(ИмяРеквизита, Объект) Экспорт
	
	МетаданныеОбъекта = Объект.Метаданные();
	Если МетаданныеОбъекта.Реквизиты.Найти(ИмяРеквизита) = Неопределено Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли; 
	
КонецФункции  
