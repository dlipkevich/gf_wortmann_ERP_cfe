#Область ПрограммныйИнтерфейс

// #wortmann {
// #e1cib/data/Задача.ЗадачаИсполнителя?ref=8eabb083fed1320811ee593709e3289f
// Именить алгоритм заполнения ГТД в виде запасов по обувным товарам
// Галфинд Sakovich 2023/11/22
// см. ПодпискиНаСобытия.гф_ЗаполнитьВидыЗапасовПередЗаписью
// Параметры:
// Источник - ДокументОбъект - записываемый объект
// Отказ - Булево - отказ от записи документа
// РежимЗаписи - ДокументОбъект.РежимЗаписиДокумента
// РежимПроведения - ДокументОбъект.РежимПроведенияДокумента
Процедура гф_ПерезаполнитьВидыЗапасовПередЗаписью(Источник, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если РежимЗаписи <> РежимЗаписиДокумента.Проведение Тогда
		Возврат;
	КонецЕсли;	
	
	Если Источник.ВидыЗапасов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.РеализацияТоваровУслуг") Тогда
		//$$$===========================vvv ОТЛАДКА vvv======================22.11.2023 13:22:08=============| SBB
		//тзВидыЗапасов = Источник.ВидыЗапасов.Выгрузить();
		//тзШтрихкодыУпаковок = Источник.ШтрихкодыУпаковок.Выгрузить();
		//
		//Запрос = Новый Запрос;
		//Запрос.Текст = "
		//|ВЫБРАТЬ
		//|	ШтрихкодыУпаковок.ШтрихкодУпаковки КАК ШтрихкодУпаковки
		//|ПОМЕСТИТЬ ШтрихкодыУпаковок
		//|ИЗ
		//|	&ШтрихкодыУпаковок КАК ШтрихкодыУпаковок
		//|;
		//|
		//|////////////////////////////////////////////////////////////////////////////////
		//|ВЫБРАТЬ
		//|	ВидыЗапасов.НомерСтроки КАК НомерСтроки,
		//|	ВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		//|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
		//|	ВидыЗапасов.НомерГТД КАК НомерГТД,
		//|	ВидыЗапасов.Упаковка КАК Упаковка,
		//|	ВидыЗапасов.КоличествоУпаковок КАК КоличествоУпаковок,
		//|	ВидыЗапасов.Количество КАК Количество,
		//|	ВидыЗапасов.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
		//|	ВидыЗапасов.УдалитьСтавкаНДС КАК УдалитьСтавкаНДС,
		//|	ВидыЗапасов.СуммаСНДС КАК СуммаСНДС,
		//|	ВидыЗапасов.СтавкаНДС КАК СтавкаНДС,
		//|	ВидыЗапасов.СуммаНДС КАК СуммаНДС,
		//|	ВидыЗапасов.ИдентификаторСтроки КАК ИдентификаторСтроки,
		//|	ВидыЗапасов.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
		//|	ВидыЗапасов.ЗаказКлиента КАК ЗаказКлиента,
		//|	ВидыЗапасов.СуммаРучнойСкидки КАК СуммаРучнойСкидки,
		//|	ВидыЗапасов.СуммаАвтоматическойСкидки КАК СуммаАвтоматическойСкидки,
		//|	ВидыЗапасов.АналитикаУчетаНаборов КАК АналитикаУчетаНаборов,
		//|	ВидыЗапасов.Цена КАК Цена,
		//|	ВидыЗапасов.ВидЗапасовПолучателя КАК ВидЗапасовПолучателя,
		//|	ВидыЗапасов.ОбъектРасчетов КАК ОбъектРасчетов,
		//|	ВидыЗапасов.КодТНВЭД КАК КодТНВЭД
		//|ПОМЕСТИТЬ ВидыЗапасов
		//|ИЗ
		//|	&ВидыЗапасов КАК ВидыЗапасов
		//|;
		//|
		//|////////////////////////////////////////////////////////////////////////////////
		//|ВЫБРАТЬ
		//|	спрШтрихкодыУпаковокТоваров.Номенклатура КАК Номенклатура,
		//|	спрШтрихкодыУпаковокТоваров.Характеристика КАК Характеристика,
		//|	МАКСИМУМ(ВЫБОР
		//|			КОГДА спрНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ОбувнаяПродукция)
		//|				ТОГДА спрШтрихкодыУпаковокТоваров.гф_НомерГТД
		//|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
		//|		КОНЕЦ) КАК гф_НомерГТД,
		//|	спрНоменклатура.ОсобенностьУчета КАК ОсобенностьУчета
		//|ПОМЕСТИТЬ вт_ГТДДокумента
		//|ИЗ
		//|	ШтрихкодыУпаковок КАК ШтрихкодыУпаковок
		//|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ШтрихкодыУпаковокТоваров КАК спрШтрихкодыУпаковокТоваров
		//|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК спрНоменклатура
		//|			ПО спрШтрихкодыУпаковокТоваров.Номенклатура = спрНоменклатура.Ссылка
		//|				И (спрНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ОбувнаяПродукция))
		//|		ПО ШтрихкодыУпаковок.ШтрихкодУпаковки = спрШтрихкодыУпаковокТоваров.Ссылка
		//|ГДЕ
		//|	спрШтрихкодыУпаковокТоваров.ТипУпаковки = ЗНАЧЕНИЕ(Перечисление.ТипыУпаковок.МаркированныйТовар)
		//|
		//|СГРУППИРОВАТЬ ПО
		//|	спрШтрихкодыУпаковокТоваров.Номенклатура,
		//|	спрШтрихкодыУпаковокТоваров.Характеристика,
		//|	спрНоменклатура.ОсобенностьУчета
		//|
		//|ОБЪЕДИНИТЬ ВСЕ
		//|
		//|ВЫБРАТЬ
		//|	Штрихкоды.Номенклатура,
		//|	Штрихкоды.Характеристика,
		//|	МАКСИМУМ(ВЫБОР
		//|			КОГДА спрНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ОбувнаяПродукция)
		//|				ТОГДА Штрихкоды.гф_НомерГТД
		//|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
		//|		КОНЕЦ),
		//|	спрНоменклатура.ОсобенностьУчета
		//|ИЗ
		//|	ШтрихкодыУпаковок КАК ШтрихкодыУпаковок
		//|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ШтрихкодыУпаковокТоваров.ВложенныеШтрихкоды КАК ШтрихкодыУпаковокТоваровВложенные
		//|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ШтрихкодыУпаковокТоваров КАК Штрихкоды
		//|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК спрНоменклатура
		//|				ПО Штрихкоды.Номенклатура = спрНоменклатура.Ссылка
		//|					И (спрНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ОбувнаяПродукция))
		//|			ПО ШтрихкодыУпаковокТоваровВложенные.Штрихкод = Штрихкоды.Ссылка
		//|		ПО ШтрихкодыУпаковок.ШтрихкодУпаковки = ШтрихкодыУпаковокТоваровВложенные.Ссылка
		//|ГДЕ
		//|	Штрихкоды.ТипУпаковки = ЗНАЧЕНИЕ(Перечисление.ТипыУпаковок.МаркированныйТовар)
		//|
		//|СГРУППИРОВАТЬ ПО
		//|	Штрихкоды.Номенклатура,
		//|	Штрихкоды.Характеристика,
		//|	спрНоменклатура.ОсобенностьУчета
		//|;
		//|
		//|////////////////////////////////////////////////////////////////////////////////
		//|ВЫБРАТЬ
		//|	ВидыЗапасов.НомерСтроки КАК НомерСтроки,
		//|	ВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		//|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
		//|	ВЫБОР
		//|		КОГДА вт_ГТДДокумента.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ОбувнаяПродукция)
		//|			ТОГДА вт_ГТДДокумента.гф_НомерГТД
		//|		ИНАЧЕ ВидыЗапасов.НомерГТД
		//|	КОНЕЦ КАК НомерГТД,
		//|	ВидыЗапасов.Упаковка КАК Упаковка,
		//|	ВидыЗапасов.КоличествоУпаковок КАК КоличествоУпаковок,
		//|	ВидыЗапасов.Количество КАК Количество,
		//|	ВидыЗапасов.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
		//|	ВидыЗапасов.УдалитьСтавкаНДС КАК УдалитьСтавкаНДС,
		//|	ВидыЗапасов.СуммаСНДС КАК СуммаСНДС,
		//|	ВидыЗапасов.СтавкаНДС КАК СтавкаНДС,
		//|	ВидыЗапасов.СуммаНДС КАК СуммаНДС,
		//|	ВидыЗапасов.ИдентификаторСтроки КАК ИдентификаторСтроки,
		//|	ВидыЗапасов.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
		//|	ВидыЗапасов.ЗаказКлиента КАК ЗаказКлиента,
		//|	ВидыЗапасов.СуммаРучнойСкидки КАК СуммаРучнойСкидки,
		//|	ВидыЗапасов.СуммаАвтоматическойСкидки КАК СуммаАвтоматическойСкидки,
		//|	ВидыЗапасов.АналитикаУчетаНаборов КАК АналитикаУчетаНаборов,
		//|	ВидыЗапасов.Цена КАК Цена,
		//|	ВидыЗапасов.ВидЗапасовПолучателя КАК ВидЗапасовПолучателя,
		//|	ВидыЗапасов.ОбъектРасчетов КАК ОбъектРасчетов,
		//|	ВидыЗапасов.КодТНВЭД КАК КодТНВЭД
		//|ИЗ
		//|	ВидыЗапасов КАК ВидыЗапасов
		//|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитики
		//|			ЛЕВОЕ СОЕДИНЕНИЕ вт_ГТДДокумента КАК вт_ГТДДокумента
		//|			ПО КлючиАналитики.Номенклатура = вт_ГТДДокумента.Номенклатура
		//|				И КлючиАналитики.Характеристика = вт_ГТДДокумента.Характеристика
		//|		ПО ВидыЗапасов.АналитикаУчетаНоменклатуры = КлючиАналитики.Ссылка";
		//Запрос.УстановитьПараметр("ШтрихкодыУпаковок", тзШтрихкодыУпаковок);
		//Запрос.УстановитьПараметр("ВидыЗапасов", тзВидыЗапасов);
		//Результат = Запрос.Выполнить();
		//тзВидыЗапасовПослеОбработки = Результат.Выгрузить();
		//Источник.ВидыЗапасов.Загрузить(тзВидыЗапасовПослеОбработки);
		//Источник.ВидыЗапасовУказаныВручную = Истина;
		//===========================^^^ КОНЕЦ ОТЛАДКИ ^^^===================22.11.2023 13:22:08=============| SBB
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.КорректировкаНазначенияТоваров") Тогда
		// vvv Галфинд \ Sakovich 23.11.2023
		// e1cib/data/Задача.ЗадачаИсполнителя?ref=8eabb083fed1320811ee8525b51e86c0
		тзВидыЗапасов = Источник.ВидыЗапасов.Выгрузить();
		тЗТовары = Источник.Товары.Выгрузить();
		
		Запрос = Новый Запрос;
		Запрос.Текст = ТекстЗапросаКорректировкаНазначенийГТДТоваров();
		Запрос.УстановитьПараметр("тзТовары", тзТовары);
		УстановитьПривилегированныйРежим(Истина);
		Результат = Запрос.Выполнить();
		УстановитьПривилегированныйРежим(Ложь);
		тзТовары = Результат.Выгрузить();
		
		Для каждого стрВидыЗапасов Из тзВидыЗапасов Цикл
			мСтрокТоваров = тзТовары.НайтиСтроки(Новый Структура(
			"АналитикаУчетаНоменклатуры, АналитикаУчетаНоменклатурыОприходование, НомерСтроки", 
			стрВидыЗапасов["АналитикаУчетаНоменклатуры"], стрВидыЗапасов["АналитикаУчетаНоменклатурыОприходование"], стрВидыЗапасов["НомерСтроки"]));
			Если мСтрокТоваров.ВГраница() = 0 Тогда
				СкладКоробочный = УправлениеСвойствами.ЗначениеСвойства(мСтрокТоваров[0]["Склад"], "гф_СкладыТоварыВКоробах") = Истина;
				ЭтоОбувнаяПродукция = мСтрокТоваров[0]["ОсобенностьУчета"] = Перечисления.ОсобенностиУчетаНоменклатуры.ОбувнаяПродукция;
				Если ЭтоОбувнаяПродукция И СкладКоробочный Тогда
					стрВидыЗапасов["НомерГТД"] = мСтрокТоваров[0]["НомерГТД"];
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		Источник.ВидыЗапасов.Загрузить(тзВидыЗапасов);
		Источник.ВидыЗапасовУказаныВручную = Истина;
		// ^^^ Галфинд \ Sakovich 23.11.2023
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.ПеремещениеТоваров") Тогда
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.ПересортицаТоваров") Тогда
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.СписаниеНедостачТоваров") Тогда
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.ВнутреннееПотребление") Тогда
		
	Иначе
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Функция ТекстЗапросаКорректировкаНазначенийГТДТоваров()
	
	Возврат "
	|ВЫБРАТЬ
	|	тчТовары.НомерСтроки КАК НомерСтроки,
	|	тчТовары.Номенклатура КАК Номенклатура,
	|	тчТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	тчТовары.Количество КАК Количество,
	|	тчТовары.Склад КАК Склад,
	|	тчТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	тчТовары.АналитикаУчетаНоменклатурыОприходование КАК АналитикаУчетаНоменклатурыОприходование,
	|	тчТовары.гф_IDкороба КАК гф_IDкороба
	|ПОМЕСТИТЬ вт_Товары
	|ИЗ
	|	&тзТовары КАК тчТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ШтрихкодыУпаковокТоваров.Ссылка КАК Ссылка,
	|	ШтрихкодыУпаковокТоваров.гф_НомерГТД КАК гф_НомерГТД,
	|	вт_Товары.гф_IDкороба КАК гф_IDкороба
	|ПОМЕСТИТЬ вт_ГТДАгрегатыШК
	|ИЗ
	|	Справочник.ШтрихкодыУпаковокТоваров КАК ШтрихкодыУпаковокТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ вт_Товары КАК вт_Товары
	|		ПО ШтрихкодыУпаковокТоваров.Ссылка = вт_Товары.гф_IDкороба.гф_Агрегация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА НЕ вт_ГТДАгрегатыШК.гф_НомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|			ТОГДА вт_ГТДАгрегатыШК.гф_НомерГТД
	|		ИНАЧЕ МАКСИМУМ(ШтрихкодыУпаковокТоваровВложенныеШтрихкоды.Штрихкод.гф_НомерГТД)
	|	КОНЕЦ КАК НомерГТД,
	|	вт_ГТДАгрегатыШК.гф_IDкороба КАК гф_IDкороба
	|ПОМЕСТИТЬ вт_ГТД_ШК
	|ИЗ
	|	вт_ГТДАгрегатыШК КАК вт_ГТДАгрегатыШК
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ШтрихкодыУпаковокТоваров.ВложенныеШтрихкоды КАК ШтрихкодыУпаковокТоваровВложенныеШтрихкоды
	|		ПО вт_ГТДАгрегатыШК.Ссылка = ШтрихкодыУпаковокТоваровВложенныеШтрихкоды.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	вт_ГТДАгрегатыШК.Ссылка,
	|	вт_ГТДАгрегатыШК.гф_НомерГТД,
	|	вт_ГТДАгрегатыШК.гф_IDкороба
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_Товары.НомерСтроки КАК НомерСтроки,
	|	вт_Товары.Номенклатура КАК Номенклатура,
	|	вт_Товары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	вт_Товары.АналитикаУчетаНоменклатурыОприходование КАК АналитикаУчетаНоменклатурыОприходование,
	|	вт_Товары.Склад КАК Склад,
	|	вт_Товары.Количество КАК Количество,
	|	вт_Товары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	вт_Товары.гф_IDкороба КАК гф_IDкороба,
	|	вт_ГТД_ШК.НомерГТД КАК НомерГТД,
	|	спрНоменклатура.ОсобенностьУчета КАК ОсобенностьУчета
	|ИЗ
	|	вт_Товары КАК вт_Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ГТД_ШК КАК вт_ГТД_ШК
	|		ПО (вт_Товары.гф_IDкороба = вт_ГТД_ШК.гф_IDкороба)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК спрНоменклатура
	|		ПО (вт_Товары.Номенклатура = спрНоменклатура.Ссылка)";
	
КонецФункции


#КонецОбласти