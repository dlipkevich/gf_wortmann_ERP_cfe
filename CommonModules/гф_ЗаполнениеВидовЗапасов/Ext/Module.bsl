#Область ПрограммныйИнтерфейс

// #wortmann {
// #e1cib/data/Задача.ЗадачаИсполнителя?ref=8eabb083fed1320811ee593709e3289f
// Именить алгоритм заполнения ГТД в виде запасов по обувным товарам
// Галфинд Sakovich 2023/11/24
//
// Параметры:
// Источник - ДокументОбъект - записываемый объект  (см. ПодпискиНаСобытия.гф_ЗаполнитьВидыЗапасовПередЗаписью)
// Отказ - Булево - отказ от записи документа
// РежимЗаписи - ДокументОбъект.РежимЗаписиДокумента
// РежимПроведения - ДокументОбъект.РежимПроведенияДокумента
Процедура гф_ПерезаполнитьВидыЗапасовПередЗаписью(Источник, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	Если Источник.ДополнительныеСвойства.Свойство("гф_НеПерезаполнятьВидыЗапасов") Тогда
		Возврат;
	КонецЕсли;
	
	Если Отказ Тогда // если отказ -в подписку не попадем, но можем вызвать как экспортную...
		Возврат;
	КонецЕсли;
	
	Если РежимЗаписи <> РежимЗаписиДокумента.Проведение Тогда
		Возврат;
	КонецЕсли;	
	
	Если Источник.ВидыЗапасов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.КорректировкаНазначенияТоваров") Тогда
		КорректировкаНазначенияТоваровСформироватьВидыЗапасов(Источник);
	КонецЕсли;
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.ПеремещениеТоваров") Тогда
		ПеремещениеТоваровСформироватьВидыЗапасов(Источник);
	КонецЕсли;
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.РеализацияТоваровУслуг") Тогда
		РеализацияТоваровУслугСформироватьВидыЗапасов(Источник);
	КонецЕсли;
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.ПересортицаТоваров") Тогда
		ПересортицаТоваровСформироватьВидыЗапасов(Источник);
	КонецЕсли;
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.СписаниеНедостачТоваров") Тогда
		ИзменитьГТДВВидахЗапасов(Источник);
	КонецЕсли;
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.ВнутреннееПотребление") Тогда
		ИзменитьГТДВВидахЗапасов(Источник);
	КонецЕсли;
	
КонецПроцедуры // #wortmann Галфинд Sakovich 2023/11/24

#КонецОбласти

#Область Виды_запасов

Процедура ИзменитьГТДВВидахЗапасов(Источник)
	
	тчШтрихкоды = Источник.ШтрихкодыУпаковок.Выгрузить();
	
	ТаблицаГТДПоНоменклатуре = ПолучитьТаблицуГТДПоНоменклатре(тчШтрихкоды);
	
	Если ТаблицаГТДПоНоменклатуре.Количество() = 0 Тогда
		Возврат;	
	КонецЕсли;
	
	тчТовары = Источник.Товары.Выгрузить();
	ТаблицаАналитикаТоваровПоГТД = ПолучитьТаблицуАналитикиТоваровПоГТДОбщее(тчТовары, ТаблицаГТДПоНоменклатуре, Источник);
	Если ТаблицаАналитикаТоваровПоГТД.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	тзВидыЗапасов = Источник.ВидыЗапасов.Выгрузить();
	ВидыЗапасовИзменены = Ложь;
	тзВидыЗапасовНовая = тзВидыЗапасов.СкопироватьКолонки();
	
	мОбработанныхСтрокТоваровПоГТД = Новый Массив;
	Для каждого стрВидыЗапасов Из тзВидыЗапасов Цикл
		стрПоиска = Новый Структура("АналитикаУчетаНоменклатуры", стрВидыЗапасов["АналитикаУчетаНоменклатуры"]);
		мСтрокТоваровПоГТД = ТаблицаАналитикаТоваровПоГТД.НайтиСтроки(стрПоиска);
		Если мСтрокТоваровПоГТД.ВГраница() = -1 Тогда
			Продолжить;
		КонецЕсли;
		Для каждого Эл Из мСтрокТоваровПоГТД Цикл
			Если стрВидыЗапасов["НомерГТД"] <> Эл["НомерГТД"] Тогда
				Если мОбработанныхСтрокТоваровПоГТД.Найти(Эл) = Неопределено Тогда
					стрВидыЗапасов["НомерГТД"] = Эл["НомерГТД"];
					ВидыЗапасовИзменены = Истина;
					мОбработанныхСтрокТоваровПоГТД.Добавить(Эл);
					Прервать;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	Если ВидыЗапасовИзменены Тогда
		Источник.ВидыЗапасов.Загрузить(тзВидыЗапасов);
		Источник.ВидыЗапасовУказаныВручную = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура КорректировкаНазначенияТоваровСформироватьВидыЗапасов(Источник)
	
	// vvv Галфинд \ Sakovich 23.11.2023 , 26.12.2023
	// e1cib/data/Задача.ЗадачаИсполнителя?ref=8eabb083fed1320811ee8525b51e86c0
	
	тзВидыЗапасов = Источник.ВидыЗапасов.Выгрузить();
	тЗТовары = Источник.Товары.Выгрузить();
	тзВидыЗапасовНовая = тзВидыЗапасов.СкопироватьКолонки();
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаКорректировкаНазначенийГТДТоваров();
	Запрос.УстановитьПараметр("тзТовары", тзТовары);
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	тзТоварыПоГТД = Результат.Выгрузить();
	
	мОбработанныхСтрокВидовЗапасов = Новый Массив();
	Для каждого стрТовары Из тзТоварыПоГТД Цикл  
		СтруктураПоиска = Новый Структура("АналитикаУчетаНоменклатуры, АналитикаУчетаНоменклатурыОприходование",
		стрТовары.АналитикаУчетаНоменклатуры, стрТовары.АналитикаУчетаНоменклатурыОприходование);
		мСтрокВидыЗапасов = тзВидыЗапасов.НайтиСтроки(СтруктураПоиска);
		Если мСтрокВидыЗапасов.ВГраница() > -1 Тогда   
			Для каждого элМассива Из мСтрокВидыЗапасов Цикл
				мОбработанныхСтрокВидовЗапасов.Добавить(элМассива);
			КонецЦикла;
			нс = тзВидыЗапасовНовая.Добавить();
			ЗаполнитьЗначенияСвойств(нс, мСтрокВидыЗапасов[0], ,
			"НомерГТД, КоличествоПоРНПТ, Количество, ИдентификаторСтроки, НомерСтроки");
			нс.Количество = стрТовары.Количество;
			нс.НомерГТД = стрТовары.НомерГТД;  
			нс.ИдентификаторСтроки = XMLСтрока(Новый УникальныйИдентификатор());
		КонецЕсли;	
	КонецЦикла;   
	
	мОбработанныхСтрокВидовЗапасовСвернуто = ОбщегоНазначенияКлиентСервер.СвернутьМассив(мОбработанныхСтрокВидовЗапасов);
	Для каждого элМассива Из мОбработанныхСтрокВидовЗапасовСвернуто Цикл
		тзВидыЗапасов.Удалить(элМассива);
	КонецЦикла;
	
	Для каждого стрВидовЗапасов Из тзВидыЗапасов Цикл
		нс = тзВидыЗапасовНовая.Добавить();
		ЗаполнитьЗначенияСвойств(нс, стрВидовЗапасов, , "НомерСтроки");
	КонецЦикла;
	
	Источник.ВидыЗапасов.Загрузить(тзВидыЗапасовНовая);
	Источник.ВидыЗапасовУказаныВручную = Истина;
	// ^^^ Галфинд \ Sakovich 23.11.2023 , 26.12.2023
	
КонецПроцедуры

Процедура ПеремещениеТоваровСформироватьВидыЗапасов(Источник)
	
	тчШтрихкоды = Источник.гф_ШтрихкодыУпаковок.Выгрузить();
	
	ТаблицаГТДПоНоменклатуре = ПолучитьТаблицуГТДПоНоменклатуреКоробов(Источник);
	Если ТаблицаГТДПоНоменклатуре.Количество() = 0 Тогда
		ТаблицаГТДПоНоменклатуре = ПолучитьТаблицуГТДПоНоменклатре(тчШтрихкоды);
	КонецЕсли;
	
	Если ТаблицаГТДПоНоменклатуре.Количество() = 0 Тогда
		Возврат;	
	КонецЕсли;
	
	тчТовары = Источник.Товары.Выгрузить();
	ТаблицаАналитикаТоваровПоГТД = ПолучитьТаблицуАналитикиТоваровПоГТДОбщее(тчТовары, ТаблицаГТДПоНоменклатуре, Источник);
	Если ТаблицаАналитикаТоваровПоГТД.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	тзВидыЗапасов = Источник.ВидыЗапасов.Выгрузить();
	ВидыЗапасовИзменены = Ложь;
	тзВидыЗапасовНовая = тзВидыЗапасов.СкопироватьКолонки();
	
	тзВидыЗапасов.Свернуть("АналитикаУчетаНоменклатуры, ВидЗапасов, ВидЗапасовПолучателя, Назначение, Сделка, Серия",
	"Количество, КоличествоПоРНПТ");
	
	Для каждого стрВидыЗапасов Из тзВидыЗапасов Цикл
		стрПоиска = Новый Структура("АналитикаУчетаНоменклатуры", стрВидыЗапасов["АналитикаУчетаНоменклатуры"]);
		мСтрокТоваровПоГТД = ТаблицаАналитикаТоваровПоГТД.НайтиСтроки(стрПоиска);
		Если мСтрокТоваровПоГТД.ВГраница() = -1 Тогда
			Продолжить;
		КонецЕсли;
		Для каждого Эл Из мСтрокТоваровПоГТД Цикл
			нс = тзВидыЗапасовНовая.Добавить();
			ЗаполнитьЗначенияСвойств(нс, стрВидыЗапасов);
			нс["Количество"] = Эл["Количество"];
			нс["КоличествоПоРНПТ"] = 0;
			нс["НомерГТД"] = Эл["НомерГТД"];
			нс["ИдентификаторСтроки"] = XMLСтрока(Новый УникальныйИдентификатор());
			ВидыЗапасовИзменены = Истина;
		КонецЦикла;
	КонецЦикла;
	Если ВидыЗапасовИзменены Тогда
		Источник.ВидыЗапасов.Загрузить(тзВидыЗапасовНовая);
		Источник.ВидыЗапасовУказаныВручную = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура РеализацияТоваровУслугСформироватьВидыЗапасов(Источник)
	
	ТаблицаАналитикаТоваровПоГТД = ПолучитьТаблицуАналитикиТоваровПоГТДРеализация(Источник);
	
	Если ТаблицаАналитикаТоваровПоГТД.Количество() = 0 Тогда
		Возврат;	
	КонецЕсли;
	
	тзВидыЗапасов = Источник.ВидыЗапасов.Выгрузить();
	ВидыЗапасовИзменены = Ложь;
	тзВидыЗапасовНовая = тзВидыЗапасов.СкопироватьКолонки();
	
	тзВидыЗапасов.Свернуть("АналитикаУчетаНаборов, АналитикаУчетаНоменклатуры, ВидЗапасов, ВидЗапасовПолучателя,
	|ЗаказКлиента, КодТНВЭД, ОбъектРасчетов, СтавкаНДС, Упаковка, Цена",
	"Количество, КоличествоПоРНПТ, КоличествоУпаковок");
	
	Для каждого стрВидыЗапасов Из тзВидыЗапасов Цикл
		стрПоиска = Новый Структура("АналитикаУчетаНоменклатуры, ЗаказКлиента, Упаковка, Цена", 
		стрВидыЗапасов["АналитикаУчетаНоменклатуры"],  стрВидыЗапасов["ЗаказКлиента"], 
		стрВидыЗапасов["Упаковка"], стрВидыЗапасов["Цена"]);
		мСтрокТоваровПоГТД = ТаблицаАналитикаТоваровПоГТД.НайтиСтроки(стрПоиска);
		Если мСтрокТоваровПоГТД.ВГраница() = -1 Тогда
			Продолжить;
		КонецЕсли;
		Для каждого Эл Из мСтрокТоваровПоГТД Цикл
			нс = тзВидыЗапасовНовая.Добавить();
			ЗаполнитьЗначенияСвойств(нс, стрВидыЗапасов);
			нс["Количество"] = Эл["Количество"];
			нс["КоличествоПоРНПТ"] = 0;
			нс["КоличествоУпаковок"] = Эл["Количество"];
			нс["НомерГТД"] = Эл["НомерГТД"];
			нс["ИдентификаторСтроки"] = XMLСтрока(Новый УникальныйИдентификатор());
			// пересчеты сумм
			// СуммаАвтоматическойСкидки (тут пока неясно)
			// СуммаРучнойСкидки (тут пока неясно)
			Сумма = нс.Количество * нс.Цена;
			ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ЭлектронныеУслуги;
			нс.СуммаНДС = УчетНДСКлиентСерверЛокализация.РассчитатьСуммуНДС(Сумма, нс.СтавкаНДС, Ложь, ТипНалогообложенияНДС);
			нс.СуммаСНДС = нс.СуммаНДС + Сумма;
			нс.СуммаВзаиморасчетов = нс.СуммаСНДС;
			ВидыЗапасовИзменены = Истина;
		КонецЦикла;
	КонецЦикла;
	Если ВидыЗапасовИзменены Тогда
		Источник.ВидыЗапасов.Загрузить(тзВидыЗапасовНовая);
		Источник.ВидыЗапасовУказаныВручную = Истина;
	КонецЕсли;	
	
КонецПроцедуры

Процедура ПересортицаТоваровСформироватьВидыЗапасов(Источник)
	
	Если Не ЗначениеЗаполнено(Источник.гф_IDКороба) Тогда
		Возврат;
	КонецЕсли;
	
	тчТовары = Источник.Товары.Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = " 
	|ВЫБРАТЬ
	|	т.АналитикаУчетаНоменклатуры КАК АУН,
	|	т.АналитикаУчетаНоменклатурыОприходование КАК АУНО,
	|	т.Количество КАК Количество,
	|	&УЛ КАК УЛ
	|ПОМЕСТИТЬ втТовары
	|ИЗ
	|	&тчТовары КАК т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТовары.АУН КАК АналитикаУчетаНоменклатуры,
	|	втТовары.АУНО КАК АналитикаУчетаНоменклатурыОприходование,
	|	втТовары.Количество КАК Количество,
	|	Агрегат.гф_НомерГТД КАК НомерГТД
	|ИЗ
	|	втТовары КАК втТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УпаковочныйЛист КАК докУЛ
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ШтрихкодыУпаковокТоваров КАК Агрегат
	|			ПО докУЛ.гф_Агрегация = Агрегат.Ссылка
	|		ПО втТовары.УЛ = докУЛ.Ссылка";
	Запрос.УстановитьПараметр("тчТовары", тчТовары);
	Запрос.УстановитьПараметр("УЛ", Источник.гф_IDКороба);
	Результат = Запрос.Выполнить();
	ТаблицаАналитикаТоваровПоГТД = Результат.Выгрузить();
	
	Если ТаблицаАналитикаТоваровПоГТД.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	тзВидыЗапасов = Источник.ВидыЗапасов.Выгрузить();
	ВидыЗапасовИзменены = Ложь;
	тзВидыЗапасовНовая = тзВидыЗапасов.СкопироватьКолонки();
	
	тзВидыЗапасов.Свернуть("АналитикаУчетаНоменклатуры, АналитикаУчетаНоменклатурыОприходование, 
	|ВидЗапасов, ВидЗапасовОприходование", "Количество");
	
	Для каждого стрВидыЗапасов Из тзВидыЗапасов Цикл
		стрПоиска = Новый Структура("АналитикаУчетаНоменклатуры, АналитикаУчетаНоменклатурыОприходование",
		стрВидыЗапасов["АналитикаУчетаНоменклатуры"], стрВидыЗапасов["АналитикаУчетаНоменклатурыОприходование"]);
		мСтрокТоваровПоГТД = ТаблицаАналитикаТоваровПоГТД.НайтиСтроки(стрПоиска);
		Если мСтрокТоваровПоГТД.ВГраница() = -1 Тогда
			Продолжить;
		КонецЕсли;
		Для каждого Эл Из мСтрокТоваровПоГТД Цикл
			нс = тзВидыЗапасовНовая.Добавить();
			ЗаполнитьЗначенияСвойств(нс, стрВидыЗапасов);
			нс["Количество"] = Эл["Количество"];
			нс["КоличествоПоРНПТ"] = 0;
			нс["НомерГТД"] = Эл["НомерГТД"];
			нс["ИдентификаторСтроки"] = XMLСтрока(Новый УникальныйИдентификатор());
			ВидыЗапасовИзменены = Истина;
		КонецЦикла;
	КонецЦикла;
	Если ВидыЗапасовИзменены Тогда
		Источник.ВидыЗапасов.Загрузить(тзВидыЗапасовНовая);
		Источник.ВидыЗапасовУказаныВручную = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьТаблицуАналитикиТоваровПоГТДРеализация(Источник)
	
	тчТовары = Источник.Товары.Выгрузить();
	тчШтрихкоды = Источник.ШтрихкодыУпаковок.Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	тчТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	тчТовары.Номенклатура КАК Номенклатура,
	|	тчТовары.Характеристика КАК Характеристика,
	|	тчТовары.Упаковка КАК Упаковка,
	|	тчТовары.ЗаказКлиента КАК ЗаказКлиента,
	|	тчТовары.Цена КАК Цена,
	|	тчТовары.СтавкаНДС КАК СтавкаНДС
	|ПОМЕСТИТЬ вт_Товары
	|ИЗ
	|	&тчТовары КАК тчТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	тчШтрихкоды.ШтрихкодУпаковки КАК ШтрихкодУпаковки
	|ПОМЕСТИТЬ тчШтрихкоды
	|ИЗ
	|	&тчШтрихкоды КАК тчШтрихкоды
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Агрегаты.Ссылка КАК Агрегат,
	|	влШК.Штрихкод.Номенклатура КАК Номенклатура,
	|	влШК.Штрихкод.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА НЕ Агрегаты.гф_НомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|			ТОГДА Агрегаты.гф_НомерГТД
	|		КОГДА НЕ влШК.Штрихкод.гф_НомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|			ТОГДА влШК.Штрихкод.гф_НомерГТД
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|	КОНЕЦ КАК НомерГТД,
	|	1 КАК Количество
	|ПОМЕСТИТЬ втДанные
	|ИЗ
	|	тчШтрихкоды КАК тчШтрихкоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ШтрихкодыУпаковокТоваров КАК Агрегаты
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ШтрихкодыУпаковокТоваров.ВложенныеШтрихкоды КАК влШК
	|			ПО Агрегаты.Ссылка = влШК.Ссылка
	|		ПО тчШтрихкоды.ШтрихкодУпаковки = Агрегаты.Ссылка
	|ГДЕ
	|	Агрегаты.ТипУпаковки = ЗНАЧЕНИЕ(перечисление.ТипыУпаковок.МультитоварнаяУпаковка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Агрегаты.Ссылка,
	|	ШК.Номенклатура,
	|	ШК.Характеристика,
	|	ШК.гф_НомерГТД,
	|	1
	|ИЗ
	|	тчШтрихкоды КАК тчШтрихкоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ШтрихкодыУпаковокТоваров КАК ШК
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ШтрихкодыУпаковокТоваров.ВложенныеШтрихкоды КАК Агрегаты
	|			ПО (Агрегаты.Штрихкод = ШК.Ссылка)
	|		ПО тчШтрихкоды.ШтрихкодУпаковки = ШК.Ссылка
	|ГДЕ
	|	ШК.ТипУпаковки = ЗНАЧЕНИЕ(перечисление.ТипыУпаковок.МаркированныйТовар)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1000000
	|	втДанные.Номенклатура КАК Номенклатура,
	|	втДанные.Характеристика КАК Характеристика,
	|	втДанные.НомерГТД КАК НомерГТД,
	|	УпаковочныйЛистТовары.Упаковка КАК Упаковка,
	|	СУММА(втДанные.Количество) КАК Количество,
	|	ЗаказКлиента.Ссылка КАК ЗаказКлиента
	|ПОМЕСТИТЬ вт_ДанныеСгруппировано
	|ИЗ
	|	втДанные КАК втДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УпаковочныйЛист.Товары КАК УпаковочныйЛистТовары
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента КАК ЗаказКлиента
	|			ПО УпаковочныйЛистТовары.Ссылка.гф_Заказ = ЗаказКлиента.Ссылка
	|		ПО втДанные.Агрегат = УпаковочныйЛистТовары.Ссылка.гф_Агрегация
	|			И втДанные.Номенклатура = УпаковочныйЛистТовары.Номенклатура
	|			И втДанные.Характеристика = УпаковочныйЛистТовары.Характеристика
	|
	|СГРУППИРОВАТЬ ПО
	|	втДанные.Номенклатура,
	|	втДанные.Характеристика,
	|	втДанные.НомерГТД,
	|	ЗаказКлиента.Ссылка,
	|	УпаковочныйЛистТовары.Упаковка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗаказКлиента,
	|	Номенклатура,
	|	Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	вт_Товары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	втДанные.НомерГТД КАК НомерГТД,
	|	ЕСТЬNULL(втДанные.Количество, 0) КАК Количество,
	|	ВЫБОР
	|		КОГДА втДанные.Номенклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ОбувнаяПродукция)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоОбувь,
	|	вт_Товары.Упаковка КАК Упаковка,
	|	вт_Товары.ЗаказКлиента КАК ЗаказКлиента,
	|	вт_Товары.Цена КАК Цена,
	|	вт_Товары.СтавкаНДС КАК СтавкаНДС
	|ИЗ
	|	вт_Товары КАК вт_Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ДанныеСгруппировано КАК втДанные
	|		ПО вт_Товары.Номенклатура = втДанные.Номенклатура
	|			И вт_Товары.Характеристика = втДанные.Характеристика
	|			И вт_Товары.ЗаказКлиента = втДанные.ЗаказКлиента
	|			И вт_Товары.Упаковка = втДанные.Упаковка";
	
	Запрос.УстановитьПараметр("тчТовары", тчТовары);
	Запрос.УстановитьПараметр("тчШтрихкоды", тчШтрихкоды);
	Результат = Запрос.Выполнить();
	
	Возврат Результат.Выгрузить();
	
КонецФункции // ()

Функция ТекстЗапросаКорректировкаНазначенийГТДТоваров()
	
	Возврат "
	|ВЫБРАТЬ
	|	тчТовары.НомерСтроки КАК НомерСтроки,
	|	тчТовары.Номенклатура КАК Номенклатура,
	|	тчТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	тчТовары.Количество КАК Количество,
	|	тчТовары.Склад КАК Склад,
	|	тчТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	тчТовары.АналитикаУчетаНоменклатурыОприходование КАК АналитикаУчетаНоменклатурыОприходование,
	|	тчТовары.гф_IDкороба КАК гф_IDкороба
	|ПОМЕСТИТЬ вт_Товары
	|ИЗ
	|	&тзТовары КАК тчТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ШтрихкодыУпаковокТоваров.Ссылка КАК Ссылка,
	|	ШтрихкодыУпаковокТоваров.гф_НомерГТД КАК гф_НомерГТД,
	|	вт_Товары.гф_IDкороба КАК гф_IDкороба
	|ПОМЕСТИТЬ вт_ГТДАгрегатыШК
	|ИЗ
	|	Справочник.ШтрихкодыУпаковокТоваров КАК ШтрихкодыУпаковокТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ вт_Товары КАК вт_Товары
	|		ПО ШтрихкодыУпаковокТоваров.Ссылка = вт_Товары.гф_IDкороба.гф_Агрегация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА НЕ вт_ГТДАгрегатыШК.гф_НомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|			ТОГДА вт_ГТДАгрегатыШК.гф_НомерГТД
	|		ИНАЧЕ МАКСИМУМ(ШтрихкодыУпаковокТоваровВложенныеШтрихкоды.Штрихкод.гф_НомерГТД)
	|	КОНЕЦ КАК НомерГТД,
	|	вт_ГТДАгрегатыШК.гф_IDкороба КАК гф_IDкороба
	|ПОМЕСТИТЬ вт_ГТД_ШК
	|ИЗ
	|	вт_ГТДАгрегатыШК КАК вт_ГТДАгрегатыШК
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ШтрихкодыУпаковокТоваров.ВложенныеШтрихкоды КАК ШтрихкодыУпаковокТоваровВложенныеШтрихкоды
	|		ПО вт_ГТДАгрегатыШК.Ссылка = ШтрихкодыУпаковокТоваровВложенныеШтрихкоды.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	вт_ГТДАгрегатыШК.Ссылка,
	|	вт_ГТДАгрегатыШК.гф_НомерГТД,
	|	вт_ГТДАгрегатыШК.гф_IDкороба
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	вт_Товары.гф_IDкороба КАК гф_IDкороба,
	|	вт_Товары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	вт_Товары.АналитикаУчетаНоменклатурыОприходование КАК АналитикаУчетаНоменклатурыОприходование,
	|	вт_Товары.Количество КАК Количество,
	|	вт_Товары.КоличествоУпаковок КАК КоличествоУпаковок
	|ПОМЕСТИТЬ вт_ОбувныеТоварыПоКоробномуСкладу
	|ИЗ
	|	вт_Товары КАК вт_Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады.ДополнительныеРеквизиты КАК СкладыДополнительныеРеквизиты
	|		ПО вт_Товары.Склад = СкладыДополнительныеРеквизиты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК спрНоменклатура
	|		ПО вт_Товары.Номенклатура = спрНоменклатура.Ссылка
	|ГДЕ
	|	СкладыДополнительныеРеквизиты.Свойство.Имя = ""гф_СкладыТоварыВКоробах""
	|	И СкладыДополнительныеРеквизиты.Значение = ИСТИНА
	|	И спрНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ОбувнаяПродукция)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_Товары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	вт_Товары.АналитикаУчетаНоменклатурыОприходование КАК АналитикаУчетаНоменклатурыОприходование,
	|	СУММА(вт_Товары.Количество) КАК Количество,
	|	СУММА(вт_Товары.КоличествоУпаковок) КАК КоличествоУпаковок,
	|	вт_ГТД_ШК.НомерГТД КАК НомерГТД
	|ИЗ
	|	вт_ОбувныеТоварыПоКоробномуСкладу КАК вт_Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ГТД_ШК КАК вт_ГТД_ШК
	|		ПО вт_Товары.гф_IDкороба = вт_ГТД_ШК.гф_IDкороба
	|
	|СГРУППИРОВАТЬ ПО
	|	вт_Товары.АналитикаУчетаНоменклатуры,
	|	вт_Товары.АналитикаУчетаНоменклатурыОприходование,
	|	вт_ГТД_ШК.НомерГТД
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерГТД";
	
КонецФункции

Функция ПолучитьТаблицуГТДПоНоменклатре(тчШтрихкоды)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	тчШтрихкоды.ШтрихкодУпаковки КАК ШтрихкодУпаковки
	|ПОМЕСТИТЬ тчШтрихкоды
	|ИЗ
	|	&тчШтрихкоды КАК тчШтрихкоды
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	влШК.Штрихкод.Номенклатура КАК Номенклатура,
	|	влШК.Штрихкод.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА НЕ Агрегаты.гф_НомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|			ТОГДА Агрегаты.гф_НомерГТД
	|		КОГДА НЕ влШК.Штрихкод.гф_НомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|			ТОГДА влШК.Штрихкод.гф_НомерГТД
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|	КОНЕЦ КАК НомерГТД,
	|	1 КАК Количество
	|ПОМЕСТИТЬ втДанные
	|ИЗ
	|	тчШтрихкоды КАК тчШтрихкоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ШтрихкодыУпаковокТоваров КАК Агрегаты
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ШтрихкодыУпаковокТоваров.ВложенныеШтрихкоды КАК влШК
	|			ПО Агрегаты.Ссылка = влШК.Ссылка
	|		ПО тчШтрихкоды.ШтрихкодУпаковки = Агрегаты.Ссылка
	|ГДЕ
	|	Агрегаты.ТипУпаковки = ЗНАЧЕНИЕ(перечисление.ТипыУпаковок.МультитоварнаяУпаковка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ШК.Номенклатура,
	|	ШК.Характеристика,
	|	ШК.гф_НомерГТД,
	|	1
	|ИЗ
	|	тчШтрихкоды КАК тчШтрихкоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ШтрихкодыУпаковокТоваров КАК ШК
	|		ПО тчШтрихкоды.ШтрихкодУпаковки = ШК.Ссылка
	|ГДЕ
	|	ШК.ТипУпаковки = ЗНАЧЕНИЕ(перечисление.ТипыУпаковок.МаркированныйТовар)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДанные.Номенклатура КАК Номенклатура,
	|	втДанные.Характеристика КАК Характеристика,
	|	втДанные.НомерГТД КАК НомерГТД,
	|	СУММА(втДанные.Количество) КАК Количество
	|ПОМЕСТИТЬ вт_ДанныеСгруппировано
	|ИЗ
	|	втДанные КАК втДанные
	|
	|СГРУППИРОВАТЬ ПО
	|	втДанные.Номенклатура,
	|	втДанные.Характеристика,
	|	втДанные.НомерГТД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втДанные.Номенклатура КАК Номенклатура,
	|	втДанные.Характеристика КАК Характеристика,
	|	втДанные.НомерГТД КАК НомерГТД,  
	|	втДанные.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА втДанные.Номенклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ОбувнаяПродукция)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоОбувь
	|ИЗ
	|	вт_ДанныеСгруппировано КАК втДанные";
	
	Запрос.УстановитьПараметр("тчШтрихкоды", тчШтрихкоды);
	Результат = Запрос.Выполнить();
	ТаблицаГТДПоНоменклатуре = Результат.Выгрузить();
	
	Возврат ТаблицаГТДПоНоменклатуре;
	
КонецФункции // ()

Функция ПолучитьТаблицуГТДПоНоменклатуреКоробов(Источник)
	тз_Короба = Источник.гф_ТоварыВКоробах.Выгрузить();
	Запрос = Новый Запрос();
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	т.УпаковочныйЛист КАК УпаковочныйЛист
	|ПОМЕСТИТЬ вт_Короба
	|ИЗ
	|	&тз_Короба КАК т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	вт_короба.УпаковочныйЛист КАК УпаковочныйЛист,
	|	УЛ.гф_Агрегация КАК Агрегация
	|ПОМЕСТИТЬ вт_УЛ_Агрегация
	|ИЗ
	|	вт_Короба КАК вт_короба
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УпаковочныйЛист КАК УЛ
	|		ПО вт_короба.УпаковочныйЛист = УЛ.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ШтрихкодыУпаковокТоваровВложенныеШтрихкоды.Штрихкод.Номенклатура КАК Номенклатура,
	|	ШтрихкодыУпаковокТоваровВложенныеШтрихкоды.Штрихкод.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ШтрихкодыУпаковокТоваровВложенныеШтрихкоды.Ссылка.гф_НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|			ТОГДА ШтрихкодыУпаковокТоваровВложенныеШтрихкоды.Ссылка.гф_НомерГТД
	|		ИНАЧЕ ШтрихкодыУпаковокТоваровВложенныеШтрихкоды.Штрихкод.гф_НомерГТД
	|	КОНЕЦ КАК НомерГТД,
	|	СУММА(1) КАК Количество,
	|	ВЫБОР
	|		КОГДА ШтрихкодыУпаковокТоваровВложенныеШтрихкоды.Штрихкод.Номенклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ОбувнаяПродукция)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоОбувь
	|ИЗ
	|	вт_УЛ_Агрегация КАК вт_УЛ_Агрегация
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ШтрихкодыУпаковокТоваров.ВложенныеШтрихкоды КАК ШтрихкодыУпаковокТоваровВложенныеШтрихкоды
	|		ПО вт_УЛ_Агрегация.Агрегация = ШтрихкодыУпаковокТоваровВложенныеШтрихкоды.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ШтрихкодыУпаковокТоваровВложенныеШтрихкоды.Ссылка.гф_НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|			ТОГДА ШтрихкодыУпаковокТоваровВложенныеШтрихкоды.Ссылка.гф_НомерГТД
	|		ИНАЧЕ ШтрихкодыУпаковокТоваровВложенныеШтрихкоды.Штрихкод.гф_НомерГТД
	|	КОНЕЦ,
	|	ШтрихкодыУпаковокТоваровВложенныеШтрихкоды.Штрихкод.Номенклатура,
	|	ШтрихкодыУпаковокТоваровВложенныеШтрихкоды.Штрихкод.Характеристика,
	|	ВЫБОР
	|		КОГДА ШтрихкодыУпаковокТоваровВложенныеШтрихкоды.Штрихкод.Номенклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ОбувнаяПродукция)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ";
	
	Запрос.УстановитьПараметр("тз_Короба", тз_Короба);
	Результат = Запрос.Выполнить();
	ТаблицаГТДПоНоменклатуре = Результат.Выгрузить();
	
	Возврат ТаблицаГТДПоНоменклатуре;
	
КонецФункции // ()

Функция ПолучитьТаблицуАналитикиТоваровПоГТДОбщее(тчТовары, ТаблицаГТДПоНоменклатуре, Источник)
	
	Запрос = Новый Запрос;
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	тчТовары.АналитикаУчетаНоменклатуры КАК АУН,
	|	ЛОЖЬ КАК ЗаказКлиента
	|ПОМЕСТИТЬ тчТовары
	|ИЗ
	|	&тчТовары КАК тчТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	табГТД.Номенклатура КАК Номенклатура,
	|	табГТД.Характеристика КАК Характеристика,
	|	табГТД.НомерГТД КАК НомерГТД,
	|	табГТД.ЭтоОбувь КАК ЭтоОбувь,
	|	табГТД.Количество КАК Количество
	|ПОМЕСТИТЬ табГТД
	|ИЗ
	|	&табГТД КАК табГТД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	тчТовары.АУН КАК АналитикаУчетаНоменклатуры, 
	|	табГТД.НомерГТД КАК НомерГТД,
	|	табГТД.Количество КАК Количество,
	|	ЛОЖЬ КАК ЗаказКлиента
	|
	|ИЗ
	|	тчТовары КАК тчТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитикиУчетаНоменклатуры
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ табГТД КАК табГТД
	|			ПО КлючиАналитикиУчетаНоменклатуры.Номенклатура = табГТД.Номенклатура
	|				И КлючиАналитикиУчетаНоменклатуры.Характеристика = табГТД.Характеристика
	|				И (табГТД.ЭтоОбувь)
	|		ПО тчТовары.АУН = КлючиАналитикиУчетаНоменклатуры.Ссылка";
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.РеализацияТоваровУслуг") Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ЛОЖЬ КАК ЗаказКлиента", "тчТовары.ЗаказКлиента КАК ЗаказКлиента");
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("тчТовары", тчТовары);
	Запрос.УстановитьПараметр("табГТД", ТаблицаГТДПоНоменклатуре);
	
	Результат = Запрос.Выполнить();
	ТаблицаАналитикаТоваровПоГТД = Результат.Выгрузить();
	
	Возврат ТаблицаАналитикаТоваровПоГТД;
	
КонецФункции

#КонецОбласти
