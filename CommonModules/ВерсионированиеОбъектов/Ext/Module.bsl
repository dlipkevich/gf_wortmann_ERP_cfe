
&ИзменениеИКонтроль("ПерейтиНаВерсиюСервер")
Функция гф_ПерейтиНаВерсиюСервер(Ссылка, НомерВерсии, ТекстСообщенияОбОшибке, ОтменаПроведения)

	Если Не Пользователи.ЭтоПолноправныйПользователь() Тогда
		ВызватьИсключение НСтр("ru = 'Недостаточно прав для выполнения операции.';
		|en = 'Insufficient rights to perform the operation.'");
	КонецЕсли;

	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ВерсииОбъектов");
	ЭлементБлокировки.УстановитьЗначение("Объект", Ссылка);

	ЭлементБлокировки = Блокировка.Добавить(Ссылка.Метаданные().ПолноеИмя());
	ЭлементБлокировки.УстановитьЗначение("Ссылка", Ссылка);

	ИдентификаторОшибки = "ОшибкаВосстановления";

	НачатьТранзакцию();
	Попытка
		Блокировка.Заблокировать();
		ЗаблокироватьДанныеДляРедактирования(Ссылка);

		ПользовательскоеПредставлениеНомера = НомерВерсииВИерархии(Ссылка, НомерВерсии);
		Информация = СведенияОВерсииОбъекта(Ссылка, НомерВерсии);

		ДополнительныеРеквизиты = Неопределено;
		Если ТипЗнч(Информация.ВерсияОбъекта) = Тип("Структура") Тогда
			Если Информация.ВерсияОбъекта.Свойство("ДополнительныеРеквизиты", ДополнительныеРеквизиты) Тогда
				НайденныеРеквизиты = ДополнительныеРеквизиты.НайтиСтроки(Новый Структура("Идентификатор", Неопределено));
				Для Каждого Реквизит Из НайденныеРеквизиты Цикл
					ДополнительныеРеквизиты.Удалить(Реквизит);
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;

		ТекстСообщенияОбОшибке = "";
		#Удаление
		Объект = ВосстановитьОбъектПоXML(Информация.ВерсияОбъекта, ТекстСообщенияОбОшибке);
		#КонецУдаления
		#Вставка
		Объект = гф_ВосстановитьОбъектПоXML(Информация.ВерсияОбъекта, ТекстСообщенияОбОшибке, Ссылка);
		#КонецВставки		

		Если Не ПустаяСтрока(ТекстСообщенияОбОшибке) Тогда
			ОтменитьТранзакцию();
			Возврат "ОшибкаВосстановления";
		КонецЕсли;

		Объект.ДополнительныеСвойства.Вставить("ВерсионированиеОбъектовКомментарийКВерсии",
		СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Выполнен переход к версии №%1 от %2';
		|en = 'Object is restored to version %1 created on %2'"),
		ПользовательскоеПредставлениеНомера,
		Формат(Информация.ДатаВерсии, "ДЛФ=DT")));

		РежимЗаписи = Неопределено;

		Если ОбщегоНазначения.ЭтоДокумент(Объект.Метаданные()) И Объект.Метаданные().Проведение = Метаданные.СвойстваОбъектов.Проведение.Разрешить Тогда
			Если Объект.Проведен И Не ОтменаПроведения Тогда
				РежимЗаписи = РежимЗаписиДокумента.Проведение;
			ИначеЕсли Не Объект.Ссылка.Пустая() Тогда
				РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения;
			КонецЕсли;
			ИдентификаторОшибки = "ОшибкаПроведения";
		КонецЕсли;

		Если Ссылка.ПолучитьОбъект() <> Неопределено Тогда
			ЗаписатьДанныеТекущейВерсии(Ссылка);
		КонецЕсли;

		ВыполняетсяЗаписьОбъекта(Истина);
		Если ЗначениеЗаполнено(РежимЗаписи) Тогда
			Объект.Записать(РежимЗаписи);
		Иначе
			Объект.Записать();
		КонецЕсли;
		Если ЗначениеЗаполнено(ДополнительныеРеквизиты) Тогда
			Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Свойства") Тогда
				МодульУправлениеСвойствамиСлужебный = ОбщегоНазначения.ОбщийМодуль("УправлениеСвойствамиСлужебный");
				МодульУправлениеСвойствамиСлужебный.ПриВосстановленииВерсииОбъекта(Объект, ДополнительныеРеквизиты);
			КонецЕсли;
			ВерсионированиеОбъектовПереопределяемый.ПриВосстановленииВерсииОбъекта(Объект, ДополнительныеРеквизиты);
		КонецЕсли;
		ВыполняетсяЗаписьОбъекта(Ложь);

		ЗаписатьВерсиюОбъекта(Объект);
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ВыполняетсяЗаписьОбъекта(Ложь);
		ТекстСообщенияОбОшибке = КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
		Возврат ИдентификаторОшибки;
	КонецПопытки;

	Возврат "ВосстановлениеВыполнено";

КонецФункции

Функция гф_ВосстановитьОбъектПоXML(ДанныеОбъекта, ТекстСообщенияОбОшибке, Ссылка)

	УстановитьПривилегированныйРежим(Истина);

	ДвоичныеДанные = ДанныеОбъекта;
	Если ТипЗнч(ДанныеОбъекта) = Тип("Структура") Тогда
		ДвоичныеДанные = ДанныеОбъекта.Объект;
	КонецЕсли;

	ЧтениеFastInfoSet = Новый ЧтениеFastInfoSet;
	ЧтениеFastInfoSet.УстановитьДвоичныеДанные(ДвоичныеДанные);

	Попытка
		
		Объект = ПрочитатьXML(ЧтениеFastInfoSet); 
		
		УспешноВосстановлен = Истина;
		
	Исключение
		
		УспешноВосстановлен = Ложь;
		
	КонецПопытки;
	
	Если Не УспешноВосстановлен Тогда
		
        Попытка
			
			РезультатРазбора = ВерсионированиеОбъектов.РазборПредставленияОбъектаXML(ДвоичныеДанные, Ссылка);
                
            Объект = Ссылка.ПолучитьОбъект();
			
            //Шапка
			РеквизитыШапки = Новый Структура;
            Для Каждого СтрокаРеквизитов из РезультатРазбора.Реквизиты Цикл
				
				ИмяРеквизита = СтрокаРеквизитов.НаименованиеРеквизита;
				
                Если ИмяРеквизита = "Ref" Тогда
                    Продолжить;
				КонецЕсли;
				
				РеквизитыШапки.Вставить(ИмяРеквизита, СтрокаРеквизитов.ЗначениеРеквизита);
				
			КонецЦикла;
			ЗаполнитьЗначенияСвойств(Объект, РеквизитыШапки);
			
			//ТабличныеЧасти
			Для Каждого ЭлементКоллекции Из РезультатРазбора.ТабличныеЧасти Цикл
				
				ИмяТЧ = ЭлементКоллекции.Ключ;
				ТЗ    = ЭлементКоллекции.Значение; 
				
				Если ТЗ <> Неопределено И Объект.Метаданные().ТабличныеЧасти.Найти(ИмяТЧ) <> Неопределено Тогда
					
					Объект[ИмяТЧ].Очистить();
					
					Для Каждого СтрокаТЗ Из ТЗ Цикл
						НоваяСтрокаТЧ = Объект[ИмяТЧ].Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрокаТЧ, СтрокаТЗ);
					КонецЦикла;
					
				КонецЕсли;
				
			КонецЦикла;
			
			УспешноВосстановлен = Истина;
			
		Исключение
			
            УспешноВосстановлен = Ложь;
			
		КонецПопытки;
		
	КонецЕсли;
	
	Если Не УспешноВосстановлен Тогда
		
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Версионирование';
			|en = 'Versioning'", ОбщегоНазначения.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка,,, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
		ТекстСообщенияОбОшибке = НСтр("ru = 'Не удалось перейти на выбранную версию.
			|Возможная причина: версия объекта была записана в другой версии программы.
			|Техническая информация об ошибке: %1';
			|en = 'Cannot switch to the selected version.
			|Possible causes: the object version was saved in another application version.
			|Error technical information: %1'");
		ТекстСообщенияОбОшибке = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщенияОбОшибке, КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		
		Возврат Неопределено;
		
	КонецЕсли;

	Возврат Объект;

КонецФункции
