
#Область ОбработчикиСобытийФормы 

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	флТоварыВКоробах = Параметры.флТоварыВКоробах;
	Если флТоварыВКоробах Тогда
		Элементы.ДанныеФайлаНоменклатура.Видимость = Ложь;
	Иначе
		Элементы.ДанныеФайлаВариантКомплектации.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры 

&НаКлиенте
Процедура ПутьКФайлуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Заголовок = "Выберите файл загрузки";
	Диалог.Фильтр = "Файлы Excel (*.xls, *.xlsx)|*.xl*";
	Диалог.ПолноеИмяФайла = ""; 	 
    Диалог.МножественныйВыбор = Ложь;
	
	Если Диалог.Выбрать() Тогда
		ПутьКФайлу = Диалог.ПолноеИмяФайла;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗаполнитьЗаказКлиента(Команда)
	
	Результат = ПолучитьМассивСтруктур();
	Закрыть(Результат);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьМассивСтруктур()
	МассивСтруктур = Новый Массив;
	Для Каждого СтрокаТЗ Из ДанныеФайла Цикл
		нс = Новый Структура("Номенклатура, Характеристика, ВариантКомплектации, Добавить, Удалить");
		ЗаполнитьЗначенияСвойств(нс, СтрокаТЗ);
		МассивСтруктур.Добавить(нс);
	КонецЦикла;
	Возврат МассивСтруктур;
КонецФункции

&НаСервере
Функция НайтиХарактеристикуНоменклатуры(Номенклатура, НаименованиеХарактеристики)
	
	Если Номенклатура.ИспользованиеХарактеристик = 
		Перечисления.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры  Тогда
		Владелец = Номенклатура.ВидНоменклатуры;
		
	ИначеЕсли  Номенклатура.ИспользованиеХарактеристик = 
		Перечисления.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеСДругимВидомНоменклатуры Тогда
		
		Владелец = Номенклатура.ВладелецХарактеристик;
	Иначе
		Владелец = Номенклатура;
	КонецЕсли;
	
	Возврат Справочники.ХарактеристикиНоменклатуры.НайтиПоНаименованию(НаименованиеХарактеристики, Истина, , Владелец);
КонецФункции	

&НаСервере
Функция ПолучитьОсновнойВариантКомплектации(Номенклатура, Характеристика)
			
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ВариантыКомплектацииНоменклатуры КАК Таблица
	|ГДЕ
	|	Таблица.Владелец = &Номенклатура
	|	И Таблица.Характеристика = &Характеристика
	|   И Таблица.ПометкаУдаления = Ложь
	|");
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("Характеристика", Характеристика);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Результат = Выборка.Ссылка;
	Иначе
		Результат = Неопределено;
	КонецЕсли;

	Возврат Результат;
	
КонецФункции

&НаСервере
Функция НоменклатураПоАртикулу(Артикул) 
	
	Возврат Справочники.Номенклатура.НайтиПоРеквизиту("Артикул", Артикул);
		
КонецФункции	

&НаКлиенте
Процедура ПрочитатьФайл(Команда)
	
	ДанныеФайла.Очистить();
	
	Попытка 
		ex = ПолучитьCOMобъект("", "Excel.Application");
	Исключение
		СообщитьПользователю("Excel Application не создан!");
		Возврат;
	КонецПопытки;
	
	Попытка
		ex.workbooks.open(ПутьКФайлу, 1);
	Исключение
		СообщитьПользователю("Файл перемещен или удален!");
		Возврат;
	КонецПопытки; 
	
	RCount = ex.ActiveSheet.UsedRange.Rows.Count();
	
	СтрокаЗагрузки  = 2;
	Для j = СтрокаЗагрузки По RCount Цикл
			
		Артикул = ex.ActiveSheet.Cells(j, 1).Text;
		Если НЕ ЗначениеЗаполнено(СокрЛП(Артикул)) Тогда
			Продолжить;
		КонецЕсли;
		Номенклатура = НоменклатураПоАртикулу(СокрЛП(Артикул));
		Если Не ЗначениеЗаполнено(Номенклатура) Тогда
			ТекстСообщения = "Не найдена номенклатура с артикулом " + Артикул + " в строке "+ Строка(j);
			СообщитьПользователю(ТекстСообщения);
			Продолжить;
		КонецЕсли;	
		
		ХарактеристикаНаименование = ex.ActiveSheet.Cells(j, 2).Text;
		Если НЕ ЗначениеЗаполнено(СокрЛП(ХарактеристикаНаименование)) Тогда
			Продолжить;
		КонецЕсли;
		
		Характеристика = НайтиХарактеристикуНоменклатуры(Номенклатура, ХарактеристикаНаименование);
		Если НЕ ЗначениеЗаполнено(Характеристика) Тогда 
			ТекстСообщения = "Не найдена характеристика для размера " + ХарактеристикаНаименование;
			СообщитьПользователю(ТекстСообщения);
			 Продолжить;
		КонецЕсли;	
				
		Если флТоварыВКоробах Тогда
			ВариантКомплектации = ПолучитьОсновнойВариантКомплектации(Номенклатура, Характеристика);
				
			Если ВариантКомплектации = Неопределено Тогда
				ТекстСообщения = "Не найден вариант комплектации для номенклатуры " +
									Строка(Номенклатура) + " с характеристикой " +
									Строка(Характеристика) + ". Данные по строке XSL " +
									Строка(j) + "файла XSL не загружены.";
				СообщитьПользователю(ТекстСообщения);
        		Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		Добавить = 0;
		_Добавить = ex.ActiveSheet.Cells(j, 3).Value;
		Если ЗначениеЗаполнено(_Добавить) Тогда
			Попытка
				Добавить = Число(СокрЛП(_Добавить));
			Исключение
				ТекстСообщения = "Ошибка преобразования в число[" +
									_Добавить + "] Данные по строке XSL " +
									Строка(j) + " файла XSL не загружены.";
				СообщитьПользователю(ТекстСообщения);
				Продолжить;
			КонецПопытки;
		КонецЕсли;
		
		Удалить = 0;
		_Удалить = ex.ActiveSheet.Cells(j, 4).Value;
		Если ЗначениеЗаполнено(_Удалить) Тогда
			Попытка
				Удалить = Число(СокрЛП(_Удалить));
			Исключение
				ТекстСообщения = "Ошибка преобразования в число[" +
					_Удалить + "] Данные по строке XSL " +
					Строка(j) + " файла XSL не загружены.";
				СообщитьПользователю(ТекстСообщения);
				Продолжить;
			КонецПопытки;
		КонецЕсли;

		НоваяСтрока = ДанныеФайла.Добавить();
								
		НоваяСтрока.Артикул = Артикул;
		НоваяСтрока.ХарактеристикаНаименование = ХарактеристикаНаименование;
		НоваяСтрока.Добавить = Добавить;
		НоваяСтрока.Удалить = Удалить;
		НоваяСтрока.Номенклатура = Номенклатура;
		НоваяСтрока.Характеристика = Характеристика;
		НоваяСтрока.ВариантКомплектации = ВариантКомплектации;
		
	КонецЦикла;	
	
	ex.workbooks.Close();
	ex.quit();
	
КонецПроцедуры  

&НаКлиенте
Процедура СообщитьПользователю(Текст)
	
	Сообщение = Новый СообщениеПользователю();
	Сообщение.Текст = Текст;
	Сообщение.Сообщить();
	
КонецПроцедуры	

#КонецОбласти
