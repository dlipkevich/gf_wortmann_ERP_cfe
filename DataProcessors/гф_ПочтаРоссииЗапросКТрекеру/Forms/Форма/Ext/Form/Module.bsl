#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЧасовМеждуЗапросами = Константы.гф_ПочтаРоссииПромежутокМеждуЗапросамиКОдномуТрекНомеру.Получить();
	
	Задание = РегламентныеЗадания.НайтиПредопределенное(Метаданные.РегламентныеЗадания.гф_ПочтаРоссии_ЗапросКТрекеру);
	
	ЗапрашиватьДанныеПоРасписанию = Задание.Использование;    
	
	Элементы.ГруппаНастройкиЗадания.Видимость = ЗапрашиватьДанныеПоРасписанию;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаЗапрос(Команда) 
	
	КомандаЗапросНаСервере();
	
	ОповеститьОбИзменении(Объект.ПочтовоеОтправление);
	
КонецПроцедуры

&НаСервере
Процедура КомандаЗапросНаСервере()   
	
	УчетнаяЗапись		= Объект.УчетнаяЗапись;
	ПочтовоеОтправление	= Объект.ПочтовоеОтправление;
	
	Ошибки = Новый Массив;
	
	ОтветМассив = гф_ПочтаРоссии.ПолучитьДанныеОтслеживания(УчетнаяЗапись, ПочтовоеОтправление, Ошибки);
	
	Если Ошибки.Количество() Тогда
		
		Для Каждого Ошибка Из Ошибки Цикл
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Ошибка);
			
		КонецЦикла;	 
		
		Возврат;
		
	КонецЕсли;	    
	
	Объект.История.Очистить();
	
	Для Каждого СтрокаОтвета Из ОтветМассив Цикл
		
		НоваяСтрока = Объект.История.Добавить();
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОтвета.Операция);
		
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьРасписаниеНаСервере(); 

	Задание = РегламентныеЗадания.НайтиПредопределенное(Метаданные.РегламентныеЗадания.гф_ПочтаРоссии_ЗапросКТрекеру);
	
	РасписаниеРегламентногоЗадания = Задание.Расписание;

КонецПроцедуры

&НаСервере
Процедура ЗаписатьРасписаниеНаСервере(); 

	Задание = РегламентныеЗадания.НайтиПредопределенное(Метаданные.РегламентныеЗадания.гф_ПочтаРоссии_ЗапросКТрекеру);
	
	Задание.Расписание = РасписаниеРегламентногоЗадания;
	
	Задание.Записать();

КонецПроцедуры

&НаКлиенте
Процедура КомандаРасписание(Команда) 
	
	ПрочитатьРасписаниеНаСервере();            
	
	Диалог = Новый ДиалогРасписанияРегламентногоЗадания(РасписаниеРегламентногоЗадания);
	
	ДополнительныеПараметры = Новый Структура;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриУстановкеРасписания", ЭтотОбъект, ДополнительныеПараметры);
	
	Диалог.Показать(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриУстановкеРасписания(Результат, ДополнительныеПараметры) Экспорт 
	
	РасписаниеРегламентногоЗадания = Результат;
	
	ЗаписатьРасписаниеНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы   

&НаСервереБезКонтекста
Процедура ЧасовМеждуЗапросамиПриИзмененииНаСервере(ЧасовМеждуЗапросами)

	Константы.гф_ПочтаРоссииПромежутокМеждуЗапросамиКОдномуТрекНомеру.Установить(ЧасовМеждуЗапросами);
	
КонецПроцедуры

&НаКлиенте
Процедура ЧасовМеждуЗапросамиПриИзменении(Элемент)
	
	ЧасовМеждуЗапросамиПриИзмененииНаСервере(ЧасовМеждуЗапросами);
	
КонецПроцедуры

&НаСервере
Процедура ЗапрашиватьДанныеПоРасписаниюПриИзмененииНаСервере()
	
	Задание = РегламентныеЗадания.НайтиПредопределенное(Метаданные.РегламентныеЗадания.гф_ПочтаРоссии_ЗапросКТрекеру);
	
	Задание.Использование = ЗапрашиватьДанныеПоРасписанию;
	
	Задание.Записать();
	
	Элементы.ГруппаНастройкиЗадания.Видимость = ЗапрашиватьДанныеПоРасписанию;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапрашиватьДанныеПоРасписаниюПриИзменении(Элемент)

	ЗапрашиватьДанныеПоРасписаниюПриИзмененииНаСервере();
	
КонецПроцедуры

#КонецОбласти

