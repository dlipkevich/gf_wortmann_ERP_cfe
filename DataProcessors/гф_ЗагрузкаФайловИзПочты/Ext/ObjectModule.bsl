#Область ПрограммныйИнтерфейс

Процедура ЗагрузкаФайловИзПочты() Экспорт
	
	Если НЕ ЗначениеЗаполнено(ДатаОтбораПисем) Тогда
		ДатаОтбораПисем = ТекущаяДатаСеанса();
	КонецЕсли;
	
	ТолькоНовыеПисьма = Истина;
	
	ИнформацияОЗагруженныхФайлах = ПолучитьОписаниеИнформацииОФайлах();
	
	ЗагрузитьФайлыИзПочтовыхЯщиков(ИнформацияОЗагруженныхФайлах);
	
	Если ИнформацияОЗагруженныхФайлах.ВсегоЗагруженоФайлов > 0 Тогда  
		
		Для Каждого ТекФайл Из ИнформацияОЗагруженныхФайлах.Файлы Цикл
			
			Если (Не ЗначениеЗаполнено(ТекФайл.ИмяФайлаНаКлиенте)) или (Не ЗначениеЗаполнено(ТекФайл.АдресВХранилище))
				Тогда
				Продолжить;
			КонецЕсли;
			
			ИмяИРасширениеФайла = ПолучитьИмяИРасширениеФайла(ТекФайл.ИмяФайлаНаКлиенте);
			РасширениеФайла = ИмяИРасширениеФайла.Расширение;
			
			ИмяПромежуточногоФайла = ПолучитьИмяВременногоФайла(РасширениеФайла);
			
			ДвоичныеДанныеФайла = ПолучитьИзВременногоХранилища(ТекФайл.АдресВХранилище);
			ДвоичныеДанныеФайла.Записать(ИмяПромежуточногоФайла);

			ПолноеИмяФайла = ТекФайл.КаталогВыгрузки + "\" + ТекФайл.ИмяФайлаНаКлиенте;

			ПереместитьФайл(ИмяПромежуточногоФайла, ПолноеИмяФайла);
			
			УдалитьНаСервереФайл(ТекФайл);
		КонецЦикла;
		
		НомерСтроки = 1;
		
		ТекстСообщения = "Всего загружено файлов: " + Формат(ИнформацияОЗагруженныхФайлах.ВсегоЗагруженоФайлов, "ЧДЦ=0");
		Для Каждого ТекЯщик Из ИнформацияОЗагруженныхФайлах.ПочтовыеЯщики Цикл
			ТекстСообщения = ТекстСообщения
			+ Символы.ПС
			+ " " + Формат(НомерСтроки, "ЧДЦ=0") + ") Из почтового ящика """ + ТекЯщик.Профиль + """: "
			+ Формат(ТекЯщик.ЗагруженоФайлов, "ЧДЦ=0");
			
			НомерСтроки = НомерСтроки + 1;
		КонецЦикла;
		
		ЗаписьЖурналаРегистрации("ОбработкаЗакгрузкаФайловИзПочты.ЗагрузкаУспешна", УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_ЗагрузкаФайловИзПочты, , ТекстСообщения);
		
	Иначе                                            
		УдалитьНаСервереВсеФайлы(ИнформацияОЗагруженныхФайлах.Файлы);
		ТекстСообщения = "Нет файлов для загрузки";

		ЗаписьЖурналаРегистрации("ОбработкаЗакгрузкаФайловИзПочты.ЗагрузкаНеВыполнена", УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_ЗагрузкаФайловИзПочты, , ТекстСообщения);

	КонецЕсли;

КонецПроцедуры 

Процедура УдалитьНаСервереФайл(УдаляемыйФайл)
	
	Попытка
		Если УдаляемыйФайл.ИмяФайлаНаСервере <> ""
			Тогда
				УдалитьФайлы(УдаляемыйФайл.ИмяФайлаНаСервере);
		КонецЕсли
	Исключение
	КонецПопытки;
		
	Попытка
		Если УдаляемыйФайл.АдресВХранилище <> ""
			Тогда
				УдалитьИзВременногоХранилища(УдаляемыйФайл.АдресВХранилище);
		КонецЕсли
	Исключение
	КонецПопытки;
	
КонецПроцедуры 

Процедура УдалитьНаСервереВсеФайлы(УдаляемыеФайлы)
	
	Для Каждого ТекФайл Из УдаляемыеФайлы Цикл
		Попытка
			Если ТекФайл.ИмяФайлаНаСервере <> "" Тогда
					УдалитьФайлы(ТекФайл.ИмяФайлаНаСервере);
			КонецЕсли
		Исключение
		КонецПопытки;
		
		Попытка
			Если ТекФайл.АдресВХранилище <> "" Тогда
					УдалитьИзВременногоХранилища(ТекФайл.АдресВХранилище);
			КонецЕсли
		Исключение
		КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьОписаниеИнформацииОФайлах()

	ИнформацияОЗагруженныхФайлах = Новый Структура;
	ИнформацияОЗагруженныхФайлах.Вставить("ПочтовыеЯщики", Новый Массив);
	ИнформацияОЗагруженныхФайлах.Вставить("Файлы", Новый Массив);
	ИнформацияОЗагруженныхФайлах.Вставить("ВсегоЗагруженоФайлов", 0);

	Возврат ИнформацияОЗагруженныхФайлах;
КонецФункции

Процедура ЗагрузитьФайлыИзПочтовыхЯщиков(ИнформацияОЗагруженныхФайлах, ПочтовыеЯщики = Неопределено) Экспорт
	
	ВсегоЗагруженоФайлов = 0;
	
	Если ПочтовыеЯщики = Неопределено Тогда
		ПочтовыеЯщики = ПолучитьДанныеПочтовыхЯщиков();
	КонецЕсли;
	
	Для Каждого ТекЯщик Из ПочтовыеЯщики Цикл
		ЗагруженоФайлов = ЗагрузитьФайлыИзПочтовогоЯщика(ТекЯщик, ИнформацияОЗагруженныхФайлах.Файлы);
		
		ИнформацияОПочтовомЯщике = Новый Структура;
		ИнформацияОПочтовомЯщике.Вставить("EMail", ТекЯщик.Профиль);
		ИнформацияОПочтовомЯщике.Вставить("ЗагруженоФайлов", ЗагруженоФайлов);
		
		ИнформацияОЗагруженныхФайлах.ПочтовыеЯщики.Добавить(ИнформацияОПочтовомЯщике);
		
		ВсегоЗагруженоФайлов = ВсегоЗагруженоФайлов + ЗагруженоФайлов;
	КонецЦикла;
	
	ИнформацияОЗагруженныхФайлах.ВсегоЗагруженоФайлов = ВсегоЗагруженоФайлов;
	
КонецПроцедуры 

Функция ПолучитьДанныеПочтовыхЯщиков()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	гф_РеквизитыПочтыДляЗагрузкиВКаталоги.EMail КАК Профиль,
		|	гф_РеквизитыПочтыДляЗагрузкиВКаталоги.EMail.Наименование КАК EMail,
		|	гф_РеквизитыПочтыДляЗагрузкиВКаталоги.EMail.ПротоколВходящейПочты КАК ПротоколВходящейПочты,
		//|	гф_РеквизитыПочтыДляЗагрузкиВКаталоги.Логин КАК Логин,
		//|	гф_РеквизитыПочтыДляЗагрузкиВКаталоги.Пароль КАК Пароль,
		//|	гф_РеквизитыПочтыДляЗагрузкиВКаталоги.АдресСервера КАК АдресСервера,
		//|	гф_РеквизитыПочтыДляЗагрузкиВКаталоги.Порт КАК Порт,
		//|	гф_РеквизитыПочтыДляЗагрузкиВКаталоги.IMAP КАК IMAP,
		//|	гф_РеквизитыПочтыДляЗагрузкиВКаталоги.SSL КАК SSL,
		//|	гф_РеквизитыПочтыДляЗагрузкиВКаталоги.Таймаут КАК Таймаут,
		|	гф_РеквизитыПочтыДляЗагрузкиВКаталоги.КаталогЗагрузки КАК КаталогЗагрузки
		|ИЗ
		|	Справочник.гф_РеквизитыПочтыДляЗагрузкиВКаталоги КАК гф_РеквизитыПочтыДляЗагрузкиВКаталоги";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ДанныеПочтовыхЯщиков = РезультатЗапроса.Выгрузить();
	
	Возврат ДанныеПочтовыхЯщиков;

КонецФункции

Функция ЗагрузитьФайлыИзПочтовогоЯщика(ПочтовыйЯщик, ЗагруженныеФайлы)
	
	//ПочтовыйПрофиль = ПолучитьПочтовыйПрофиль(ПочтовыйЯщик);
	//ПочтовыйПрофиль = РаботаСПочтовымиСообщениямиСлужебный.ИнтернетПочтовыйПрофиль(ПочтовыйЯщик.Профиль);
	
	//Соединение = Новый ИнтернетПочта;
	ПротоколПодключения = ?(ПочтовыйЯщик.ПротоколВходящейПочты = "IMAP", ПротоколИнтернетПочты.IMAP, ПротоколИнтернетПочты.POP3);

	Соединение = ОтправкаПочтовыхСообщений.УстановитьСоединениеССервером(ПочтовыйЯщик.Профиль, Истина, ПротоколПодключения);
	
	//Попытка
	//	Соединение.Подключиться(ПочтовыйПрофиль, ПротоколПодключения);
	//Исключение  
	//	ЗаписьЖурналаРегистрации("ОбработкаЗакгрузкаФайловИзПочты.ОшибкаПодключенияКПрофилю", УровеньЖурналаРегистрации.Предупреждение, Метаданные.Обработки.гф_ЗагрузкаФайловИзПочты);
	//	ТекстОшибки = ОписаниеОшибки();
	//	СтрокаСообщения = "Ошибка при установке соединения с профилем " + ПочтовыйЯщик.EMail + ":  " + ТекстОшибки;
	//	ЗаписьЖурналаРегистрации("ОбработкаЗакгрузкаФайловИзПочты.ОшибкаПриПодключенииКПрофилю", УровеньЖурналаРегистрации.Предупреждение, Метаданные.Обработки.гф_ЗагрузкаФайловИзПочты,,СтрокаСообщения);
	//	Возврат 0;
	//КонецПопытки;
	
	Если Соединение = Неопределено Тогда
		ЗаписьЖурналаРегистрации("ОбработкаЗакгрузкаФайловИзПочты.ОшибкаПодключенияКПрофилю", УровеньЖурналаРегистрации.Предупреждение, Метаданные.Обработки.гф_ЗагрузкаФайловИзПочты);
		ТекстОшибки = ОписаниеОшибки();
		СтрокаСообщения = "Ошибка при установке соединения с профилем " + ПочтовыйЯщик.Профиль + ":  " + ТекстОшибки;
		ЗаписьЖурналаРегистрации("ОбработкаЗакгрузкаФайловИзПочты.ОшибкаПриПодключенииКПрофилю", УровеньЖурналаРегистрации.Предупреждение, Метаданные.Обработки.гф_ЗагрузкаФайловИзПочты,,СтрокаСообщения);
		Возврат 0;
	КонецЕсли;	
		
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("ПослеДатыОтправления ", НачалоДня(ДатаОтбораПисем));
	Если ТолькоНовыеПисьма
		Тогда
			ПараметрыОтбора.Вставить("Прочитанные", Ложь);
	КонецЕсли;
	
	Заголовки = Соединение.ПолучитьЗаголовки(ПараметрыОтбора);
	Если Заголовки.Количество() = 0 Тогда
		ЗаписьЖурналаРегистрации("ОбработкаЗакгрузкаФайловИзПочты.ОтсутствуютДанныеВЯщике", УровеньЖурналаРегистрации.Предупреждение, Метаданные.Обработки.гф_ЗагрузкаФайловИзПочты);
		ТекстОшибки = ОписаниеОшибки();
		СтрокаСообщения = "В почтовом ящике """ + ПочтовыйЯщик.Профиль + """ не найдено входящих сообщений.  " + ТекстОшибки;
		ЗаписьЖурналаРегистрации("ОбработкаЗакгрузкаФайловИзПочты.ОтсутствуютДанныеВЯщике", УровеньЖурналаРегистрации.Предупреждение, Метаданные.Обработки.гф_ЗагрузкаФайловИзПочты,,СтрокаСообщения);
		Возврат 0;
	Иначе 
		ЗаписьЖурналаРегистрации("ОбработкаЗакгрузкаФайловИзПочты.ОтсутствуютДанныеВЯщике", УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_ЗагрузкаФайловИзПочты);
		СтрокаСообщения = "В почтовом ящике """ + ПочтовыйЯщик.Профиль + """ найдено входящих сообщений: " + Формат(Заголовки.Количество(), "ЧДЦ=0");
		ЗаписьЖурналаРегистрации("ОбработкаЗакгрузкаФайловИзПочты.ОтсутствуютДанныеВЯщике", УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_ЗагрузкаФайловИзПочты,,СтрокаСообщения);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрокаСообщения);
	КонецЕсли;
	
	// Загрузка сообщений в массив
	Письма = Соединение.Выбрать(Ложь, Заголовки, Истина);
	
	ТекКаталог = ПочтовыйЯщик.КаталогЗагрузки;
	
	ЗагруженоФайловВсего = 0;
	Для Каждого ТекПисьмо Из Письма Цикл
		ЗагруженоФайлов = ЗагрузитьФайлыИзПисьма(ТекПисьмо, ЗагруженныеФайлы, ПочтовыйЯщик.Профиль, ТекКаталог);
		ЗагруженоФайловВсего = ЗагруженоФайловВсего + ЗагруженоФайлов;
	КонецЦикла;
	
	// ++ Галфинд_ДомнышеваКР_30_11_2023 
	// e1cib/data/Задача.ЗадачаИсполнителя?ref=8eabb083fed1320811ee822b261c6d64
	Соединение.УдалитьСообщения(Заголовки);
	Соединение.ОчиститьУдаленныеСообщения();
	Соединение.Отключиться();
	// -- Галфинд_ДомнышеваКР_30_11_2023
	
	Возврат ЗагруженоФайловВсего;
	
КонецФункции

Функция ПолучитьПочтовыйПрофиль(ПочтовыйЯщик)
	
	Профиль = Новый ИнтернетПочтовыйПрофиль;

	Если ПочтовыйЯщик.IMAP
		Тогда
			// Логин пользователя
			Профиль.ПользовательIMAP = ПочтовыйЯщик.Логин;
			
			// Пароль к почтовому ящику
			Профиль.ПарольIMAP = ПочтовыйЯщик.Пароль;
			
			// POP3 сервер
			Профиль.АдресСервераIMAP = ПочтовыйЯщик.АдресСервера;
			
			// Порт POP3 сервера
			Профиль.ПортIMAP = ?(ПочтовыйЯщик.Порт > 0, ПочтовыйЯщик.Порт, 993);
			
			Профиль.ИспользоватьSSLIMAP = ПочтовыйЯщик.SSL;
		Иначе
			// Логин пользователя
			Профиль.Пользователь = ПочтовыйЯщик.Логин;
			
			// Пароль к почтовому ящику
			Профиль.Пароль = ПочтовыйЯщик.Пароль;
			
			// POP3 сервер
			Профиль.АдресСервераPOP3 = ПочтовыйЯщик.АдресСервера;
			
			// Порт POP3 сервера
			Профиль.ПортPOP3 = ?(ПочтовыйЯщик.Порт > 0, ПочтовыйЯщик.Порт, 995);
			
			Профиль.ИспользоватьSSLPOP3 = ПочтовыйЯщик.SSL;
	КонецЕсли;
	
	// Время ожидания выполнения операции в секундах
	Профиль.Таймаут = ?(ПочтовыйЯщик.Таймаут > 0, ПочтовыйЯщик.Таймаут, 50);
	
	Возврат Профиль;
	
КонецФункции

Функция ЗагрузитьФайлыИзПисьма(Письмо, ЗагруженныеФайлы, EMail, ТекКаталог)
	
	ИнформацияОПисьме = Новый Структура;
	
	ИнформацияОПисьме.Вставить("Дата", Письмо.ДатаОтправления);
	ИнформацияОПисьме.Вставить("Тема", Письмо.Тема);
	ИнформацияОПисьме.Вставить("Отправитель", Письмо.Отправитель.Адрес);
	
	ТекстПисьма = "";
	
	Для каждого ТекстСообщения Из Письмо.Тексты Цикл
		ТекстПисьма = ТекстПисьма + ТекстСообщения.Текст;
	КонецЦикла; 
		
	ЗагруженоФайловИзВложений = ПолучитьВложенияПисьма(Письмо, ЗагруженныеФайлы, EMail, ИнформацияОПисьме, ТекКаталог);
	
	ЗагруженоФайловВсего = ЗагруженоФайловИзВложений; 
	
	Возврат ЗагруженоФайловВсего;
КонецФункции

Функция ПолучитьВложенияПисьма(Письмо, ВложенияПисьма, EMail, ИнформацияОПисьме, ТекКаталог)
	
	ЗагруженоФайлов = 0;
	
	Для Каждого ТекВложение Из Письмо.Вложения Цикл
		
		ИмяФайла = ТекВложение.ИмяФайла;             
		ИмяИРасширениеФайла = ПолучитьИмяИРасширениеФайла(ИмяФайла);
		РасширениеФайла = ИмяИРасширениеФайла.Расширение;
		СодержимоеФайла = ТекВложение.Данные;
		
		ЗагруженоФайловОбщих = 0;
		ЗагруженоФайловZIP = 0;
		
		Если (РасширениеФайла = "zip") Тогда
				Попытка
					ЧтениеZIP = Новый ЧтениеZipФайла(СодержимоеФайла.ОткрытьПотокДляЧтения());
					ЗагруженоФайловZIP = ПрочитатьФайлыАрхиваZIP("", ЧтениеZIP, ВложенияПисьма, ИнформацияОПисьме, ТекКаталог);
				Исключение            
					ЗагруженоФайловZIP = 0;
					//Сообщение = Новый СообщениеПользователю();
					//Сообщение.Текст = "Не удалось распаковать файлы архива """ + ИмяФайла + """" + Символы.ПС
					//					+ "Почтовый ящик: " + EMail + Символы.ПС
					//					+ "Дата: " + Формат(ИнформацияОПисьме.Дата, "ДЛФ=DT") + Символы.ПС
					//					+ "Тема: " + ИнформацияОПисьме.Тема + Символы.ПС
					//					+ "Отправитель: " + ИнформацияОПисьме.Отправитель + Символы.ПС
					//					+ ОписаниеОшибки();
					//Сообщение.Сообщить();
					ЗаписьЖурналаРегистрации("ОбработкаЗакгрузкаФайловИзПочты.НеУдалосьРаспаковатьАрхив", УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_ЗагрузкаФайловИзПочты);
					ТекстОшибки = ОписаниеОшибки();
					СтрокаСообщения = "Не удалось распаковать файлы архива """ + ИмяФайла + """" + Символы.ПС
										+ "Почтовый ящик: " + EMail + Символы.ПС
										+ "Дата: " + Формат(ИнформацияОПисьме.Дата, "ДЛФ=DT") + Символы.ПС
										+ "Тема: " + ИнформацияОПисьме.Тема + Символы.ПС
										+ "Отправитель: " + ИнформацияОПисьме.Отправитель + Символы.ПС + ТекстОшибки;
					ЗаписьЖурналаРегистрации("ОбработкаЗакгрузкаФайловИзПочты.ОтсутствуютДанныеВЯщике", УровеньЖурналаРегистрации.Информация, Метаданные.Обработки.гф_ЗагрузкаФайловИзПочты,,СтрокаСообщения);
				КонецПопытки
		Иначе
			ДанныеФайла = Новый Структура;
			ДанныеФайла.Вставить("СодержимоеФайла", СодержимоеФайла);
			ДанныеФайла.Вставить("ИмяИРасширениеФайла", ИмяИРасширениеФайла);
			
			ЗагруженоФайловОбщих = ПрочитатьФайлОбщий("", ДанныеФайла, ВложенияПисьма, ИнформацияОПисьме, ТекКаталог);
		КонецЕсли;
		
		ЗагруженоФайлов = ЗагруженоФайлов + ЗагруженоФайловОбщих + ЗагруженоФайловZIP;
	КонецЦикла;
	
	Возврат ЗагруженоФайлов;
КонецФункции

Функция ПолучитьИмяИРасширениеФайла(ИмяФайла)
	
	Рез = Новый Структура;
	Рез.Вставить("ИмяБезРасширения", ИмяФайла);
	Рез.Вставить("Расширение", "");
	
	ПоложениеТочки = СтрНайти(ИмяФайла, ".", НаправлениеПоиска.СКонца);
	
	Если (ПоложениеТочки > 0) и (ПоложениеТочки < СтрДлина(ИмяФайла))
		Тогда
			Рез["ИмяБезРасширения"] = Лев(ИмяФайла, ПоложениеТочки - 1); 
			Рез["Расширение"] = НРег(Сред(ИмяФайла, ПоложениеТочки + 1)); 
	КонецЕсли;
	
	Возврат Рез;
КонецФункции

Функция ПрочитатьФайлыАрхиваZIP(ИмяФайла = "", ЧтениеZIP, ВложенияПисьма, ИнформацияОПисьме, ТекКаталог)
	
	Если ЗначениеЗаполнено(ИмяФайла)
		Тогда
			ОписаниеФайла = ПолучитьОписаниеНовогоФайла(ИмяФайла, "", "", "");
			ВложенияПисьма.Добавить(ОписаниеФайла);
	КонецЕсли;
	
	ЗагруженоФайлов = 0;
	
	Для Каждого Элемент Из ЧтениеZIP.Элементы Цикл
		ИмяФайлаАрхива = КаталогВременныхФайлов() + Элемент.Имя;
		НовоеИмяФайлаАрхива = ПолучитьИмяВременногоФайла();
		УдалитьФайлы(ИмяФайлаАрхива);
		ЧтениеZIP.Извлечь(Элемент, КаталогВременныхФайлов(), РежимВосстановленияПутейФайловZIP.НеВосстанавливать);
		
		КопироватьФайл(ИмяФайлаАрхива, НовоеИмяФайлаАрхива);
		УдалитьФайлы(ИмяФайлаАрхива);
		
		СодержимоеФайла = Новый ДвоичныеДанные(НовоеИмяФайлаАрхива);
		
		ИмяИРасширениеФайла = Новый Структура;
		ИмяИРасширениеФайла.Вставить("ИмяБезРасширения", Элемент.ИмяБезРасширения);
		ИмяИРасширениеФайла.Вставить("Расширение", Элемент.Расширение);
		
		ДанныеФайла = Новый Структура;
		ДанныеФайла.Вставить("СодержимоеФайла", СодержимоеФайла);
		ДанныеФайла.Вставить("ИмяИРасширениеФайла", ИмяИРасширениеФайла);
		
		ТекЗагружено = ПрочитатьФайлОбщий(НовоеИмяФайлаАрхива, ДанныеФайла, ВложенияПисьма, ИнформацияОПисьме, ТекКаталог);
		
		ЗагруженоФайлов = ЗагруженоФайлов + ТекЗагружено;
	КонецЦикла;

	ЧтениеZIP.Закрыть();
	
	Возврат ЗагруженоФайлов;
КонецФункции

Функция ПрочитатьФайлОбщий(ИмяФайла = "", ДанныеФайла, ВложенияПисьма, ИнформацияОПисьме, ТекКаталог)
	
	СодержимоеФайла = ДанныеФайла["СодержимоеФайла"];
	ИмяИРасширениеФайла = ДанныеФайла["ИмяИРасширениеФайла"];
	
	ДобавлятьДатуКИмениФайла = Ложь;
	
	ИмяФайлаНаКлиенте = ?(Не ДобавлятьДатуКИмениФайла,
							ИмяИРасширениеФайла.ИмяБезРасширения + "." + ИмяИРасширениеФайла.Расширение,
							ИмяИРасширениеФайла.ИмяБезРасширения + "_(" + Формат(ИнформацияОПисьме.Дата, "ДФ=гггг-ММ-дд_ЧЧ-мм-сс") + ")." + ИмяИРасширениеФайла.Расширение);
	
	АдресВХранилище = ПоместитьВоВременноеХранилище(СодержимоеФайла, Новый УникальныйИдентификатор);
	
	ОписаниеФайла = ПолучитьОписаниеНовогоФайла(ИмяФайла, ИмяФайлаНаКлиенте, АдресВХранилище, ТекКаталог);
	ВложенияПисьма.Добавить(ОписаниеФайла);
	
	Возврат 1;
КонецФункции

Функция ПолучитьОписаниеНовогоФайла(ИмяФайлаНаСервере = "", ИмяФайлаНаКлиенте = "", АдресВХранилище = "", КаталогВыгрузки = "")

	ОписаниеФайла = Новый Структура;
	ОписаниеФайла.Вставить("ИмяФайлаНаСервере", ИмяФайлаНаСервере);
	ОписаниеФайла.Вставить("ИмяФайлаНаКлиенте", ИмяФайлаНаКлиенте);
	ОписаниеФайла.Вставить("АдресВХранилище", АдресВХранилище);
	ОписаниеФайла.Вставить("КаталогВыгрузки", КаталогВыгрузки);

	Возврат ОписаниеФайла;
КонецФункции

#КонецОбласти