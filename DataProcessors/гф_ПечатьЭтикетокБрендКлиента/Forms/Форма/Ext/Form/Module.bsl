#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ВариантПечати = 0 Тогда
		
		ВариантПечати = 1;
		
	КонецЕсли;
	
КонецПроцедуры
	
&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Если Не ЗначениеЗаполнено(ВариантПечати) Тогда
		
		ВариантПечати = 1;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПутьКФайлуБрендаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)  
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПутьКФайлуБрендаОкончаниеВыбора", ЭтотОбъект);
	
	ДиалогОткрытия = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);

	Фильтр = "Картинка |*.jpg;*.png";
	ДиалогОткрытия.Фильтр = Фильтр;
	ДиалогОткрытия.МножественныйВыбор = Ложь;
	ДиалогОткрытия.ПолноеИмяФайла = Объект.ПутьКФайлуБренда;
	ДиалогОткрытия.Заголовок = "Выберите файл бренда"; 
	
	ДиалогОткрытия.Показать(ОписаниеОповещения);

КонецПроцедуры
	
&НаКлиенте
Процедура ПутьКФайлуБрендаОкончаниеВыбора(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		
		Возврат;
		
	КонецЕсли;	
	
	Объект.ПутьКФайлуБренда = Результат[0];

КонецПроцедуры
	
&НаКлиенте
Процедура ПутьКПапкеСохраненияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПутьКПапкеСохраненияОкончаниеВыбора", ЭтотОбъект);
	
	ДиалогОткрытия = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);

	ДиалогОткрытия.МножественныйВыбор = Ложь;
	ДиалогОткрытия.Каталог = Объект.ПутьКПапкеСохранения;
	ДиалогОткрытия.Заголовок = "Выберите каталог сохранения"; 
	
	ДиалогОткрытия.Показать(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПутьКПапкеСохраненияОкончаниеВыбора(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		
		Возврат;
		
	КонецЕсли;	
	
	Объект.ПутьКПапкеСохранения = Результат[0];

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыТаблицаЗаказов
	
&НаКлиенте
Процедура ТаблицаЗаказовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ТаблицаЗаказов.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		
		Возврат;
		
	КонецЕсли;	
	
	ПараметрыОткрытия = Новый Структура;
	
	ПараметрыОткрытия.Вставить("Ключ", ТекущиеДанные.Заказ);
	
	ОткрытьФорму("Документ.ЗаказКлиента.ФормаОбъекта", ПараметрыОткрытия, ЭтотОбъект, ТекущиеДанные.Заказ);
	
КонецПроцедуры

#КонецОбласти   

#Область ОбработчикиСобытийТаблицыФормыТаблицаНоменклатуры

&НаКлиенте
Процедура ТаблицаНоменклатурыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ТаблицаНоменклатуры.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		
		Возврат;
		
	КонецЕсли;	
	
	ПараметрыОткрытия = Новый Структура;                           
	
	ПараметрыОткрытия.Вставить("Ключ", ТекущиеДанные.ВариантКомплектации);
	
	ОткрытьФорму("Справочник.ВариантыКомплектацииНоменклатуры.ФормаОбъекта", ПараметрыОткрытия, ЭтотОбъект, ТекущиеДанные.ВариантКомплектации);
	
КонецПроцедуры

#КонецОбласти   

#Область ОбработчикиКомандФормы   

&НаСервере
Функция ПечатьНаСервере()
	
	МассивДокументов = Новый Массив;
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	Макет = ОбработкаОбъект.ПолучитьМакет("ЭтикеткаСБрендом");  
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	|	Т.Номенклатура КАК Номенклатура,
	|	Т.ВариантКомплектации КАК ВариантКомплектации,
	|	Т.КоличествоЭтикеток КАК КоличествоЭтикеток,
	|	Т.КоличествоВКомплекте КАК КоличествоВКомплекте
	|ПОМЕСТИТЬ ВТ_Номенклатура
	|ИЗ
	|	&ТаблицаНоменклатуры КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Номенклатура.Номенклатура КАК ОсновнаяНоменклатура,
	|	ВТ_Номенклатура.ВариантКомплектации КАК ВариантКомплектации,
	|	ВТ_Номенклатура.КоличествоЭтикеток КАК КоличествоЭтикеток,
	|	ВТ_Номенклатура.КоличествоВКомплекте КАК КоличествоВКомплекте,
	|	ВариантыКомплектацииНоменклатурыТовары.Номенклатура КАК Номенклатура,
	|	ВариантыКомплектацииНоменклатурыТовары.Характеристика КАК Характеристика,
	|	НоменклатураСправочник.Артикул КАК Артикул,
	|	НоменклатураСправочник.ФайлКартинки КАК ФайлКартинки,
	|	ХарактеристикаСправочник.Наименование КАК НаименованиеХарактеристики
	|ПОМЕСТИТЬ ВТ_НоменклатураОсновныеДанные
	|ИЗ
	|	ВТ_Номенклатура КАК ВТ_Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыКомплектацииНоменклатуры.Товары КАК ВариантыКомплектацииНоменклатурыТовары
	|		ПО ВТ_Номенклатура.ВариантКомплектации = ВариантыКомплектацииНоменклатурыТовары.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикаСправочник
	|		ПО (ВариантыКомплектацииНоменклатурыТовары.Характеристика = ХарактеристикаСправочник.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСправочник
	|		ПО ВТ_Номенклатура.Номенклатура = НоменклатураСправочник.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_НоменклатураОсновныеДанные.ОсновнаяНоменклатура КАК ОсновнаяНоменклатура,
	|	ВТ_НоменклатураОсновныеДанные.ВариантКомплектации КАК ВариантКомплектации,
	|	ВТ_НоменклатураОсновныеДанные.КоличествоЭтикеток КАК КоличествоЭтикеток,
	|	ВТ_НоменклатураОсновныеДанные.КоличествоВКомплекте КАК КоличествоВКомплекте,
	|	ВТ_НоменклатураОсновныеДанные.Номенклатура КАК Номенклатура,
	|	ВТ_НоменклатураОсновныеДанные.Характеристика КАК Характеристика,
	|	ВТ_НоменклатураОсновныеДанные.Артикул КАК Артикул,
	|	ВТ_НоменклатураОсновныеДанные.ФайлКартинки КАК ФайлКартинки,
	|	ШтрихкодыНоменклатуры.Штрихкод КАК Штрихкод,
	|	Color_Name.Значение КАК Color_Name,
	|	Wideness.Значение КАК Wideness,
	|	гф_ПереводЗначенийРеквизитовИСвойств.Значение КАК ХарактеристикаEU,
	|	ВТ_НоменклатураОсновныеДанные.НаименованиеХарактеристики КАК НаименованиеХарактеристики
	|ИЗ
	|	ВТ_НоменклатураОсновныеДанные КАК ВТ_НоменклатураОсновныеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ПО ВТ_НоменклатураОсновныеДанные.Номенклатура = ШтрихкодыНоменклатуры.Номенклатура
	|			И ВТ_НоменклатураОсновныеДанные.Характеристика = ШтрихкодыНоменклатуры.Характеристика
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК Color_Name
	|		ПО ВТ_НоменклатураОсновныеДанные.ОсновнаяНоменклатура = Color_Name.Объект
	|			И (Color_Name.Свойство = &Color_Name)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК Wideness
	|		ПО ВТ_НоменклатураОсновныеДанные.ОсновнаяНоменклатура = Wideness.Объект
	|			И (Wideness.Свойство = &Wideness)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.гф_ПереводЗначенийРеквизитовИСвойств КАК гф_ПереводЗначенийРеквизитовИСвойств
	|		ПО ВТ_НоменклатураОсновныеДанные.НаименованиеХарактеристики = гф_ПереводЗначенийРеквизитовИСвойств.Объект
	|			И (гф_ПереводЗначенийРеквизитовИСвойств.Язык = &Язык)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Артикул";
	
	Запрос.Параметры.Вставить("ТаблицаНоменклатуры", Объект.ТаблицаНоменклатуры.Выгрузить());
	Запрос.Параметры.Вставить("Color_Name", ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя","гф_НоменклатураColor_Name"));
	Запрос.Параметры.Вставить("Wideness",  ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя","гф_НоменклатураWideness"));
	Запрос.Параметры.Вставить("Язык", Справочники.гф_ВидыЯзыков.НацКаталог);
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		
		Возврат МассивДокументов;
		
	КонецЕсли;
	
	ТаблицаЭтикеток = Результат.Выгрузить();
	
	ТаблицаАртикулов = ТаблицаЭтикеток.Скопировать(, "Артикул");
	
	ТаблицаАртикулов.Свернуть("Артикул"); 
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	ТабДокумент.ПолеСверху = 14;  //1,4 -0,1
	//ТабДокумент.ПолеСнизу = 0;   //1,4
	ТабДокумент.ПолеСлева = 40;   //4
	ТабДокумент.ПолеСправа = 40;  //4        
	
	ЭтикетокНаСтранице = 0;
	
	Для Каждого СтрокаАртикула Из ТаблицаАртикулов Цикл
		
		Отбор = Новый Структура;
		
		Отбор.Вставить("Артикул", СтрокаАртикула.Артикул);
		
		СтрокиЭтикеток = ТаблицаЭтикеток.НайтиСтроки(Отбор);
		
		Для Каждого СтрокаЭтикетки Из СтрокиЭтикеток Цикл
			
			ОбластьЭтикетка = Макет.ПолучитьОбласть("Этикетка");
			
			ЗаполнитьЗначенияСвойств(ОбластьЭтикетка.Параметры, СтрокаЭтикетки);
			
			ОбластьЭтикетка.Параметры.РазмерUK = ПолучитьРазмерUK(СтрокаЭтикетки);
			
			Если ВыводитьБренд Тогда
				
				ОбластьЭтикетка.Рисунки.БрендКлиента.Картинка = КартинкаБренда;
				
			КонецЕсли;	
			
			Если ЗначениеЗаполнено(СтрокаЭтикетки.ФайлКартинки) Тогда
				
				Попытка                                                                   
					
					АдресКартинки = РаботаСФайлами.ДанныеФайла(СтрокаЭтикетки.ФайлКартинки).СсылкаНаДвоичныеДанныеФайла;  
					
					Картинка = Новый Картинка(ПолучитьИзВременногоХранилища(АдресКартинки));
					
					ОбластьЭтикетка.Рисунки.КартинкаНоменклатуры.Картинка = Картинка;

				Исключение
					
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Ошибка получения изображения для " + СтрокаЭтикетки.Артикул);
					
				КонецПопытки;                                          
				
			Иначе
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Нет изображения для " + СтрокаЭтикетки.Артикул);
				
			КонецЕсли;	                                                                        
			
			Если ЗначениеЗаполнено(СтрокаЭтикетки.Штрихкод) Тогда
			
				ОбластьЭтикетка.Рисунки.ШК.Картинка = ПолучитьКартинкуШтрихКода(СтрокаЭтикетки.Штрихкод);
			
			КонецЕсли;
			
			Для Н = 1 По СтрокаЭтикетки.КоличествоЭтикеток Цикл 
				
				ТабДокумент.Вывести(ОбластьЭтикетка); 

				ЭтикетокНаСтранице = ЭтикетокНаСтранице + 1;
				
				Если ЭтикетокНаСтранице >= 6 Тогда
					
					ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					
					ЭтикетокНаСтранице = 0;
					
				КонецЕсли;	
				
			КонецЦикла;	
			
		КонецЦикла;	
		
		Если ВариантПечати = 2 Тогда
			
			СтруктураДокумента = Новый Структура;      
			
			ДокументРезультат = Новый ТабличныйДокумент;
			
			ДокументРезультат.Вывести(ТабДокумент);
			
			СтруктураДокумента.Вставить("Документ", ДокументРезультат); 
			СтруктураДокумента.Вставить("ИмяФайла", СтрокаАртикула.Артикул + ".pdf"); 
			
			МассивДокументов.Добавить(СтруктураДокумента);  
			
			ТабДокумент.Очистить();
			
		КонецЕсли;	
		
	КонецЦикла;	
	
	Если ВариантПечати = 1 Тогда
		
		СтруктураДокумента = Новый Структура;
		
		СтруктураДокумента.Вставить("Документ", ТабДокумент); 
		СтруктураДокумента.Вставить("ИмяФайла", "Общий_Файл_" + Формат(ТекущаяДатаСеанса(), "ДФ=dd.MM.yyyy") + ".pdf"); 
		
		МассивДокументов.Добавить(СтруктураДокумента);  
		
	КонецЕсли;	
	
	Возврат МассивДокументов;
	
КонецФункции  

&НаКлиенте
Процедура Печать(Команда)
	
	Если НЕ Объект.ТаблицаНоменклатуры.Количество() Тогда
		
		ПоказатьПредупреждение(, "Не выбрано ни одного товара");
		
		Возврат;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.ПутьКПапкеСохранения) тогда
		
		ПоказатьПредупреждение(, "Не выбран каталог сохранения файлов печати");
		
		Возврат;
		
	КонецЕсли; 
	
	КаталогСохранения = Новый Файл(Объект.ПутьКПапкеСохранения);
	
	Если Не КаталогСохранения.Существует() Тогда
		
		ПоказатьПредупреждение(, "Каталог сохранения файлов печати не найден: " + КаталогСохранения.Путь);
		
		Возврат;
		
	КонецЕсли;	    
	
	ВыводитьБренд = Ложь;
	
	Если ЗначениеЗаполнено(Объект.ПутьКФайлуБренда) Тогда
		
		ФайлБренда = Новый Файл(Объект.ПутьКФайлуБренда);
		
		Если ФайлБренда.Существует() Тогда 
			
			Попытка
				
				КартинкаБренда = Новый Картинка(ФайлБренда.ПолноеИмя);
				
				ВыводитьБренд = Истина;
				
			Исключение
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Ошибка получения изображения для бренда");
				
			КонецПопытки;	
			
		Иначе	
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Файл бренда не найден: " + ФайлБренда.ПолноеИмя);
			
		КонецЕсли;
			
	КонецЕсли;
	
	
	МассивДокументов = ПечатьНаСервере();
	
	Для Каждого Элемент Из МассивДокументов Цикл
		
		Элемент.Документ.Показать(Элемент.ИмяФайла);
		
		//Элемент.Документ.Записать(КаталогСохранения.ПолноеИмя + "\" + Элемент.ИмяФайла, ТипФайлаТабличногоДокумента.PDF);
		
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьДокументыНаСервере()
	
	Объект.ТаблицаЗаказов.Очистить();
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ИСТИНА КАК Пометка,
	               |	Выборка.Ссылка КАК Заказ,
	               |	Выборка.Договор КАК Договор
	               |ИЗ
	               |	Документ.ЗаказКлиента КАК Выборка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады.ДополнительныеРеквизиты КАК СкладыДополнительныеРеквизиты
	               |		ПО Выборка.Склад = СкладыДополнительныеРеквизиты.Ссылка
	               |ГДЕ
	               |	Выборка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	               |	И (&НетКонтрагента
	               |			ИЛИ Выборка.Контрагент = &Контрагент)
	               |	И (&НетДоговора
	               |			ИЛИ Выборка.Договор = &ДоговорКонтрагента)
	               |	И НЕ Выборка.ПометкаУдаления
	               |	И СкладыДополнительныеРеквизиты.Свойство = &Свойство
	               |	И СкладыДополнительныеРеквизиты.Значение = ИСТИНА";

	Запрос.УстановитьПараметр("ДатаНачала", Объект.Период.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", Объект.Период.ДатаОкончания);
	Запрос.УстановитьПараметр("НетКонтрагента", Объект.Контрагент.Пустая());
	Запрос.УстановитьПараметр("Контрагент", Объект.Контрагент);
	Запрос.УстановитьПараметр("НетДоговора", Объект.ДоговорКонтрагента.Пустая());
	Запрос.УстановитьПараметр("ДоговорКонтрагента", Объект.ДоговорКонтрагента);
	Запрос.УстановитьПараметр("Свойство", ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя", "гф_СкладыТоварыВКоробах"));
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Объект.ТаблицаЗаказов.Загрузить(Результат.Выгрузить());

КонецПроцедуры
	
&НаКлиенте
Процедура ПолучитьДокументы(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Контрагент) тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Контрагент не указан. Будут выбраны все документы за период!");	
		
	КонецЕсли;
	
	ПолучитьДокументыНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьВсе(Команда)
	
	Пометка = Команда.Имя = "ОтметитьВсе";
	
	Для Каждого СтрокаЗаказа Из Объект.ТаблицаЗаказов Цикл
		
		СтрокаЗаказа.Пометка = Пометка;
		
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоЗаказамНаСервере()
	
	МассивДокументов = Новый Массив;
	
	Для Каждого СтрокаЗаказа Из Объект.ТаблицаЗаказов Цикл 
		
		Если СтрокаЗаказа.Пометка Тогда
			
			МассивДокументов.Добавить(СтрокаЗаказа.Заказ);	
			
		КонецЕсли;
		
	КонецЦикла;
	
	Запрос = Новый запрос("ВЫБРАТЬ
	|	СУММА(ЗаказКлиентагф_ТоварыВКоробах.Количество) КАК КоличествоЭтикеток,
	|	ЗаказКлиентагф_ТоварыВКоробах.ВариантКомплектации КАК ВариантКомплектации,
	|	ВариантыКомплектацииНоменклатуры.Владелец КАК Номенклатура,
	|	ВариантыКомплектацииНоменклатуры.Количество КАК КоличествоВКомплекте
	|ИЗ
	|	Документ.ЗаказКлиента.гф_ТоварыВКоробах КАК ЗаказКлиентагф_ТоварыВКоробах
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыКомплектацииНоменклатуры КАК ВариантыКомплектацииНоменклатуры
	|		ПО ЗаказКлиентагф_ТоварыВКоробах.ВариантКомплектации = ВариантыКомплектацииНоменклатуры.Ссылка
	|ГДЕ
	|	ЗаказКлиентагф_ТоварыВКоробах.Ссылка В(&МассивДокументов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказКлиентагф_ТоварыВКоробах.ВариантКомплектации,
	|	ВариантыКомплектацииНоменклатуры.Владелец,
	|	ВариантыКомплектацииНоменклатуры.Количество");  
	
	Запрос.УстановитьПараметр("МассивДокументов",МассивДокументов);
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Объект.ТаблицаНоменклатуры.Загрузить(Результат.Выгрузить());
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоЗаказам(Команда)
	
	Объект.ТаблицаНоменклатуры.Очистить();
	
	Если Не Объект.ТаблицаЗаказов.Количество() Тогда
		
		ПоказатьПредупреждение(, "Не выбранных заказов");
		
	КонецЕсли;
	
	ЗаполнитьПоЗаказамНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьКоличество(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗаполнитьКоличествоЗавершение", ЭтотОбъект);
	
	ПоказатьВводЧисла(ОписаниеОповещения, 1, "Укажите количество этикеток", 3, 0);
	
КонецПроцедуры      


&НаКлиенте
Процедура ЗаполнитьКоличествоЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Для Каждого СтрокаНоменклатуры Из Объект.ТаблицаНоменклатуры Цикл
		
		СтрокаНоменклатуры.КоличествоЭтикеток = Результат;
		
	КонецЦикла;	
		
КонецПроцедуры

&НаСервере
Функция ПолучитьКартинкуШтрихКода(Штрихкод)
	
	ПараметрыШтрихкода = ГенерацияШтрихкода.ПараметрыГенерацииШтрихкода();

	ПараметрыШтрихкода.ТипКода			= 1;
	ПараметрыШтрихкода.ОтображатьТекст	= Истина;
	ПараметрыШтрихкода.Штрихкод			= Штрихкод;
	ПараметрыШтрихкода.УголПоворота		= 90; 
	//ПараметрыШтрихкода.Масштабировать	= Истина;
	ПараметрыШтрихкода.Высота			= 500;
	ПараметрыШтрихкода.Ширина			= 100;
	
	Картинка = ГенерацияШтрихкода.ИзображениеШтрихкода(ПараметрыШтрихкода).Картинка;
	
	Возврат Картинка;
	
КонецФункции

&НаСервере
Функция ПолучитьРазмерUK(СтрокаЭтикетки)
	
	Характеристика = СтрокаЭтикетки.НаименованиеХарактеристики;
	
	ХарактеристикаТолькоЦифры = "0";
	
	Для П = 1 По СтрДлина(Характеристика) Цикл
		
		Символ = Сред(Характеристика, П, 1);
		
		Если СтрНайти("0123456789", Символ) <> 0 Тогда
			
			ХарактеристикаТолькоЦифры = ХарактеристикаТолькоЦифры + Символ;
			
		КонецЕсли;	
		
	КонецЦикла;	
	
	Если Число(ХарактеристикаТолькоЦифры) < 20 Тогда
		
		Размер = СтрЗаменить(Характеристика, "-","½");  
		
	Иначе	
		
		Размер = "";
		
	КонецЕсли;	
	
	Возврат Размер;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти