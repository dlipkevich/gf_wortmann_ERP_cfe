#Область ОбработчикиСобытийФормы

// #wortmann {
// #
// Галфинд Окунев 2022/08/10
// Добавлена команда загрузки состояний из файла.
//
// Параметры:
//
// Отказ				- Булево
// СтандартнаяОбработка	- Булево
//
&НаСервере
Процедура гф_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	
	МассивДобавляемыхРеквизитов = Новый Массив;
	
	КвалификаторыСтроки0 = Новый КвалификаторыСтроки(0);
	
	ОписаниеТиповСтрока0 = Новый ОписаниеТипов("Строка", , , , КвалификаторыСтроки0);
	
	РеквизитАдрес = Новый РеквизитФормы("гф_Адрес", ОписаниеТиповСтрока0);
	
	МассивДобавляемыхРеквизитов.Добавить(РеквизитАдрес);
	
	ИзменитьРеквизиты(МассивДобавляемыхРеквизитов);
	
	Команда = Команды.Добавить("гф_Печать");
	
	Команда.Заголовок = "Печать";
	Команда.Действие  = "гф_КомандаПечать";
	
	КнопкаПанели = Элементы.Добавить("гф_КнопкаПечать", Тип("КнопкаФормы"), Элементы.СписокДокументов.КоманднаяПанель);
	
	КнопкаПанели.ИмяКоманды             = "гф_Печать";
	КнопкаПанели.Вид      = ВидКнопкиФормы.ОбычнаяКнопка;
	КнопкаПанели.ВажностьПриОтображении = ВажностьПриОтображении.Высокая;
	КнопкаПанели.Картинка = БиблиотекаКартинок.ОткрытьФайл;
	КнопкаПанели.Отображение            = ОтображениеКнопки.КартинкаИТекст;
	
	Команда = Команды.Добавить("гф_ИсторияСтатусов");
	
	Команда.Заголовок = "История статусов";
	Команда.Действие  = "гф_КомандаИсторияСтатусов";
	
	КнопкаПанели = Элементы.Добавить("гф_КнопкаИсторияСтатусов",
	Тип(
	"КнопкаФормы"),
	Элементы.СписокДокументов.КоманднаяПанель);
	
	КнопкаПанели.ИмяКоманды             = "гф_ИсторияСтатусов";
	КнопкаПанели.Вид      = ВидКнопкиФормы.ОбычнаяКнопка;
	КнопкаПанели.ВажностьПриОтображении = ВажностьПриОтображении.Высокая;
	КнопкаПанели.Картинка = БиблиотекаКартинок.ИсторияДанных;
	КнопкаПанели.Отображение            = ОтображениеКнопки.КартинкаИТекст;
	
	Команда = Команды.Добавить("гф_ЗагрузкаСтатусов");
	
	Команда.Заголовок = "Загрузка статусов";
	Команда.Действие  = "гф_КомандаЗагрузкаСтатусов";
	
	КнопкаПанели = Элементы.Добавить("гф_КнопкаЗагрузкаСтатусов",
	Тип(
	"КнопкаФормы"),
	Элементы.СписокДокументов.КоманднаяПанель);
	
	КнопкаПанели.ИмяКоманды             = "гф_ЗагрузкаСтатусов";
	КнопкаПанели.Вид      = ВидКнопкиФормы.ОбычнаяКнопка;
	КнопкаПанели.ВажностьПриОтображении = ВажностьПриОтображении.Высокая;
	КнопкаПанели.Картинка = БиблиотекаКартинок.ОткрытьФайл;
	КнопкаПанели.Отображение            = ОтображениеКнопки.КартинкаИТекст;
	
	Команда = Команды.Добавить("гф_ОтслеживаемыеОригиналыПервичныхДокументов");
	
	Команда.Заголовок = "Отслеживаемые оригиналы";
	Команда.Действие  = "гф_ОтслеживаемыеОригиналыПервичныхДокументов";
	
	КнопкаПанели = Элементы.Добавить("гф_ОтслеживаемыеОригиналыПервичныхДокументов",
	Тип(
	"КнопкаФормы"),
	Элементы.СписокДокументов.КоманднаяПанель);
	
	КнопкаПанели.ИмяКоманды             = "гф_ОтслеживаемыеОригиналыПервичныхДокументов";
	КнопкаПанели.Вид      = ВидКнопкиФормы.ОбычнаяКнопка;
	КнопкаПанели.ВажностьПриОтображении = ВажностьПриОтображении.Высокая;
	КнопкаПанели.Картинка = БиблиотекаКартинок.ФильтрПоСвойствам;
	КнопкаПанели.Отображение            = ОтображениеКнопки.КартинкаИТекст;
	
КонецПроцедуры// } #wortmann

#КонецОбласти

#Область ОбработчикиКомандФормы

// #wortmann {
// #
// Галфинд Окунев 2022/08/10
// Загрузка состояний из файла
//
// Параметры:
//
// Команда	- КомандаФормы
//
&НаКлиенте
Процедура гф_КомандаЗагрузкаСтатусов(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("гф_ЗагрузкаСтатусовЗавершение", ЭтотОбъект);
	
	ПараметрыЗагрузки = ФайловаяСистемаКлиент.ПараметрыЗагрузкиФайла();
	
	ПараметрыЗагрузки.ИдентификаторФормы = УникальныйИдентификатор;
	ПараметрыЗагрузки.Диалог.Заголовок   = "Выберите файл с загружаемыми статусами";
	ПараметрыЗагрузки.Диалог.Фильтр      = "Excel (*.xlsx)|*.xlsx";
	
	ФайловаяСистемаКлиент.ЗагрузитьФайл(ОписаниеОповещения, ПараметрыЗагрузки);
	
КонецПроцедуры// } #wortmann

// #wortmann {
// #
// Галфинд Окунев 2022/08/10
// Открывает историю статусов
//
// Параметры:
//
// Команда	- КомандаФормы
//
&НаКлиенте
Процедура гф_КомандаИсторияСтатусов(Команда)
	
	ТекущиеДанные = Элементы.СписокДокументов.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Отбор = Новый Структура;
	
	Отбор.Вставить("Владелец", ТекущиеДанные.Ссылка);
	
	Если ЗначениеЗаполнено(ТекущиеДанные.ПервичныйДокумент) Тогда
		
		Отбор.Вставить("ПервичныйДокумент", ТекущиеДанные.ПервичныйДокумент);
		
	КонецЕсли;
	
	ПараметрыОткрытия = Новый Структура;
	
	ПараметрыОткрытия.Вставить("Отбор", Отбор);
	
	ОткрытьФорму("РегистрСведений.гф_ИсторияСостоянийОригиналовПервичныхДокументов.ФормаСписка", ПараметрыОткрытия);
	
КонецПроцедуры// } #wortmann

// #wortmann {
// #
// Галфинд Окунев 2022/08/10
// Открывает регистр отслеживаемых оригиналов.
//
// Параметры:
//
// Команда	- КомандаФормы
//
&НаКлиенте
Процедура гф_ОтслеживаемыеОригиналыПервичныхДокументов(Команда)
	
	ПараметрыОткрытия = Новый Структура;
	
	ОткрытьФорму("РегистрСведений.гф_ОтслеживаемыеОригиналыПервичныхДокументов.ФормаСписка",
	ПараметрыОткрытия,
	ЭтотОбъект);
	
КонецПроцедуры// } #wortmann

#КонецОбласти

// #wortmann {
// #
// Галфинд Окунев 2022/08/10
// Групповая печать отмеченных документов.
//
// Параметры:
//
// Команда	- КомандаФормы
//
&НаКлиенте
Процедура гф_КомандаПечать(Команда)
	
	МассивДокументов = Новый Массив;
	
	Для Каждого ВыделеннаяСтрока Из Элементы.СписокДокументов.ВыделенныеСтроки Цикл
		
		ДанныеСтроки = Элементы.СписокДокументов.ДанныеСтроки(ВыделеннаяСтрока);
		
		Если ДанныеСтроки <> Неопределено Тогда
			
			Если ЗначениеЗаполнено(ДанныеСтроки.Ссылка) Тогда
				
				Если МассивДокументов.Найти(ДанныеСтроки.Ссылка) = Неопределено Тогда
					
					МассивДокументов.Добавить(ДанныеСтроки.Ссылка);
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если Не МассивДокументов.Количество() Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Нет выбранных документов для печати");
		
		Возврат;
		
	КонецЕсли;
	
	
	ПараметрыОткрытия = Новый Структура();
	
	ПараметрыОткрытия.Вставить("МассивДокументов", МассивДокументов);
	
	ОткрытьФорму(ЭтотОбъект.ИмяФормы + "Печать",
	ПараметрыОткрытия,
	,
	Истина,
	,
	,
	,
	РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
	
КонецПроцедуры// } #wortmann

#Область СлужебныеПроцедурыИФункции

// #wortmann {
// #
// Галфинд Окунев 2022/08/10
// Загрузка состояний из файла
//
// Параметры:
//
// ПомещенныйФайл			- Структура
// ДополнительныеПараметры	- Структура.
//
&НаКлиенте
Процедура гф_ЗагрузкаСтатусовЗавершение(ПомещенныйФайл, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(ПомещенныйФайл) Тогда
		
		ЭтотОбъект["гф_Адрес"] = ПомещенныйФайл.Хранение;
		
		гф_ЗагрузкаСтатусовЗавершениеНаСервере();
		
	КонецЕсли;
	
КонецПроцедуры// } #wortmann

// #wortmann {
// #
// Галфинд Окунев 2022/08/10
// Загрузка состояний из файла
//
// Параметры:
//
// ПомещенныйФайл			- Структура
// ДополнительныеПараметры	- Структура.
//
&НаСервере
Процедура гф_ЗагрузкаСтатусовЗавершениеНаСервере() Экспорт
	
	Данные = ПолучитьИзВременногоХранилища(ЭтотОбъект["гф_Адрес"]);
	
	ИмяВременногоФайла = ФайловаяСистема.УникальноеИмяФайла(КаталогВременныхФайлов() + "/Статусы.xlsx");
	
	Данные.Записать(ИмяВременногоФайла);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ТабличныйДокумент.Прочитать(ИмяВременногоФайла);
	
	ТаблицаСтатусов = ПолучитьТаблицуСтатусов(ТабличныйДокумент);
	
	ФайловаяСистема.УдалитьВременныйФайл(ИмяВременногоФайла);
	
КонецПроцедуры// } #wortmann

// #wortmann {
// #
// Галфинд Окунев 2022/08/10
// Чтение данных статусов из табличного документа в таблицу значений.
//
// Параметры:
//
// ТабличныйДокумент = ТабличныйДокумент
//
&НаСервере
Функция ПолучитьТаблицуСтатусов(ТабличныйДокумент) Экспорт
	
	ТаблицаИзФайла = Новый ТаблицаЗначений;
	
	КвалификаторыСтроки0 = Новый КвалификаторыСтроки(0);
	КвалификаторыДаты    = Новый КвалификаторыДаты(  ЧастиДаты.ДатаВремя);
	
	ОписаниеТиповСтрока0 = Новый ОписаниеТипов("Строка", , , , КвалификаторыСтроки0);
	ОписаниеТиповДата    = Новый ОписаниеТипов("Дата",   , , , , КвалификаторыДаты);
	
	ТаблицаИзФайла.Колонки.Добавить("Номер", ОписаниеТиповСтрока0);
	ТаблицаИзФайла.Колонки.Добавить("Дата",  ОписаниеТиповДата);
	ТаблицаИзФайла.Колонки.Добавить("ВидДокумента",       ОписаниеТиповСтрока0);
	ТаблицаИзФайла.Колонки.Добавить("Документ",           Документы.ТипВсеСсылки());
	ТаблицаИзФайла.Колонки.Добавить("ПервичныйДокумент",  ОписаниеТиповСтрока0);
	ТаблицаИзФайла.Колонки.Добавить("СостояниеОригинала", ОписаниеТиповСтрока0);
	
	КолонкаНомер = 1;
	КолонкаДата  = 2;
	КолонкаВидДокумента       = 3;
	КолонкаПервичныйДокумент  = 4;
	КолонкаСостояниеОригинала = 5;
	
	НачальнаяСтрока = 2;
	
	Для НомерСтроки = НачальнаяСтрока По ТабличныйДокумент.ВысотаТаблицы Цикл
		
		НоваяСтрока = ТаблицаИзФайла.Добавить();
		
		НоваяСтрока.Номер = ТабличныйДокумент.Область(НомерСтроки, КолонкаНомер,
		НомерСтроки, КолонкаНомер).Текст;
		НоваяСтрока.Дата = СтроковыеФункцииКлиентСервер.СтрокаВДату(
		ТабличныйДокумент.Область(НомерСтроки, КолонкаДата,
		НомерСтроки,      КолонкаДата).Текст);
		НоваяСтрока.ВидДокумента = ТабличныйДокумент.Область(НомерСтроки,       КолонкаВидДокумента,
		НомерСтроки, КолонкаВидДокумента).Текст;
		НоваяСтрока.ПервичныйДокумент = ТабличныйДокумент.Область(НомерСтроки,  КолонкаПервичныйДокумент,
		НомерСтроки,            КолонкаПервичныйДокумент).Текст;
		НоваяСтрока.СостояниеОригинала = ТабличныйДокумент.Область(НомерСтроки, КолонкаСостояниеОригинала,
		НомерСтроки,           КолонкаСостояниеОригинала).Текст;
		
	КонецЦикла;
	
	Возврат ТаблицаИзФайла;
	
КонецФункции// } #wortmann

#КонецОбласти

