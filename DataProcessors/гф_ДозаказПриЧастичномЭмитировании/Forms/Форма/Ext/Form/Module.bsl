
&НаСервере
Процедура СоздатьДокументыНаСервере()
	Объект.СозданныеДокументы.Очистить();
	тзЗаказыПоОснованиям =Объект.ИсправляемыеДокументы.Выгрузить(); 
	мОтмеченных = тзЗаказыПоОснованиям.НайтиСтроки(Новый Структура("Пометка", Истина));
	тзОтмеченныхЗаказов = тзЗаказыПоОснованиям.Скопировать(мОтмеченных);
	мЗаказов = тзОтмеченныхЗаказов.ВыгрузитьКолонку("ЗаказНаЭмиссию");
	ТекстЗапроса = ТекстЗапросаДанныхЭмиссии(мЗаказов);
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("МассивЗаказов", мЗаказов);
	ПакетРезультатов = Запрос.ВыполнитьПакетСПромежуточнымиДанными();
	тзТовары = ПакетРезультатов[3].Выгрузить();
	тзОснования = ПакетРезультатов[7].Выгрузить();
	тзЗаказыПоОснованиям = ПакетРезультатов[5].Выгрузить();
	тзЗаказыПоОснованиямУдаляемыеСтроки = ПакетРезультатов[10].Выгрузить();
	
	тзСозданныеДокументы = Новый ТаблицаЗначений;
	тзСозданныеДокументы.Колонки.Добавить("ЗаказНаЭмиссию", Новый ОписаниеТипов("ДокументСсылка.ЗаказНаЭмиссиюКодовМаркировкиСУЗ"));
	УспешноеВыполнение = Истина;

	ИтоговыйМассивДляОбработки = тзОснования.ВыгрузитьКолонку("ДокументОснование");
	
	Если ИтоговыйМассивДляОбработки.ВГраница() = -1 Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого Эл Из ИтоговыйМассивДляОбработки Цикл
		УспешнаяОбработкаПоПоставке = Истина;
		// Для каждого учетного документа создаются документы Заказов на эмиссию кодов маркировки
		// с учетом того, чтобы в каждом документе эмиссии было не более 10 строк.
		// например: в поступлении 300 строк - создается 30 заказов на эмиссию.
		
		мМассивовСтрок = Новый Массив;
		
		СтрукПоиска = Новый Структура("ДокументОснование", Эл);
		мСтрокТоваровДляЗаказа = тзТовары.НайтиСтроки(СтрукПоиска);
		Если мСтрокТоваровДляЗаказа.ВГраница() = -1 Тогда
			Продолжить;	
		КонецЕсли;
		тчТовары = тзТовары.Скопировать(мСтрокТоваровДляЗаказа);
		тчТовары.Свернуть("Номенклатура, Характеристика", "Количество, КоличествоУпаковок");
		
		мСтрокДляОдногоДокумента = Новый Массив;
		
		Сч = 1;
		Обработано = 0;
		КоличествоСтрок = тчТовары.Количество();
		Для каждого стрТч Из тчТовары Цикл
			Обработано = Обработано + 1;
			ОбобенностьУчета = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(стрТч["Номенклатура"], "ОсобенностьУчета");
			Если ОбобенностьУчета = Перечисления.ОсобенностиУчетаНоменклатуры.ОбувнаяПродукция Тогда
				Если Сч <= Мин(10, КоличествоСтрок) Тогда
					мСтрокДляОдногоДокумента.Добавить(стрТч);
				Иначе
					Сч = 1;
					мМассивовСтрок.Добавить(мСтрокДляОдногоДокумента);
					мСтрокДляОдногоДокумента = Новый Массив;
					мСтрокДляОдногоДокумента.Добавить(стрТч);
				КонецЕсли;
				Сч = Сч + 1;
			КонецЕсли;
			
		КонецЦикла;
		Если Обработано = КоличествоСтрок И мСтрокДляОдногоДокумента.ВГраница() > -1 Тогда
			мМассивовСтрок.Добавить(мСтрокДляОдногоДокумента);
		КонецЕсли;

		Для каждого ЭлМассив Из мМассивовСтрок Цикл
			
			тзТоварыДляОбработки = тчТовары.Скопировать(ЭлМассив);
			ДопПараметры = Новый Структура();
				Если ТипЗнч(Эл) = Тип("ДокументСсылка.ЗаявкаНаВозвратТоваровОтКлиента") Тогда
					ИмяНабора = "ВозвращаемыеТовары";
				Иначе
					ИмяНабора = "Товары";
				КонецЕсли;
			ДопПараметры.Вставить(ИмяНабора, тзТоварыДляОбработки);
			ДопПараметры.Вставить("НеПроверятьНаличиеЗаказаНаЭмиссию", Истина);
			ДопПараметры.Вставить("ПринудительноЗаполнятьОтветственного", Истина);
			
			Если Отладка Тогда
				НачатьТранзакцию();
			КонецЕсли;
			
			Результат = гф_ЭмиссияКодовМаркировкиВызовСервера.гф_СоздатьЗаказНаЭмиссиюКодовМаркировки(Эл, ДопПараметры);

			Если Не (ЗначениеЗаполнено(Результат["ЗаказНаЭмиссиюКодовМаркировкиСУЗ"]) 
				И Результат["ЗаказКодовВозможен"]) Тогда
				УспешноеВыполнение = Ложь;
				УспешнаяОбработкаПоПоставке = Ложь;
			Иначе
				нсСозданныеЗаказы = тзСозданныеДокументы.Добавить();
				нсСозданныеЗаказы["ЗаказНаЭмиссию"] = Результат["ЗаказНаЭмиссиюКодовМаркировкиСУЗ"];
			КонецЕсли;
			
			
			Если Отладка Тогда
				Если ТранзакцияАктивна() Тогда
					ОтменитьТранзакцию();	
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		Если УспешнаяОбработкаПоПоставке Тогда
			
			мЗаказовПоОснованию = тзЗаказыПоОснованиямУдаляемыеСтроки.НайтиСтроки(Новый Структура("ДокументОснование" , Эл));
			тзЗаказовПоТекущемуОснованию = тзЗаказыПоОснованиямУдаляемыеСтроки.Скопировать(мЗаказовПоОснованию);
			тзЗаказовПоТекущемуОснованию.Свернуть("ЗаказНаЭмиссию");
			
			Для каждого СтрЗаказПоОснованию Из тзЗаказовПоТекущемуОснованию Цикл
				мСтрокПоЗаказуКУдалению = тзЗаказыПоОснованиямУдаляемыеСтроки.НайтиСтроки(Новый Структура(
				"ДокументОснование, ЗаказНаЭмиссию", Эл, СтрЗаказПоОснованию["ЗаказНаЭмиссию"]));
				Если мСтрокПоЗаказуКУдалению.Количество() > 0 Тогда
					мУдаляемыхСтрок = Новый Массив;
					обЗаказЭмиссии = СтрЗаказПоОснованию["ЗаказНаЭмиссию"].ПолучитьОбъект();	
					
					Для каждого СтрокаПоЗаказуКУдалению Из мСтрокПоЗаказуКУдалению Цикл
						СтрокаТчКУдалению = обЗаказЭмиссии.Товары.Найти(СтрокаПоЗаказуКУдалению["НомерСтроки"], "НомерСтроки");
						Если СтрокаТчКУдалению <> Неопределено Тогда
							мУдаляемыхСтрок.Добавить(СтрокаТчКУдалению);
						КонецЕсли;
					КонецЦикла;
					Для каждого элУдаляемых Из мУдаляемыхСтрок Цикл
						обЗаказЭмиссии.Товары.Удалить(элУдаляемых);
					КонецЦикла;
					Если обЗаказЭмиссии.Товары.Количество() = 0 Тогда
						РежимЗаписи = ?(обЗаказЭмиссии.Проведен, РежимЗаписиДокумента.ОтменаПроведения, РежимЗаписиДокумента.Запись);
						обЗаказЭмиссии.ПометкаУдаления = Истина;
						
					Иначе
						РежимЗаписи = ?(обЗаказЭмиссии.Проведен, РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись);
					КонецЕсли;
					
					Если Отладка Тогда
						НачатьТранзакцию();
					КонецЕсли;	
					обЗаказЭмиссии.Записать(РежимЗаписи);
					Если Отладка Тогда
						Если ТранзакцияАктивна() Тогда
							ОтменитьТранзакцию();
						КонецЕсли;
					КонецЕсли;
					
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;

	
	Если УспешноеВыполнение Тогда
		РезультатОбработки = Истина;
	Иначе
		РезультатОбработки = Ложь;
	КонецЕсли;
	
	Объект.СозданныеДокументы.Загрузить(тзСозданныеДокументы);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере()
	
	Объект.ИсправляемыеДокументы.Очистить();
	Объект.СозданныеДокументы.Очистить();
	
	Объект.ПересоздаваемыеДокументы.Очистить();
	Объект.ПересозданныеДокументы.Очистить();
	
	ТекстЗапроса = ТекстЗапросаДанныхЭмиссии();
	Запрос = Новый Запрос(ТекстЗапроса);
	ПакетРезультатов = Запрос.ВыполнитьПакетСПромежуточнымиДанными();
	
	тзЗаказыПоОснованиям = ПакетРезультатов[5].Выгрузить();
	тзЗаказыПоОснованиямБезПула = ПакетРезультатов[6].Выгрузить();
	
	Объект.ИсправляемыеДокументы.Загрузить(тзЗаказыПоОснованиям);
	Объект.ПересоздаваемыеДокументы.Загрузить(тзЗаказыПоОснованиямБезПула);

КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	ЗаполнитьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДокументы(Команда)
	СоздатьДокументыНаСервере();
КонецПроцедуры

Функция ТекстЗапросаДанныхЭмиссии(МассивЗаказов = Неопределено)
	#Область текст_запроса
	
	Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Таблица.Ссылка КАК ЗаказНаЭмиссию,
	|	Таблица.Проведен КАК Проведен,
	|	Таблица.ПометкаУдаления КАК ПометкаУдаления,
	|	Таблица.Организация КАК Организация,
	|	Таблица.ДокументОснование КАК ДокументОснование
	|ПОМЕСТИТЬ вт_Заказы
	|ИЗ
	|	Документ.ЗаказНаЭмиссиюКодовМаркировкиСУЗ КАК Таблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовИСМП КАК СтатусыДокументовИСМП
	|		ПО (СтатусыДокументовИСМП.Документ = Таблица.Ссылка)
	|ГДЕ
	|	НЕ Таблица.ПометкаУдаления
	|	И СтатусыДокументовИСМП.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОбработкиЗаказовНаЭмиссиюКодовМаркировкиИСМП.СУЗКодыМаркировкиЭмитированыЧастично)
	|	И СтатусыДокументовИСМП.ДальнейшееДействие1 = ЗНАЧЕНИЕ(Перечисление.ДальнейшиеДействияПоВзаимодействиюИСМП.НеТребуется)
	|	И &УсловиеОтбора
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	вт_Заказы.ДокументОснование КАК ДокументОснование,
	|	вт_Заказы.ЗаказНаЭмиссию КАК ЗаказНаЭмиссию
	|ПОМЕСТИТЬ вт_ЗаказыБезПула
	|ИЗ
	|	вт_Заказы КАК вт_Заказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПулКодовМаркировкиСУЗ КАК ПулКодовМаркировкиСУЗ
	|		ПО вт_Заказы.ЗаказНаЭмиссию = ПулКодовМаркировкиСУЗ.ЗаказНаЭмиссию
	|ГДЕ
	|	ПулКодовМаркировкиСУЗ.ЗаказНаЭмиссию ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_Заказы.ДокументОснование КАК ДокументОснование,
	|	ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары.Ссылка КАК ЗаказНаЭмиссию,
	|	ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары.GTIN КАК GTIN,
	|	ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары.Номенклатура КАК Номенклатура,
	|	ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары.Характеристика КАК Характеристика,
	|	ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары.Количество КАК Количество,
	|	ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	СУММА(ВЫБОР
	|			КОГДА ПулКодовМаркировкиСУЗ.КодМаркировки ЕСТЬ NULL
	|				ТОГДА 0
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК КоличествоЭмитировано,
	|	ВЫБОР
	|		КОГДА вт_ЗаказыБезПула.ЗаказНаЭмиссию ЕСТЬ НЕ NULL 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЗаказБезПула
	|ПОМЕСТИТЬ вт_товары_предварительно
	|ИЗ
	|	Документ.ЗаказНаЭмиссиюКодовМаркировкиСУЗ.Товары КАК ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ вт_Заказы КАК вт_Заказы
	|		ПО ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары.Ссылка = вт_Заказы.ЗаказНаЭмиссию
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПулКодовМаркировкиСУЗ КАК ПулКодовМаркировкиСУЗ
	|		ПО ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары.Ссылка = ПулКодовМаркировкиСУЗ.ЗаказНаЭмиссию
	|			И ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары.Номенклатура = ПулКодовМаркировкиСУЗ.Номенклатура
	|			И ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары.Характеристика = ПулКодовМаркировкиСУЗ.Характеристика
	|			И ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары.GTIN = ПулКодовМаркировкиСУЗ.GTIN
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ЗаказыБезПула КАК вт_ЗаказыБезПула
	|		ПО (вт_ЗаказыБезПула.ЗаказНаЭмиссию = ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары.Ссылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	вт_Заказы.ДокументОснование,
	|	ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары.Ссылка,
	|	ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары.GTIN,
	|	ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары.Номенклатура,
	|	ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары.Характеристика,
	|	ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары.Количество,
	|	ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары.КоличествоУпаковок,
	|	ВЫБОР
	|		КОГДА вт_ЗаказыБезПула.ЗаказНаЭмиссию ЕСТЬ НЕ NULL 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	предв.ДокументОснование КАК ДокументОснование,
	|	предв.Номенклатура КАК Номенклатура,
	|	предв.Характеристика КАК Характеристика,
	|	СУММА(предв.Количество - предв.КоличествоЭмитировано) КАК Количество,
	|	СУММА(предв.КоличествоУпаковок - предв.КоличествоЭмитировано) КАК КоличествоУпаковок
	|ПОМЕСТИТЬ вт_товары
	|ИЗ
	|	вт_товары_предварительно КАК предв
	|ГДЕ
	|	НЕ предв.ЗаказБезПула
	|	И (предв.GTIN = """"
	|			ИЛИ предв.КоличествоЭмитировано - предв.КоличествоУпаковок < 0)
	|
	|СГРУППИРОВАТЬ ПО
	|	предв.ДокументОснование,
	|	предв.Номенклатура,
	|	предв.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	предв.ДокументОснование КАК ДокументОснование,
	|	предв.Номенклатура КАК Номенклатура,
	|	предв.Характеристика КАК Характеристика,
	|	СУММА(предв.Количество - предв.КоличествоЭмитировано) КАК Количество,
	|	СУММА(предв.КоличествоУпаковок - предв.КоличествоЭмитировано) КАК КоличествоУпаковок
	|ПОМЕСТИТЬ вт_товары_безПула
	|ИЗ
	|	вт_товары_предварительно КАК предв
	|ГДЕ
	|	предв.ЗаказБезПула
	|
	|СГРУППИРОВАТЬ ПО
	|	предв.ДокументОснование,
	|	предв.Номенклатура,
	|	предв.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 10000
	|	ИСТИНА КАК Пометка,
	|	вт_Заказы.ЗаказНаЭмиссию КАК ЗаказНаЭмиссию,
	|	вт_Заказы.ДокументОснование КАК ДокументОснование
	|ПОМЕСТИТЬ вт_ЗаказыПоОснованиям
	|ИЗ
	|	вт_Заказы КАК вт_Заказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ вт_товары_предварительно КАК Предв
	|		ПО (Предв.ЗаказНаЭмиссию = вт_Заказы.ЗаказНаЭмиссию)
	|ГДЕ
	|	НЕ Предв.ЗаказБезПула
	|	И (Предв.GTIN = """"
	|			ИЛИ Предв.КоличествоЭмитировано - Предв.КоличествоУпаковок < 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 10000
	|	ИСТИНА КАК Пометка,
	|	вт_Заказы.ЗаказНаЭмиссию КАК ЗаказНаЭмиссию,
	|	вт_Заказы.ДокументОснование КАК ДокументОснование
	|ПОМЕСТИТЬ вт_ЗаказыПоОснованиямБезПула
	|ИЗ
	|	вт_Заказы КАК вт_Заказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ вт_товары_предварительно КАК Предв
	|		ПО (Предв.ЗаказНаЭмиссию = вт_Заказы.ЗаказНаЭмиссию)
	|ГДЕ
	|	Предв.ЗаказБезПула
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	вт_ЗаказыПоОснованиям.ДокументОснование КАК ДокументОснование
	|ПОМЕСТИТЬ вт_Основания
	|ИЗ
	|	вт_ЗаказыПоОснованиям КАК вт_ЗаказыПоОснованиям
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	вт_ЗаказыПоОснованиямБезПула.ДокументОснование КАК ДокументОснование
	|ПОМЕСТИТЬ вт_ОснованияБезПула
	|ИЗ
	|	вт_ЗаказыПоОснованиямБезПула КАК вт_ЗаказыПоОснованиямБезПула
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_Заказы.ДокументОснование КАК ДокументОснование,
	|	ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары.НомерСтроки КАК НомерСтроки,
	|	ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары.Ссылка КАК ЗаказНаЭмиссию,
	|	ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары.GTIN КАК GTIN,
	|	ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары.Номенклатура КАК Номенклатура,
	|	ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары.Характеристика КАК Характеристика,
	|	ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары.Количество КАК Количество,
	|	ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	СУММА(ВЫБОР
	|			КОГДА ПулКодовМаркировкиСУЗ.КодМаркировки ЕСТЬ NULL
	|				ТОГДА 0
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК КоличествоЭмитировано,
	|	ВЫБОР
	|		КОГДА вт_ЗаказыБезПула.ЗаказНаЭмиссию ЕСТЬ НЕ NULL 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЗаказБезПула
	|ПОМЕСТИТЬ вт_Заказы_УдалитьНомераСтрокПредв
	|ИЗ
	|	Документ.ЗаказНаЭмиссиюКодовМаркировкиСУЗ.Товары КАК ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ вт_Заказы КАК вт_Заказы
	|		ПО (ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары.Ссылка = вт_Заказы.ЗаказНаЭмиссию)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПулКодовМаркировкиСУЗ КАК ПулКодовМаркировкиСУЗ
	|		ПО (ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары.Ссылка = ПулКодовМаркировкиСУЗ.ЗаказНаЭмиссию)
	|			И (ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары.Номенклатура = ПулКодовМаркировкиСУЗ.Номенклатура)
	|			И (ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары.Характеристика = ПулКодовМаркировкиСУЗ.Характеристика)
	|			И (ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары.GTIN = ПулКодовМаркировкиСУЗ.GTIN)
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ЗаказыБезПула КАК вт_ЗаказыБезПула
	|		ПО (вт_ЗаказыБезПула.ЗаказНаЭмиссию = ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары.Ссылка)
	|ГДЕ
	|	ВЫБОР
	|			КОГДА вт_ЗаказыБезПула.ЗаказНаЭмиссию ЕСТЬ НЕ NULL 
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ = ЛОЖЬ
	|
	|СГРУППИРОВАТЬ ПО
	|	вт_Заказы.ДокументОснование,
	|	ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары.НомерСтроки,
	|	ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары.Ссылка,
	|	ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары.GTIN,
	|	ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары.Номенклатура,
	|	ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары.Характеристика,
	|	ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары.Количество,
	|	ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары.КоличествоУпаковок,
	|	ВЫБОР
	|		КОГДА вт_ЗаказыБезПула.ЗаказНаЭмиссию ЕСТЬ НЕ NULL 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|
	|ИМЕЮЩИЕ
	|	(СУММА(ВЫБОР
	|				КОГДА ПулКодовМаркировкиСУЗ.КодМаркировки ЕСТЬ NULL
	|					ТОГДА 0
	|				ИНАЧЕ 1
	|			КОНЕЦ) - ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары.КоличествоУпаковок < 0
	|		ИЛИ ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары.GTIN = """")
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_Заказы_УдалитьНомераСтрокПредв.ДокументОснование КАК ДокументОснование,
	|	вт_Заказы_УдалитьНомераСтрокПредв.ЗаказНаЭмиссию КАК ЗаказНаЭмиссию,
	|	вт_Заказы_УдалитьНомераСтрокПредв.НомерСтроки КАК НомерСтроки   
	|Поместить вт_Заказы_УдалитьНомераСтрок
	|ИЗ
	|	вт_Заказы_УдалитьНомераСтрокПредв КАК вт_Заказы_УдалитьНомераСтрокПредв";
	
	
	#КонецОбласти	
	
	Если МассивЗаказов <> Неопределено Тогда
		ТестЗапроса = СтрЗаменить(Текст, "&УсловиеОтбора", " Таблица.Ссылка В (&МассивЗаказов) ");
	Иначе
		ТестЗапроса = СтрЗаменить(Текст, "&УсловиеОтбора", " ИСТИНА ");
	КонецЕсли;
	
	Возврат ТестЗапроса;
	
КонецФункции 

&НаКлиенте
Процедура УстановитьПометку(Команда)
	Для каждого стрТч Из Объект.ИсправляемыеДокументы Цикл
		стрТЧ["Пометка"] = Истина;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СнятьПометку(Команда)
	Для каждого стрТч Из Объект.ИсправляемыеДокументы Цикл
		стрТЧ["Пометка"] = Ложь;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ИнвертироватьПометку(Команда)
	Для каждого стрТч Из Объект.ИсправляемыеДокументы Цикл
		стрТЧ["Пометка"] = Не стрТЧ["Пометка"];
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПометкуПересоздаваемые(Команда)
	Для каждого стрТч Из Объект.ПересоздаваемыеДокументы Цикл
		стрТЧ["Пометка"] = Истина;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СнятьПометкуПересоздаваемые(Команда)
	Для каждого стрТч Из Объект.ПересоздаваемыеДокументы Цикл
		стрТЧ["Пометка"] = Ложь;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ИнвертироватьПометкуПересоздаваемые(Команда)
	Для каждого стрТч Из Объект.ПересоздаваемыеДокументы Цикл
		стрТЧ["Пометка"] = Не стрТЧ["Пометка"];
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДокументыПересоздаваемые(Команда)
	СоздатьДокументыПересоздаваемыеНаСервере();
КонецПроцедуры
&НаСервере
Процедура СоздатьДокументыПересоздаваемыеНаСервере()
	Объект.ПересозданныеДокументы.Очистить();
	тзЗаказыПоОснованиям =Объект.ПересоздаваемыеДокументы.Выгрузить(); 
	мОтмеченных = тзЗаказыПоОснованиям.НайтиСтроки(Новый Структура("Пометка", Истина));
	тзОтмеченныхЗаказов = тзЗаказыПоОснованиям.Скопировать(мОтмеченных);
	мЗаказов = тзОтмеченныхЗаказов.ВыгрузитьКолонку("ЗаказНаЭмиссию");
	ТекстЗапроса = ТекстЗапросаДанныхЭмиссии(мЗаказов);
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("МассивЗаказов", мЗаказов);
	ПакетРезультатов = Запрос.ВыполнитьПакетСПромежуточнымиДанными();
	тзТовары = ПакетРезультатов[4].Выгрузить();
	тзОснования = ПакетРезультатов[8].Выгрузить();
	тзЗаказыПоОснованиям = ПакетРезультатов[6].Выгрузить();
	
	тзСозданныеДокументы = Новый ТаблицаЗначений;
	тзСозданныеДокументы.Колонки.Добавить("ЗаказНаЭмиссию", Новый ОписаниеТипов("ДокументСсылка.ЗаказНаЭмиссиюКодовМаркировкиСУЗ"));
	УспешноеВыполнение = Истина;

	ИтоговыйМассивДляОбработки = тзОснования.ВыгрузитьКолонку("ДокументОснование");
	
	Если ИтоговыйМассивДляОбработки.ВГраница() = -1 Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого Эл Из ИтоговыйМассивДляОбработки Цикл
		УспешнаяОбработкаПоПоставке = Истина;
		// Для каждого учетного документа создаются документы Заказов на эмиссию кодов маркировки
		// с учетом того, чтобы в каждом документе эмиссии было не более 10 строк.
		// например: в поступлении 300 строк - создается 30 заказов на эмиссию.
		
		мМассивовСтрок = Новый Массив;
		
		СтрукПоиска = Новый Структура("ДокументОснование", Эл);
		мСтрокТоваровДляЗаказа = тзТовары.НайтиСтроки(СтрукПоиска);
		Если мСтрокТоваровДляЗаказа.ВГраница() = -1 Тогда
			Продолжить;	
		КонецЕсли;
		тчТовары = тзТовары.Скопировать(мСтрокТоваровДляЗаказа);
		тчТовары.Свернуть("Номенклатура, Характеристика", "Количество, КоличествоУпаковок");
		
		мСтрокДляОдногоДокумента = Новый Массив;
		
		Сч = 1;
		Обработано = 0;
		КоличествоСтрок = тчТовары.Количество();
		Для каждого стрТч Из тчТовары Цикл
			Обработано = Обработано + 1;
			ОбобенностьУчета = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(стрТч["Номенклатура"], "ОсобенностьУчета");
			Если ОбобенностьУчета = Перечисления.ОсобенностиУчетаНоменклатуры.ОбувнаяПродукция Тогда
				Если Сч <= Мин(10, КоличествоСтрок) Тогда
					мСтрокДляОдногоДокумента.Добавить(стрТч);
				Иначе
					Сч = 1;
					мМассивовСтрок.Добавить(мСтрокДляОдногоДокумента);
					мСтрокДляОдногоДокумента = Новый Массив;
					мСтрокДляОдногоДокумента.Добавить(стрТч);
				КонецЕсли;
				Сч = Сч + 1;
			КонецЕсли;
			
		КонецЦикла;
		Если Обработано = КоличествоСтрок И мСтрокДляОдногоДокумента.ВГраница() > -1 Тогда
			мМассивовСтрок.Добавить(мСтрокДляОдногоДокумента);
		КонецЕсли;

		Для каждого ЭлМассив Из мМассивовСтрок Цикл
			
			тзТоварыДляОбработки = тчТовары.Скопировать(ЭлМассив);
			ДопПараметры = Новый Структура();
				Если ТипЗнч(Эл) = Тип("ДокументСсылка.ЗаявкаНаВозвратТоваровОтКлиента") Тогда
					ИмяНабора = "ВозвращаемыеТовары";
				Иначе
					ИмяНабора = "Товары";
				КонецЕсли;
			ДопПараметры.Вставить(ИмяНабора, тзТоварыДляОбработки);
			ДопПараметры.Вставить("НеПроверятьНаличиеЗаказаНаЭмиссию", Истина);
			ДопПараметры.Вставить("ПринудительноЗаполнятьОтветственного", Истина);
			
			Если Отладка Тогда
				НачатьТранзакцию();
			КонецЕсли;
			
			Результат = гф_ЭмиссияКодовМаркировкиВызовСервера.гф_СоздатьЗаказНаЭмиссиюКодовМаркировки(Эл, ДопПараметры);

			Если Не (ЗначениеЗаполнено(Результат["ЗаказНаЭмиссиюКодовМаркировкиСУЗ"]) 
				И Результат["ЗаказКодовВозможен"]) Тогда
				УспешноеВыполнение = Ложь;
				УспешнаяОбработкаПоПоставке = Ложь;
			Иначе
				нсСозданныеЗаказы = тзСозданныеДокументы.Добавить();
				нсСозданныеЗаказы["ЗаказНаЭмиссию"] = Результат["ЗаказНаЭмиссиюКодовМаркировкиСУЗ"];
			КонецЕсли;
			
			
			Если Отладка Тогда
				Если ТранзакцияАктивна() Тогда
					ОтменитьТранзакцию();	
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		Если УспешнаяОбработкаПоПоставке Тогда
			
			мЗаказовПоОснованию = тзЗаказыПоОснованиям.НайтиСтроки(Новый Структура("ДокументОснование" , Эл));
			
			Для каждого СтрЗаказПоОснованию Из мЗаказовПоОснованию Цикл
				обЗаказЭмиссии = СтрЗаказПоОснованию["ЗаказНаЭмиссию"].ПолучитьОбъект();
				обЗаказЭмиссии.ПометкаУдаления = Истина;
				Если Отладка Тогда
					НачатьТранзакцию();
				КонецЕсли;	
				обЗаказЭмиссии.Записать(?(обЗаказЭмиссии.Проведен, РежимЗаписиДокумента.ОтменаПроведения, РежимЗаписиДокумента.Запись));
				
				Если Отладка Тогда
					Если ТранзакцияАктивна() Тогда
						ОтменитьТранзакцию();
					КонецЕсли;
				КонецЕсли;
				
			КонецЦикла;	
		
		КонецЕсли;	
	КонецЦикла;

	
	Если УспешноеВыполнение Тогда
		РезультатОбработки = Истина;
	Иначе
		РезультатОбработки = Ложь;
	КонецЕсли;
	
	Объект.ПересозданныеДокументы.Загрузить(тзСозданныеДокументы);
КонецПроцедуры
