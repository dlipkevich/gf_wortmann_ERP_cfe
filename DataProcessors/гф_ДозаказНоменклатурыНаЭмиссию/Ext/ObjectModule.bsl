Процедура ПолучитьОстаткиКЗаказу() Экспорт
	
	Запрос       = Новый Запрос;
	Запрос.Текст =
	
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТоварыКОформлениюДокументовИмпортаОстатки.Организация КАК Организация,
	|	ТоварыКОформлениюДокументовИмпортаОстатки.ДокументПоступления КАК ДокументПоступления,
	|	СУММА(ТоварыКОформлениюДокументовИмпортаОстатки.КоличествоОстаток) КАК КоличествоОстаток
	|ПОМЕСТИТЬ ОстаткиГТД
	|ИЗ
	|	РегистрНакопления.ТоварыКОформлениюДокументовИмпорта.Остатки(
	|			,
	|			ВЫБОР
	|				КОГДА &Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ Организация = &Организация
	|			КОНЕЦ) КАК ТоварыКОформлениюДокументовИмпортаОстатки
	|ГДЕ
	|	НЕ &ПоДокументу
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлениюДокументовИмпортаОстатки.Организация,
	|	ТоварыКОформлениюДокументовИмпортаОстатки.ДокументПоступления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПриобретениеТоваровУслуг.Ссылка КАК ДокументПоступления
	|ПОМЕСТИТЬ СписокПоступлений
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг КАК ПриобретениеТоваровУслуг
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &ПоДокументу
	|				ТОГДА ПриобретениеТоваровУслуг.Ссылка = &ДокументПоступления
	|			ИНАЧЕ ПриобретениеТоваровУслуг.Ссылка В
	|					(ВЫБРАТЬ
	|						ОстаткиГТД.ДокументПоступления КАК ДокументПоступления
	|					ИЗ
	|						ОстаткиГТД КАК ОстаткиГТД
	|					ГДЕ
	|						ОстаткиГТД.КоличествоОстаток > 0)
	|		КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ПриобретениеТоваровУслуггф_ПродукцияВКоробах.Ссылка КАК ДокументПоступления
	|ПОМЕСТИТЬ СписокПоступленийКПроверке
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.гф_ПродукцияВКоробах КАК ПриобретениеТоваровУслуггф_ПродукцияВКоробах
	|ГДЕ
	|	ПриобретениеТоваровУслуггф_ПродукцияВКоробах.Ссылка В
	|			(ВЫБРАТЬ
	|				СписокПоступлений.ДокументПоступления КАК ДокументПоступления
	|			ИЗ
	|				СписокПоступлений КАК СписокПоступлений)
	|	И НЕ ПриобретениеТоваровУслуггф_ПродукцияВКоробах.IDКороба.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗаказНаЭмиссиюКодовМаркировкиСУЗ.Ссылка КАК Заказ,
	|	ЗаказНаЭмиссиюКодовМаркировкиСУЗ.ДокументОснование КАК ДокументПоступления
	|ПОМЕСТИТЬ СписокЗаказов
	|ИЗ
	|	Документ.ЗаказНаЭмиссиюКодовМаркировкиСУЗ КАК ЗаказНаЭмиссиюКодовМаркировкиСУЗ
	|ГДЕ
	|	ЗаказНаЭмиссиюКодовМаркировкиСУЗ.Проведен
	|	И ЗаказНаЭмиссиюКодовМаркировкиСУЗ.ДокументОснование В
	|			(ВЫБРАТЬ
	|				СписокПоступленийКПроверке.ДокументПоступления КАК ДокументПоступления
	|			ИЗ
	|				СписокПоступленийКПроверке КАК СписокПоступленийКПроверке)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПриобретениеТоваровУслугТовары.Номенклатура КАК Номенклатура,
	|	ПриобретениеТоваровУслугТовары.Характеристика КАК Характеристика,
	|	ПриобретениеТоваровУслугТовары.Количество КАК Количество,
	|	ПриобретениеТоваровУслугТовары.Ссылка КАК ДокументПоступления,
	|	ПриобретениеТоваровУслугТовары.Количество КАК Поступило,
	|	0 КАК Заказано,
	|	ПриобретениеТоваровУслугТовары.КоличествоУпаковок КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ТабСравнение
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ПриобретениеТоваровУслугТовары
	|ГДЕ
	|	ПриобретениеТоваровУслугТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				СписокПоступленийКПроверке.ДокументПоступления КАК ДокументПоступления
	|			ИЗ
	|				СписокПоступленийКПроверке КАК СписокПоступленийКПроверке)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары.Номенклатура,
	|	ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары.Характеристика,
	|	0 - ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары.Количество,
	|	СписокЗаказов.ДокументПоступления,
	|	0,
	|	ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары.Количество,
	|	0 - ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары.КоличествоУпаковок
	|ИЗ
	|	Документ.ЗаказНаЭмиссиюКодовМаркировкиСУЗ.Товары КАК ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокЗаказов КАК СписокЗаказов
	|		ПО ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары.Ссылка = СписокЗаказов.Заказ
	|ГДЕ
	|	ЗаказНаЭмиссиюКодовМаркировкиСУЗТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				СписокЗаказов.Заказ КАК Заказ
	|			ИЗ
	|				СписокЗаказов КАК СписокЗаказов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабСравнение.Номенклатура КАК Номенклатура,
	|	ТабСравнение.Характеристика КАК Характеристика,
	|	СУММА(ТабСравнение.Количество) КАК КоличествоОсталось,
	|	ТабСравнение.ДокументПоступления КАК ДокументПоступления,
	|	СУММА(ТабСравнение.Поступило) КАК Поступило,
	|	СУММА(ТабСравнение.Заказано) КАК Заказано,
	|	СУММА(ТабСравнение.КоличествоУпаковок) КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ОсталосьКЗаказу
	|ИЗ
	|	ТабСравнение КАК ТабСравнение
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабСравнение.ДокументПоступления,
	|	ТабСравнение.Номенклатура,
	|	ТабСравнение.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОсталосьКЗаказу.ДокументПоступления КАК ДокументПоступления,
	|	ОсталосьКЗаказу.Номенклатура КАК Номенклатура,
	|	ОсталосьКЗаказу.Характеристика КАК Характеристика,
	|	ОсталосьКЗаказу.КоличествоОсталось КАК Количество,
	|	ОсталосьКЗаказу.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ОсталосьКЗаказу.Поступило КАК Поступило,
	|	ОсталосьКЗаказу.Заказано КАК Заказано,
	|	ИСТИНА КАК Отметка
	|ИЗ
	|	ОсталосьКЗаказу КАК ОсталосьКЗаказу
	|ГДЕ
	|	ОсталосьКЗаказу.КоличествоОсталось > 0";
	Запрос.УстановитьПараметр("Организация",   Организация);
	Запрос.УстановитьПараметр("ДокументПоступления",      ДокументПоступления);
	Запрос.УстановитьПараметр("ПоДокументу",      ЗначениеЗаполнено(ДокументПоступления));
	
	НеЗаказано.Загрузить(Запрос.Выполнить().Выгрузить());
КонецПроцедуры

Процедура ДозаказатьНоменклатуру() Экспорт
	СозданныеДокументы.Очистить();

	
	тзСозданныеДокументы = Новый ТаблицаЗначений;
	тзСозданныеДокументы.Колонки.Добавить("ЗаказНаЭмиссию", Новый ОписаниеТипов("ДокументСсылка.ЗаказНаЭмиссиюКодовМаркировкиСУЗ"));
	УспешноеВыполнение = Истина;
	
	ТабКОбработке = НеЗаказано.Выгрузить(Новый Структура("Отметка", Истина));
	ТабОснования = ТабКОбработке.Скопировать();
	ТабОснования.Свернуть("ДокументПоступления");
	ИтоговыйМассивДляОбработки = ТабОснования.ВыгрузитьКолонку("ДокументПоступления");
	
	Если ИтоговыйМассивДляОбработки.ВГраница() = -1 Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого Эл Из ИтоговыйМассивДляОбработки Цикл
		УспешнаяОбработкаПоПоставке = Истина;
		// Для каждого учетного документа создаются документы Заказов на эмиссию кодов маркировки
		// с учетом того, чтобы в каждом документе эмиссии было не более 10 строк.
		// например: в поступлении 300 строк - создается 30 заказов на эмиссию.
		
		мМассивовСтрок = Новый Массив;
		
		СтрукПоиска = Новый Структура("ДокументПоступления", Эл);
		мСтрокиТоваровДляЗаказа = ТабКОбработке.НайтиСтроки(СтрукПоиска);
		Если мСтрокиТоваровДляЗаказа.Количество() = 0 Тогда
			Продолжить;	
		КонецЕсли;
		тчТовары = ТабКОбработке.Скопировать(мСтрокиТоваровДляЗаказа);
		
		мСтрокДляОдногоДокумента = Новый Массив;
		
		Сч = 1;
		Обработано = 0;
		КоличествоСтрок = мСтрокиТоваровДляЗаказа.Количество();
		Для каждого стрТч Из тчТовары Цикл
			Обработано = Обработано + 1;
			ОбобенностьУчета = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(стрТч["Номенклатура"], "ОсобенностьУчета");
			Если ОбобенностьУчета = Перечисления.ОсобенностиУчетаНоменклатуры.ОбувнаяПродукция Тогда
				Если Сч <= Мин(10, КоличествоСтрок) Тогда
					мСтрокДляОдногоДокумента.Добавить(стрТч);
				Иначе
					Сч = 1;
					мМассивовСтрок.Добавить(мСтрокДляОдногоДокумента);
					мСтрокДляОдногоДокумента = Новый Массив;
					мСтрокДляОдногоДокумента.Добавить(стрТч);
				КонецЕсли;
				Сч = Сч + 1;
			КонецЕсли;
			
		КонецЦикла;
		Если Обработано = КоличествоСтрок И мСтрокДляОдногоДокумента.ВГраница() > -1 Тогда
			мМассивовСтрок.Добавить(мСтрокДляОдногоДокумента);
		КонецЕсли;

		Для каждого ЭлМассив Из мМассивовСтрок Цикл
			
			тзТоварыДляОбработки = ТабКОбработке.Скопировать(ЭлМассив);
			ДопПараметры = Новый Структура();
			ИмяНабора = "Товары";
			ДопПараметры.Вставить(ИмяНабора, тзТоварыДляОбработки);
			ДопПараметры.Вставить("НеПроверятьНаличиеЗаказаНаЭмиссию", Истина);
			ДопПараметры.Вставить("ПринудительноЗаполнятьОтветственного", Истина);
						
			Результат = гф_ЭмиссияКодовМаркировкиВызовСервера.гф_СоздатьЗаказНаЭмиссиюКодовМаркировки(Эл, ДопПараметры);

			Если Не (ЗначениеЗаполнено(Результат["ЗаказНаЭмиссиюКодовМаркировкиСУЗ"]) 
				И Результат["ЗаказКодовВозможен"]) Тогда
				УспешноеВыполнение = Ложь;
				УспешнаяОбработкаПоПоставке = Ложь;
			Иначе
				нсСозданныеЗаказы = тзСозданныеДокументы.Добавить();
				нсСозданныеЗаказы["ЗаказНаЭмиссию"] = Результат["ЗаказНаЭмиссиюКодовМаркировкиСУЗ"];
			КонецЕсли;			
			
		КонецЦикла;
		
	КонецЦикла;

	
	Если УспешноеВыполнение Тогда
		РезультатОбработки = Истина;
	Иначе
		РезультатОбработки = Ложь;
	КонецЕсли;
	
	СозданныеДокументы.Загрузить(тзСозданныеДокументы);
КонецПроцедуры
	

