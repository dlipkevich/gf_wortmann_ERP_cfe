
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Параметры.Свойство("ОбъектыМетаданных") Тогда
		ОбъектыМетаданных = СтрСоединить(Параметры.ОбъектыМетаданных, Символы.ПС);
	КонецЕсли;
	
	ПерезаполнитьОбъектыМетаданных = Истина;
	Если Параметры.Свойство("ПерезаполненыОбъекты") И Параметры.ПерезаполненыОбъекты Тогда
		ПерезаполнитьОбъектыМетаданных = Ложь;
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Очистить(Команда)
	
	ОбъектыМетаданных = "";
	
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьИзФайла(Команда)
	
	ПараметрыДиалога = Новый ПараметрыДиалогаПомещенияФайлов;
	ПараметрыДиалога.МножественныйВыбор = Ложь;
	ПараметрыДиалога.Заголовок = НСтр("ru = 'Выберите файл для загрузки'");
   	ПараметрыДиалога.Фильтр = НСтр("ru = '(*.дым)|*.дым'");

	ОбработчикОкончанияПомещения = Новый ОписаниеОповещения("ОкончанияВыбораФайла", ЭтотОбъект);
	НачатьПомещениеФайлаНаСервер(ОбработчикОкончанияПомещения,,,, ПараметрыДиалога, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьОбъектамиРасширений(Команда)
	
	ЗаполнитьИзРасширений();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИзХранилища(Команда)
	
	ПараметрыФормы = Новый Структура;
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ЗаполнитьИзХранилищаЗавершение", ЭтотОбъект);
	
	ОткрытьФорму("ВнешняяОбработка.ТестерВышелПодымить.Форма.ИнформацияХранилища", ПараметрыФормы, ЭтотОбъект,,,,
		ОповещениеОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИзНастройкиПоддержки(Команда)
	
	ПараметрыФормы = Новый Структура;
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ЗаполнитьИзНастройкиПоддержкиЗавершение", ЭтотОбъект);
	
	ОткрытьФорму("ВнешняяОбработка.ТестерВышелПодымить.Форма.ИнформацияПоддержки", ПараметрыФормы, ЭтотОбъект,,,,
		ОповещениеОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте
Процедура СохранитьВФайл(Команда)
	
	АдресХранилища = ПоместитьВоВременноеХранилище(ОбъектыМетаданных, УникальныйИдентификатор);
	
	ИмяСохраняемогоФайла = НСтр("ru = 'Объекты тестирования.дым'");
	
	НачатьПолучениеФайлаССервера(АдресХранилища, ИмяСохраняемогоФайла);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьОбъектыМетаданных(Команда)
	
	ПараметрыЗакрытия = Новый Структура;
	ПараметрыЗакрытия.Вставить("ПерезаполнитьОбъектыМетаданных", ПерезаполнитьОбъектыМетаданных);	
	ПараметрыЗакрытия.Вставить("ОбъектыМетаданных", ОбъектыМетаданных);
	
	Закрыть(ПараметрыЗакрытия);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьИзРасширений()
	
	МассивОбъектов = СтрРазделить(ОбъектыМетаданных, Символы.ПС, Ложь);
	
	ПрочитатьИзмененияКлассаВРасширениях(МассивОбъектов, "Справочники");
	ПрочитатьИзмененияКлассаВРасширениях(МассивОбъектов, "ПланыВидовХарактеристик");
	ПрочитатьИзмененияКлассаВРасширениях(МассивОбъектов, "ПланыВидовРасчета");
	ПрочитатьИзмененияКлассаВРасширениях(МассивОбъектов, "Документы");
	ПрочитатьИзмененияКлассаВРасширениях(МассивОбъектов, "Отчеты");
	ПрочитатьИзмененияКлассаВРасширениях(МассивОбъектов, "Обработки");
	
	СписокОбъектов = Новый СписокЗначений;
	СписокОбъектов.ЗагрузитьЗначения(МассивОбъектов);
	СписокОбъектов.СортироватьПоЗначению();
	МассивОбъектов = СписокОбъектов.ВыгрузитьЗначения();
	
	ОбъектыМетаданных = СтрСоединить(МассивОбъектов, Символы.ПС);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПрочитатьИзмененияКлассаВРасширениях(МассивОбъектов, Класс)
	
	Для Каждого Метаданное Из Метаданные[Класс] Цикл
		
		ПолноеИмяОбъекта = Метаданное.ПолноеИмя();
		
		Если (Метаданное.ЕстьИзмененияРасширениямиКонфигурации() Или Метаданное.РасширениеКонфигурации() <> Неопределено)
			И МассивОбъектов.Найти(ПолноеИмяОбъекта) = Неопределено Тогда
			МассивОбъектов.Добавить(ПолноеИмяОбъекта);	
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОкончанияВыбораФайла(ОписаниеПомещенногоФайла, ДополнительныеПараметры) Экспорт

	Если ОписаниеПомещенногоФайла = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(ОписаниеПомещенногоФайла.Адрес);
	ИмяФайлаДанных = ПолучитьИмяВременногоФайла("txt");
	ДвоичныеДанные.Записать(ИмяФайлаДанных);
	
	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	ТекстовыйДокумент.Прочитать(ИмяФайлаДанных);
	
	ОбъектыМетаданных = ТекстовыйДокумент.ПолучитьТекст();
	
	УдалитьФайлы(ИмяФайлаДанных);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИзНастройкиПоддержкиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Не ЗначениеЗаполнено(Результат) Тогда
		Возврат;
	КонецЕсли;  
	
	ДополнитьОбъектыМетаданныхИзМассива(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИзХранилищаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Не ЗначениеЗаполнено(Результат) Тогда
		Возврат;
	КонецЕсли;  
	
	ДополнитьОбъектыМетаданныхИзМассива(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнитьОбъектыМетаданныхИзМассива(МассивОткуда)
	
	МассивОбъектов = СтрРазделить(ОбъектыМетаданных, Символы.ПС, Ложь);
	
	Для Каждого ПолноеИмяОбъекта Из МассивОткуда Цикл
		
		Если ЗначениеЗаполнено(ПолноеИмяОбъекта) И МассивОбъектов.Найти(ПолноеИмяОбъекта) = Неопределено  Тогда
			МассивОбъектов.Добавить(ПолноеИмяОбъекта);	
		КонецЕсли;
		
	КонецЦикла;
		
	СписокОбъектов = Новый СписокЗначений;
	СписокОбъектов.ЗагрузитьЗначения(МассивОбъектов);
	СписокОбъектов.СортироватьПоЗначению();
	МассивОбъектов = СписокОбъектов.ВыгрузитьЗначения();
	
	ОбъектыМетаданных = СтрСоединить(МассивОбъектов, Символы.ПС);
	
КонецПроцедуры

#КонецОбласти