// #wortmann {
// e1cib/data/Задача.ЗадачаИсполнителя?ref=8eabb083fed1320811ee1c9530c1660c
// При удачном введении GTIN открывается ввод КМ 
// Галфинд_Домнышева 2023/07/17
&НаКлиенте
Процедура ОтсканироватьGTINПриИзменении(Элемент)
	
	Если ОтсканироватьGTIN = "" Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю("Введите GTIN заново!");
		Возврат;
	КонецЕсли;	

	Элементы.ОтсканироватьGTIN.Видимость = Ложь;
	Элементы.ОтсканироватьКМ.Видимость = Истина;
	
	ТекущийЭлемент = Элементы.ОтсканироватьКМ;
	
КонецПроцедуры// } #wortmann

// #wortmann {
// e1cib/data/Задача.ЗадачаИсполнителя?ref=8eabb083fed1320811ee1c9530c1660c
// При удачном введении КМ вызывается группа команд 
// Галфинд_Домнышева 2023/07/17
&НаКлиенте
Процедура ОтсканироватьКМПриИзменении(Элемент)
	
	Если ОтсканироватьКМ = "" Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю("Введите КМ заново!");
		Возврат;
	КонецЕсли;	
	
	Результат = ОтсканироватьКМПриИзмененииНаСервере();
	
	Элементы.ОтсканироватьКМ.Видимость = Ложь;
	Элементы.ГруппаКоманд.Видимость = Истина;
		//ЭтотОбъект.ТекущийЭлемент = Элементы.ОтсканироватьКМ;
	Если НЕ Результат Тогда 
		Элементы.Завершить.Видимость = Ложь;	
	КонецЕсли;
	
КонецПроцедуры// } #wortmann

// #wortmann {
// e1cib/data/Задача.ЗадачаИсполнителя?ref=8eabb083fed1320811ee1c9530c1660c
// Команда повторит 
// Галфинд_Домнышева 2023/07/17
&НаКлиенте
Процедура Повторить(Команда)
	
	Элементы.ОтсканироватьGTIN.Видимость = Истина;
	Элементы.ОтсканироватьКМ.Видимость = Ложь;
    Элементы.ГруппаКоманд.Видимость = Ложь;
	
	ОтсканироватьGTIN = "";
	ОтсканироватьКМ = "";
	
	ТекущийЭлемент = Элементы.ОтсканироватьGTIN;

КонецПроцедуры// } #wortmann

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// #wortmann {
	// e1cib/data/Задача.ЗадачаИсполнителя?ref=8eabb083fed1320811ee1c9530c1660c
	// Галфинд_Домнышева 2023/07/17
	ДокументОснованиеПеремаркировки = Параметры.ДокументОснованиеПеремаркировки;
	// } #wortmann
КонецПроцедуры

// #wortmann {
// e1cib/data/Задача.ЗадачаИсполнителя?ref=8eabb083fed1320811ee1c9530c1660c
// Проверяется принадлежность КМ и GTIN, документу Основанию и в РС гф_КМДляПеремаркировки
// Галфинд_Домнышева 2023/07/17 
//
// Возвращаемое значение:
//	Булево - Истина в случае успешного подтверждения КМ, иначе Ложь
&НаСервере
Функция  ОтсканироватьКМПриИзмененииНаСервере()
	
	// 	1. GTIN = КМ?
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ШтрихкодыУпаковокТоваров.ЗначениеШтрихкода КАК КМ,
		|	ШтрихкодыУпаковокТоваров.Номенклатура КАК Номенклатура,
		|	ШтрихкодыУпаковокТоваров.Характеристика КАК Характеристика,
		|	ШтрихкодыНоменклатуры.Штрихкод КАК Штрихкод
		|ПОМЕСТИТЬ Справочно
		|ИЗ
		|	Справочник.ШтрихкодыУпаковокТоваров КАК ШтрихкодыУпаковокТоваров
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
		|		ПО ШтрихкодыУпаковокТоваров.Номенклатура = ШтрихкодыНоменклатуры.Номенклатура
		|			И ШтрихкодыУпаковокТоваров.Характеристика = ШтрихкодыНоменклатуры.Характеристика
		|ГДЕ
		|	ШтрихкодыУпаковокТоваров.ЗначениеШтрихкода = &КМ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА Справочно.Штрихкод = &GTIN
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК Результат
		|ИЗ
		|	Справочно КАК Справочно";
	
	Запрос.УстановитьПараметр("GTIN", ОтсканироватьGTIN);
	Запрос.УстановитьПараметр("КМ", ОтсканироватьКМ);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Выборка.Следующий();
	
	Если РезультатЗапроса.Пустой() ИЛИ НЕ Выборка.Результат Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Отсканированные GTIN и КМ не соответствуют друг другу."); 
		Возврат Ложь;
	КонецЕсли;
	
	ПодтверждаемыйКМ = ОпределитьКМПоЗначению();

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаявкаНаВозвратТоваровОтКлиентаВозвращаемыеТовары.гф_ПеремаркировкаТовара КАК ПеремаркировкаТовара
		|ПОМЕСТИТЬ Документ
		|ИЗ
		|	Документ.ЗаявкаНаВозвратТоваровОтКлиента.ВозвращаемыеТовары КАК ЗаявкаНаВозвратТоваровОтКлиентаВозвращаемыеТовары
		|ГДЕ
		|	ЗаявкаНаВозвратТоваровОтКлиентаВозвращаемыеТовары.Ссылка = &Заявка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПеремаркировкаТоваровИСМПТовары.НовыйКодМаркировки КАК КМ
		|ИЗ
		|	Документ.ПеремаркировкаТоваровИСМП.Товары КАК ПеремаркировкаТоваровИСМПТовары
		|ГДЕ
		|	ПеремаркировкаТоваровИСМПТовары.Ссылка В
		|			(ВЫБРАТЬ
		|				Документ.ПеремаркировкаТовара
		|			ИЗ
		|				Документ КАК Документ)
		|	И ПеремаркировкаТоваровИСМПТовары.НовыйКодМаркировки = &КМ";
	
		
	Если ТипЗнч(ДокументОснованиеПеремаркировки) = Тип("ДокументСсылка.ЗаявкаНаВозвратТоваровОтКлиента") Тогда
		Запрос.УстановитьПараметр("Заявка", ДокументОснованиеПеремаркировки);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ЗаявкаНаВозвратТоваровОтКлиентаВозвращаемыеТовары.Ссылка = &Заявка",
		"ЗаявкаНаВозвратТоваровОтКлиентаВозвращаемыеТовары.гф_ПеремаркировкаТовара = &Перемаркировка");
		Запрос.УстановитьПараметр("Перемаркировка", ДокументОснованиеПеремаркировки);
	КонецЕсли;
	Запрос.УстановитьПараметр("КМ", ПодтверждаемыйКМ);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Отсканированный КМ не найден в выбранном документе основания."); 
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	гф_КМДляПеремаркировки.Распечатан КАК Распечатан,
		|	гф_КМДляПеремаркировки.Подтвержден КАК Подтвержден
		|ИЗ
		|	РегистрСведений.гф_КМДляПеремаркировки КАК гф_КМДляПеремаркировки
		|ГДЕ
		|	гф_КМДляПеремаркировки.ПеремаркированныйКМ = &КМ";
	
	Запрос.УстановитьПараметр("КМ", ПодтверждаемыйКМ);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		Выборка.Следующий();
		Если Выборка.Подтвержден Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Отсканированный КМ был подтвержден ранее."); 
			Возврат Ложь;
		КонецЕсли;
		Если НЕ Выборка.Распечатан Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Отсканированный КМ не был распечатан ранее."); 
			Возврат Ложь;
		КонецЕсли;
		
		ПроизвестиПодтверждениеУказанногоКМ(); 
		Возврат Истина;
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("По отсканированному КМ нет записей в РС ""КМ для Перемаркировки""."); 
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции// } #wortmann

// #wortmann {
// e1cib/data/Задача.ЗадачаИсполнителя?ref=8eabb083fed1320811ee1c9530c1660c
// Запись в РС гф_КМДляПеремаркировки для ПодтверждаемыйКМ флага Подтвержден
// Галфинд_Домнышева 2023/07/17
&НаСервере
Процедура ПроизвестиПодтверждениеУказанногоКМ()
	
	ТекДата = ТекущаяДатаСеанса();
	
	НаборЗаписей = РегистрыСведений.гф_КМДляПеремаркировки.СоздатьНаборЗаписей();	
	НаборЗаписей.Отбор.ПеремаркированныйКМ.Установить(ПодтверждаемыйКМ); 
	НаборЗаписей.Прочитать();
	
	ТекущиеЗначения = НаборЗаписей.Выгрузить(); 
	Для каждого Запись Из ТекущиеЗначения Цикл
		Запись.Подтвержден = Истина; 
		Запись.ВремяПодтверждения = ТекДата;				
	КонецЦикла;
	НаборЗаписей.Загрузить(ТекущиеЗначения);
	
	Попытка	
		НаборЗаписей.Записать();    		
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось внести сведения по подтверждению КМ в РС ""КМ для Перемаркировки""."); 
		Возврат;
	КонецПопытки;
	 
	ПодтвержденныеКМ.Добавить(ПодтверждаемыйКМ);
	
КонецПроцедуры// } #wortmann

// #wortmann {
// e1cib/data/Задача.ЗадачаИсполнителя?ref=8eabb083fed1320811ee1c9530c1660c
// Определяет ссылку на элемент СправочникСсылка.ШтрихкодыУпаковокТоваров для ОтсканироватьКМ 
// Галфинд_Домнышева 2023/07/17
//
// Возвращаемое значение:
//	СправочникСсылка.ШтрихкодыУпаковокТоваров
&НаСервере
Функция ОпределитьКМПоЗначению() 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ШтрихкодыУпаковокТоваров.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ШтрихкодыУпаковокТоваров КАК ШтрихкодыУпаковокТоваров
		|ГДЕ
		|	ШтрихкодыУпаковокТоваров.ЗначениеШтрихкода = &КМ";
	
	Запрос.УстановитьПараметр("КМ", ОтсканироватьКМ);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Выборка.Следующий();
	
	Возврат Выборка.Ссылка;
	
КонецФункции// } #wortmann

// #wortmann {
// e1cib/data/Задача.ЗадачаИсполнителя?ref=8eabb083fed1320811ee1c9530c1660c
// Команда Завершить передает на форму владельца название команды и ПодтвержденныеКМ. 
// Галфинд_Домнышева 2023/07/17
&НаКлиенте
Процедура Завершить(Команда)
	СтруктураЗакрытия = Новый Структура;
	СтруктураЗакрытия.Вставить("ПодтвержденныеКМ", ПодтвержденныеКМ);
	СтруктураЗакрытия.Вставить("Команда", Команда.Имя);
	
	Закрыть(СтруктураЗакрытия);
КонецПроцедуры// } #wortmann

// #wortmann {
// e1cib/data/Задача.ЗадачаИсполнителя?ref=8eabb083fed1320811ee1c9530c1660c
// При ручном закрытии передает на форму владельца ПодтвержденныеКМ. 
// Галфинд_Домнышева 2023/07/17
&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	// #wortmann {
	// e1cib/data/Задача.ЗадачаИсполнителя?ref=8eabb083fed1320811ee40ea0c7c088b
	// Завершает работу с формой при принудительном закрытии 
	// Галфинд_Домнышева 2023/08/23
	Если ОтсканироватьGTIN = "" ИЛИ ОтсканироватьКМ = "" Тогда
		ЗавершениеРаботы = Истина;
	Иначе
	// } #wortmann	
		СтруктураЗакрытия = Новый Структура;
		СтруктураЗакрытия.Вставить("ПодтвержденныеКМ", ПодтвержденныеКМ);
		
		Закрыть(СтруктураЗакрытия); 
	КонецЕсли;
    
КонецПроцедуры// } #wortmann

