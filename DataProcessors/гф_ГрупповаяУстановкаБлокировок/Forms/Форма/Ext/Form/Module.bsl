 #Область ОбработчикиКомандФормы

// #wortmann {
// #Груповая установка блокировок
// Галфинд(Просто) Боцманова 2022/09/09
// Отмечает все строки
&НаКлиенте
Процедура КомандаОтметитьВсе(Команда)
	
	Для Каждого Строка Из Объект.Блокировка Цикл
		
		Строка.Флаг = Истина;	
		
	КонецЦикла;
	
КонецПроцедуры
// } #wortmann

// #wortmann {
// #Груповая установка блокировок
// Галфинд(Просто) Боцманова 2022/09/09
// Снимает все отметки
//
&НаКлиенте
Процедура КомандаСнятьВсеОтметки(Команда)
	
	Для Каждого Строка Из Объект.Блокировка Цикл
		
		Строка.Флаг = Ложь;	
		
	КонецЦикла;
	
КонецПроцедуры
// } #wortmann

// #wortmann {
// #Груповая установка блокировок
// Галфинд(Просто) Боцманова 2022/09/09
// Заполняет данными из регистра причины блокировок ,где звблокирован равно истина и на дату указанную в обработке
//
&НаСервере
Процедура ЗаполнитьЗаблокированнымиНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	гф_ПричиныБлокировокСрезПоследних.Контрагент КАК Контрагент,
		|	гф_ПричиныБлокировокСрезПоследних.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	гф_ПричиныБлокировокСрезПоследних.ВидБлокировки КАК ВидБлокировки,
		|	гф_ПричиныБлокировокСрезПоследних.Заблокирован КАК Заблокирован
		|ИЗ
		|	РегистрСведений.гф_ПричиныБлокировок.СрезПоследних(&Дата, Заблокирован = ИСТИНА) КАК гф_ПричиныБлокировокСрезПоследних"; 
	Запрос.УстановитьПараметр("Дата", КонецДня(Дата));
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	Объект.Блокировка.Загрузить(РезультатЗапроса);
КонецПроцедуры
// } #wortmann

// #wortmann {
// #Груповая установка блокировок
// Галфинд(Просто) Боцманова 2022/09/09
//
&НаКлиенте
Процедура ЗаполнитьЗаблокированными(Команда)
	ЗаполнитьЗаблокированнымиНаСервере();
КонецПроцедуры
// } #wortmann 

// #wortmann {
// Галфинд(Просто) Боцманова 2022/09/09
&НаСервере
Процедура УстановитьЗначенияНаСервере()
КонецПроцедуры
// } #wortmann

// #wortmann {
// Галфинд(Просто) Боцманова 2022/09/09
//
// Параметры:
//
// Команда - команда формы
&НаКлиенте
Процедура УстановитьЗначения(Команда) 
	УстановитьЗначенияНаСервере();
КонецПроцедуры

// #wortmann {
// #Груповая установка блокировок
// Галфинд(Просто) Боцманова 2022/09/09
//
&НаСервере
Процедура ВыполнитьНаСервере()
	
	Для Каждого стр Из объект.Блокировка Цикл
		Если стр.Флаг Тогда
			ПроверкаНаУникальностьЗаписейПоПериоду(стр.Контрагент, стр.ДоговорКонтрагента, стр.ВидБлокировки); 
			Документ = Документы.гф_БлокировкаРазблокировкаОтгрузок.СоздатьДокумент(); 
			ЗаполнитьЗначенияСвойств(Документ, стр);
			Документ.Дата = Дата;
			Документ.Ответственный = Пользователи.ТекущийПользователь();
			Документ.Комментарий = "Создано обработкой Групповая установка блокировок.";
			Документ.Записать(РежимЗаписиДокумента.Проведение);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// #wortmann {
// #Групповое содание документов на основе текущих данных
// Галфинд(Просто) Боцманова 2022/09/09
//
&НаКлиенте
Процедура ВыполнитьОперацию(Команда)
	ВыполнитьНаСервере();
КонецПроцедуры
// } #wortmann 

// #wortmann {
// #Проверяет на уникальность по периоду у регистра,в случае нахождения,идет перезапись и вывод сообщения
// Галфинд(Просто) Боцманова 2022/09/09
//
&НаСервере
Процедура ПроверкаНаУникальностьЗаписейПоПериоду(Контрагент, ДоговорКонтрагента, ВидБлокировки)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	гф_ПричиныБлокировок.Регистратор КАК Регистратор
		|ИЗ
		|	РегистрСведений.гф_ПричиныБлокировок КАК гф_ПричиныБлокировок
		|ГДЕ
		|	гф_ПричиныБлокировок.Период = &Период";
	
	Запрос.УстановитьПараметр("Период", Дата);

	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл 
		НаборЗаписей = РегистрыСведений.гф_ПричиныБлокировок.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Регистратор, Истина); 
		НаборЗаписей.Прочитать();
		Если Не НаборЗаписей.Количество() = 0 Тогда
			СуществующаяЗапись = НаборЗаписей[0];
			СуществующаяЗапись.Период = СуществующаяЗапись.Период-1;
			НаборЗаписей.Записать();
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = СтрШаблон("Внимание! По %1 %2 была запись на «%3»",
			СуществующаяЗапись.Контрагент, СуществующаяЗапись.ДоговорКонтрагента, Дата);
			Сообщение.Сообщить();
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры
// } #wortmann

// #wortmann {
// #Загрузка данных из файла
// Галфинд(Просто) Боцманова 2022/09/09
//
&НаКлиенте
Процедура ЗагрузкаДанныхИзТабличногоДокумента(Команда)
	
	ПараметрыЗагрузки = ЗагрузкаДанныхИзФайлаКлиент.ПараметрыЗагрузкиДанных();
	ПараметрыЗагрузки.ПолноеИмяТабличнойЧасти = "Обработка.гф_ГрупповаяУстановкаБлокировок.Блокировка";
	ПараметрыЗагрузки.Заголовок = НСтр("ru = 'Загрузка из файла';
										|en = 'Import from file'");
	Оповещение = Новый ОписаниеОповещения("ЗагрузитьИзФайлаЗавершение", ЭтотОбъект);
	ЗагрузкаДанныхИзФайлаКлиент.ПоказатьФормуЗагрузки(ПараметрыЗагрузки, Оповещение);
	
КонецПроцедуры
// } #wortmann

// #wortmann {
// #Загрузка данных из файла
// Галфинд(Просто) Боцманова 2022/09/09
//

&НаКлиенте
Процедура ЗагрузитьИзФайлаЗавершение(АдресЗагруженныхДанных, ДополнительныеПараметры) Экспорт
	
	Если АдресЗагруженныхДанных = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ЗагрузитьИзФайлаНаСервере(АдресЗагруженныхДанных);
	
КонецПроцедуры
// } #wortmann 

// #wortmann {
// #Загрузка данных из файла
// Галфинд(Просто) Боцманова 2022/09/09
//
&НаСервере
Процедура ЗагрузитьИзФайлаНаСервере(АдресЗагруженныхДанных)
	
	ЗагруженныеДанные = ПолучитьИзВременногоХранилища(АдресЗагруженныхДанных);
	
	Для каждого СтрокаТаблицы Из ЗагруженныеДанные Цикл 
	
		Если Не ЗначениеЗаполнено(СтрокаТаблицы.Контрагент) Тогда 
			Продолжить;
		КонецЕсли;
	
		НоваяСтрока = Объект.Блокировка.Добавить();
		НоваяСтрока.Флаг = СтрокаТаблицы.Флаг;
		НоваяСтрока.Контрагент = СтрокаТаблицы.Контрагент;
		НоваяСтрока.ДоговорКонтрагента = СтрокаТаблицы.ДоговорКонтрагента;
		НоваяСтрока.ВидБлокировки = СтрокаТаблицы.ВидБлокировки;
		НоваяСтрока.Заблокирован = СтрокаТаблицы.Заблокирован;
		НоваяСтрока.Комментарий = СтрокаТаблицы.Комментарий;
		
	КонецЦикла;
	
КонецПроцедуры
// } #wortmann

#КонецОбласти

