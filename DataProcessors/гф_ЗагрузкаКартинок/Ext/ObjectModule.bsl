#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Функция ЗагрузитьКартинкиИзКаталога(МассивФайлов) Экспорт
	
	ИменаЗагруженныхФайлов = Новый Массив;
	
	Если Не ЗначениеЗаполнено(МассивФайлов) Тогда
		Возврат ИменаЗагруженныхФайлов;
	КонецЕсли;
	
	ЗапросПрисоединенныхФайлов = Новый Запрос( 
	"ВЫБРАТЬ
	|	НоменклатураПрисоединенныеФайлы.Ссылка КАК Ссылка,
	|	НоменклатураПрисоединенныеФайлы.ПометкаУдаления КАК ПометкаУдаления
	|ИЗ
	|	Справочник.НоменклатураПрисоединенныеФайлы КАК НоменклатураПрисоединенныеФайлы
	|ГДЕ
	|	НоменклатураПрисоединенныеФайлы.Наименование = &Наименование
	|	И НоменклатураПрисоединенныеФайлы.ВладелецФайла = &ВладелецФайла
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПометкаУдаления УБЫВ");
	
	ЗапросНоменклатуры = новый Запрос(
	"ВЫБРАТЬ
		|	ДополнительныеСведения.Объект КАК Ссылка,
		|	ДополнительныеСведения.Объект.ФайлКартинки КАК ФайлКартинки,
		|	ДополнительныеСведения.Значение КАК Значение
		|ИЗ
		|	РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
		|ГДЕ
		|	ДополнительныеСведения.Объект ССЫЛКА Справочник.Номенклатура
		|	И ДополнительныеСведения.Свойство = &Свойство
		|	И ДополнительныеСведения.Значение = &Значение");
	ЗапросНоменклатуры.УстановитьПараметр("Свойство", НайтиДополнительноеСвойствоПоИмени());
	
	Для Каждого Файл Из МассивФайлов Цикл 
		
		ЗапросНоменклатуры.УстановитьПараметр("Значение", Файл.Имя);
		
		ВыборкаНоменклатуры = ЗапросНоменклатуры.Выполнить().Выбрать();
		Если ВыборкаНоменклатуры.Следующий() Тогда
			
			НоменклатураСсылка = ВыборкаНоменклатуры["Ссылка"];
			
			ПрисоединенныйФайл = Неопределено;
			
			ЗапросПрисоединенныхФайлов.УстановитьПараметр("Наименование", Файл.ИмяБезРасширения);
			ЗапросПрисоединенныхФайлов.УстановитьПараметр("ВладелецФайла", НоменклатураСсылка);
			ВыборкаПрисоединенныхФайлов = ЗапросПрисоединенныхФайлов.Выполнить().Выбрать();
			Пока ВыборкаПрисоединенныхФайлов.Следующий() Цикл
				Если Не ВыборкаПрисоединенныхФайлов["ПометкаУдаления"] Тогда
					ПрисоединенныйФайл = ВыборкаПрисоединенныхФайлов["Ссылка"];	
				КонецЕсли;
			КонецЦикла;
			
			Если Не ЗначениеЗаполнено(ПрисоединенныйФайл) Тогда
				
				ПараметрыФайла = Новый Структура("Автор, ВладелецФайлов, ВремяИзмененияУниверсальное, 
				|ГруппаФайлов, ИмяБезРасширения, РасширениеБезТочки, Служебный");
				ПараметрыФайла.Автор = "";
				ПараметрыФайла.ВладелецФайлов = НоменклатураСсылка;
				ПараметрыФайла.ВремяИзмененияУниверсальное = Файл.ВремяИзменения; 
				ПараметрыФайла.ГруппаФайлов = "";
				ПараметрыФайла.ИмяБезРасширения = Файл.ИмяБезРасширения;
				ПараметрыФайла.РасширениеБезТочки = ОбщегоНазначенияКлиентСервер.РасширениеБезТочки(Файл.Расширение);
				ПараметрыФайла.Служебный = Ложь;
				
				ПрисоединенныйФайл = РаботаСФайламиСлужебныйВызовСервера.ДобавитьФайл(ПараметрыФайла, Файл.Адрес, "");
				
			КонецЕсли;
				
			Если Не ЗначениеЗаполнено(ВыборкаНоменклатуры["ФайлКартинки"])
				Или ВыборкаНоменклатуры["ФайлКартинки"] <> ПрисоединенныйФайл Тогда 
			
				НоменклатураОбъект = НоменклатураСсылка.ПолучитьОбъект();
				НоменклатураОбъект.ФайлКартинки = ПрисоединенныйФайл;
				НоменклатураОбъект.Записать();
				
				Сообщение = "Загружена картинка - " + ПрисоединенныйФайл;
				ЗаписатьВПротокол(Сообщение);
				
			Иначе 
				
				Сообщение = "Такая картинка уже есть: " + Файл.ИмяБезРасширения;
				ЗаписатьВПротокол(Сообщение, 2);
				
			КонецЕсли;
			
			ИменаЗагруженныхФайлов.Добавить(Файл.Имя);
			
		Иначе 
			
			Сообщение = "Не найдено название картинки: " + Файл.ИмяБезРасширения + " в дополнительных сведениях Номенклатуры.";
			ЗаписатьВПротокол(Сообщение, 3);
			
		КонецЕсли;
	КонецЦикла;
		
	Возврат ИменаЗагруженныхФайлов;
	
КонецФункции

Процедура ЗагрузитьКартинкиSFTPСервера() Экспорт
	
	ЗаписатьВПротокол("Начало процедуры загрузки картинок номенклатуры с ftp-сервера");
	
	НастройкиFTPСоединения = _омОбщегоНазначенияВызовСервера.ПолучитьГлобальноеЗначениеFTP("FTP_НастройкиДляЗагрузкиКартинок");
	
	Если НастройкиFTPСоединения = Неопределено Тогда
		Сообщение = "Не заданы настройки подключния к ftp-серверу.";
		ЗаписатьВПротокол(Сообщение, 4);
		Возврат;
	КонецЕсли; 
	
	Отказ = Ложь;
	session = _омОбщегоНазначенияВызовСервера.ПолучитьСоединениеSFTP(НастройкиFTPСоединения, Отказ);
	
	Если session = Неопределено Тогда
		Сообщение = "Не удалось установить соединение, загрузка прекращена.";
		ЗаписатьВПротокол(Сообщение, 4);
		Возврат;
	КонецЕсли;
	
	ВременныйКаталог = КаталогВременныхФайлов();
	ДлинаПутиКаталога = СтрДлина(ВременныйКаталог);
	
    КаталогНаФТП = НастройкиFTPСоединения.Каталог;
	ПредставлениеКаталогаНаФТП = "/" + КаталогНаФТП + "/"; 
	
	//ЗАГРУЗКА
	Попытка 
		
		ЗаписатьВПротокол("GetFiles...");
		
        //Получаем файлы с удаленного сервера
        transferResult = session.GetFiles(КаталогНаФТП, ВременныйКаталог+"*");
        
        //Проверяем возможные ошибки
        transferResult.Check();
        
        //Обрабатываем результат
		ИменаПолученныхФайлов = Новый Массив;
		Для каждого ПолученныйФайл Из transferResult.Transfers Цикл 
			ПредставлениеФайла = ПолученныйФайл.FileName;
			ИмяФайла = СтрЗаменить(ПредставлениеФайла, ПредставлениеКаталогаНаФТП, "");
			ИменаПолученныхФайлов.Добавить(ИмяФайла);
		КонецЦикла; 
		
		ДанныеДляЗагрузки = Новый Массив;
		
		НайденныеФайлы = НайтиФайлы(ВременныйКаталог, "*.jpg", Истина);
		Для Каждого ТекущийФайл Из НайденныеФайлы Цикл
			
			Если ИменаПолученныхФайлов.Найти(ТекущийФайл.Имя) = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			ПараметрыФайла = Новый Структура("Адрес, Имя, ПолноеИмя, ВремяИзменения, ИмяБезРасширения, Расширение, Размер, Путь");
			
			ДвоичныеДанные = Новый ДвоичныеДанные(ТекущийФайл.ПолноеИмя);
			АдресВВременномХранилище = ПоместитьВоВременноеХранилище(ДвоичныеДанные);
			ПараметрыФайла.Адрес = АдресВВременномХранилище;
			
			ПараметрыФайла.Имя              = ТекущийФайл.Имя;
			ПараметрыФайла.ПолноеИмя        = ТекущийФайл.ПолноеИмя;
			ПараметрыФайла.ВремяИзменения   = ТекущийФайл.ПолучитьУниверсальноеВремяИзменения();
	        ПараметрыФайла.ИмяБезРасширения = ТекущийФайл.ИмяБезРасширения;
			ПараметрыФайла.Размер           = ТекущийФайл.Размер(); 
			ПараметрыФайла.Путь             = ТекущийФайл.Путь;
			ПараметрыФайла.Расширение = ОбщегоНазначенияКлиентСервер.РасширениеБезТочки(ТекущийФайл.Расширение);
			
			ДанныеДляЗагрузки.Добавить(ПараметрыФайла);
			
		КонецЦикла; 
		
		Если Не ЗначениеЗаполнено(ДанныеДляЗагрузки) Тогда
			ЗаписатьВПротокол("Файлы картинок в каталоге не найдены. Процедура загрузки завершена.", 2);	
		    session.Dispose();
			Возврат;
		КонецЕсли;
		
		ИменаЗагруженныхФайлов = ЗагрузитьКартинкиИзКаталога(ДанныеДляЗагрузки);
		
		// Удаляем файлы из верменного каталога
		Для Каждого ИмяФайла Из ИменаПолученныхФайлов Цикл 
			ПолноеИмяФайла = ВременныйКаталог + КаталогНаФТП + "\" + ИмяФайла;
			УдалитьФайлы(ПолноеИмяФайла);	
		КонецЦикла;
		
		// Удаляем загруженные в базу файлы
		Для Каждого ИмяФайла Из ИменаЗагруженныхФайлов Цикл 
			
			ПредставлениеФайла = ПредставлениеКаталогаНаФТП + ИмяФайла; 
			session.RemoveFiles(ПредставлениеФайла);
			
			Сообщение = "Удален файл: "+ ПредставлениеФайла;
			ЗаписатьВПротокол(Сообщение, 2);
			
		КонецЦикла;
        
	Исключение 
		Сообщение = "Ошибка получения файлов картинок. Описание ошибки: "+ ОписаниеОшибки();
		ЗаписатьВПротокол(Сообщение, 4);
		Возврат;
	КонецПопытки;
	
	//Разрываем соединение
    session.Dispose();  
	
	ЗаписатьВПротокол("Загрузка картинок завершена");
		
КонецПроцедуры

Процедура ЗаписатьВПротокол(Сообщение, Уровень = 1, ИмяСобытия = "Загрузка картинок номенклатуры")
	
	Если Уровень = 4 Тогда 
		УровеньЖурнала = УровеньЖурналаРегистрации.Ошибка;
	ИначеЕсли Уровень = 3 Тогда	
		УровеньЖурнала = УровеньЖурналаРегистрации.Предупреждение;
	ИначеЕсли Уровень = 2 Тогда	
		УровеньЖурнала = УровеньЖурналаРегистрации.Примечание;
	Иначе
		УровеньЖурнала = УровеньЖурналаРегистрации.Информация;
	КонецЕсли;
	
	ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурнала, , , Сообщение);
	ОбщегоНазначения.СообщитьПользователю(Формат(ТекущаяДатаСеанса(), "ДЛФ=T") + ". " + Сообщение);
	
КонецПроцедуры
	
Функция НайтиДополнительноеСвойствоПоИмени()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДополнительныеРеквизитыИСведения.Ссылка КАК Ссылка
		|ИЗ
		|	ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизитыИСведения
		|ГДЕ
		|	ДополнительныеРеквизитыИСведения.Имя = &Имя";
	
	Запрос.УстановитьПараметр("Имя", "гф_НоменклатураPicture_Name");
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка.Следующий();
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Процедура ЗагрузитьКартинкиFTPСервера() Экспорт
	
	ЗаписатьВПротокол("Начало процедуры загрузки картинок номенклатуры с ftp-сервера");
	
	НастройкиFTPСоединения = _омОбщегоНазначенияВызовСервера.ПолучитьГлобальноеЗначениеFTP("FTP_НастройкиДляЗагрузкиКартинок");
	
	Если НастройкиFTPСоединения = Неопределено Тогда
		Сообщение = "Не заданы настройки подключния к ftp-серверу.";
		ЗаписатьВПротокол(Сообщение, 4);
		Возврат;
	КонецЕсли; 
	
	КаталогНаФТП = НастройкиFTPСоединения.Каталог;
	
	Попытка
		
		Соединение = _омОбщегоНазначенияВызовСервера.гф_ПолучитьСоединение(НастройкиFTPСоединения);
		НайденныеФайлы = Соединение.НайтиФайлы(НастройкиFTPСоединения.Каталог, "*.jpg");
		ДанныеДляЗагрузки = Новый Массив;

		Для Каждого ТекущийФайл Из НайденныеФайлы Цикл
						
			ПараметрыФайла = Новый Структура("Адрес, Имя, ПолноеИмя, ВремяИзменения, ИмяБезРасширения, Расширение, Размер, Путь");
			
			ДвоичныеДанные = Новый ДвоичныеДанные(ТекущийФайл.ПолноеИмя);
			АдресВВременномХранилище = ПоместитьВоВременноеХранилище(ДвоичныеДанные);
			ПараметрыФайла.Адрес = АдресВВременномХранилище;
			
			ПараметрыФайла.Имя              = ТекущийФайл.Имя;
			ПараметрыФайла.ПолноеИмя        = ТекущийФайл.ПолноеИмя;
			ПараметрыФайла.ВремяИзменения   = ТекущийФайл.ПолучитьУниверсальноеВремяИзменения();
	        ПараметрыФайла.ИмяБезРасширения = ТекущийФайл.ИмяБезРасширения;
			ПараметрыФайла.Размер           = ТекущийФайл.Размер(); 
			ПараметрыФайла.Путь             = ТекущийФайл.Путь;
			ПараметрыФайла.Расширение = ОбщегоНазначенияКлиентСервер.РасширениеБезТочки(ТекущийФайл.Расширение);
			
			ДанныеДляЗагрузки.Добавить(ПараметрыФайла);
			
		КонецЦикла; 
		
		Если Не ЗначениеЗаполнено(ДанныеДляЗагрузки) Тогда
			ЗаписатьВПротокол("Файлы картинок в каталоге не найдены. Процедура загрузки завершена.", 2);	
			Возврат;
		КонецЕсли;
		
		ИменаЗагруженныхФайлов = ЗагрузитьКартинкиИзКаталога(ДанныеДляЗагрузки);

		Если ИменаЗагруженныхФайлов.Количество() > 0 Тогда
			
			КаталогПриемник = _омОбщегоНазначенияВызовСервера.ПолучитьГлобальноеЗначениеFTP("гф_КаталогЗагруженныхКартинок");
			
			Для Каждого Стр Из НайденныеФайлы Цикл
				ФайлНаДиске = Новый Файл(КаталогПриемник + Стр.Имя);
				ИмяФайла = КаталогПриемник + Стр.Имя;
				Соединение.Получить(Стр.ПолноеИмя, ИмяФайла);
				Если ФайлНаДиске.Существует() Тогда // Файл принят
					Сообщить("Принят файл " + ФайлНаДиске.ПолноеИмя);
					// Перемещаем полученный файл в каталог резервных копий на FTP-сервере
					FTPФайлРезернойКопии = КаталогНаФТП+"bak/"+Стр.Имя;        
					Соединение.Переместить(КаталогНаФТП + Стр.Имя, FTPФайлРезернойКопии);
					КопияФайла = Соединение.НайтиФайлы(FTPФайлРезернойКопии);
					Если КопияФайла.Количество()=0 Тогда
						Сообщить("Резервная копия "+FTPФайлРезернойКопии+ " не создана!!!");
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		Иначе    
			Сообщение = "В указанном FTP каталоге нет файлов!";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Формат(ТекущаяДата(), "ДЛФ=T") + ". " + Сообщение);
		КонецЕсли;             
	Исключение
		Сообщение = "Ошибка получения файлов картинок. Описание ошибки: "+ ОписаниеОшибки();
		ЗаписатьВПротокол(Сообщение, 4);
		Возврат;
	КонецПопытки;        
	
	ЗаписатьВПротокол("Загрузка картинок завершена");
		
КонецПроцедуры

#КонецЕсли
