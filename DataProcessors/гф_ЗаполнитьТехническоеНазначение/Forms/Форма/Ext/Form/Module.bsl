
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Назначение = Справочники.Назначения.гф_Техническое;
		
КонецПроцедуры

&НаКлиенте
Процедура СменитьНазначение(Команда)
	
	ИдемДальше = ПроверкаДвиженийМаркировокПО_УЛ();
	
	Если ИдемДальше Тогда
		Если ТипЗнч(Объект.Документ) = Тип("ДокументСсылка.УпаковочныйЛист") Тогда
			ОбработанУспешно = ОбработатьУЛ(Истина);
			Если НЕ ОбработанУспешно Тогда
				НовоеОповещение = Новый ОписаниеОповещения("ЕстьЗаполненныеНазначения", ЭтотОбъект);
				ПоказатьВопрос(НовоеОповещение,
				"В выбранном УЛ есть заполненные назначения от Технического. 
				|Вы действительно хотите продлжить?", РежимДиалогаВопрос.ДаНет);
			КонецЕсли;
		Иначе
			УЛСНазначением = ПроверитьУЛПоПоставке();
			Если УЛСНазначением.Количество() > 0 Тогда
				Элементы.ДанныеУЛ.Видимость = Истина;
			Иначе	
				ОбработатьПоставку(); 
			КонецЕсли;
		КонецЕсли;
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Функция ОбработатьУЛ(ПроверятьНазначение)
	
	Если ПроверятьНазначение Тогда	
		Товары = Объект.Документ.Товары;
		Для каждого Стр Из Товары Цикл
			Если ЗначениеЗаполнено(Стр.Назначение) И Стр.Назначение <> Назначение Тогда
				 Возврат Ложь;
			КонецЕсли;	
		КонецЦикла; 
	КонецЕсли;
	
	ДокОб = Объект.Документ.ПолучитьОбъект();
	Товары = ДокОб.Товары;
	Для каждого Стр Из Товары Цикл
		Стр.Назначение = Назначение;
	КонецЦикла; 
	ДокОб.ОбменДанными.Загрузка = Истина;
	ДокОб.Записать(РежимЗаписиДокумента.Запись);
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура ЕстьЗаполненныеНазначения(РезультатВопроса, ПараметрыЗаписи) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
         ОбработатьУЛ(Ложь);
	КонецЕсли;
			   
КонецПроцедуры

&НаСервере
Процедура ОбработатьПоставку(МассивУЛ = Неопределено) 
	
	Если МассивУЛ = Неопределено Тогда
		МассивУЛ = ПолучитьУЛПоПТиУ();
	КонецЕсли;
	
	Для каждого IDКороба Из МассивУЛ Цикл
		
		ДокОб = IDКороба.ПолучитьОбъект();
		Товары = ДокОб.Товары;
		Для каждого Стр Из Товары Цикл
			Стр.Назначение = Назначение;
		КонецЦикла;	
		ДокОб.ОбменДанными.Загрузка = Истина;
		ДокОб.Записать(РежимЗаписиДокумента.Запись);
		
	КонецЦикла;
	
	СменаНазначенийВПТУ(МассивУЛ);
	
	СменаНазначенийВПО(МассивУЛ);
	
КонецПроцедуры 

&НаСервере
Функция ПолучитьУЛПоПТиУ(ПолучитьМаркировки = Ложь)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПриобретениеТоваровУслуггф_ПродукцияВКоробах.IDКороба КАК IDКороба,
		|	ПриобретениеТоваровУслуггф_ПродукцияВКоробах.IDКороба.Код КАК Код
		|ИЗ
		|	Документ.ПриобретениеТоваровУслуг.гф_ПродукцияВКоробах КАК ПриобретениеТоваровУслуггф_ПродукцияВКоробах
		|ГДЕ
		|	ПриобретениеТоваровУслуггф_ПродукцияВКоробах.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Документ);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если ПолучитьМаркировки Тогда
		Возврат РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Код");	
	Иначе
		Возврат РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("IDКороба");
	КонецЕсли;

КонецФункции

&НаСервере
Функция ПроверитьУЛПоПоставке()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УпаковочныйЛистТовары.Ссылка КАК УЛ,
		|	УпаковочныйЛистТовары.НомерСтроки КАК НомерСтроки
		|ПОМЕСТИТЬ ВТ_1
		|ИЗ
		|	Документ.УпаковочныйЛист.Товары КАК УпаковочныйЛистТовары
		|ГДЕ
		|	УпаковочныйЛистТовары.Ссылка В(&МассивУЛ)
		|	И (УпаковочныйЛистТовары.Назначение = &Назначение
		|			ИЛИ УпаковочныйЛистТовары.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.Пустаяссылка))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	УпаковочныйЛистТовары.Ссылка КАК УЛ,
		|	УпаковочныйЛистТовары.НомерСтроки КАК НомерСтроки
		|ПОМЕСТИТЬ ВТ_2
		|ИЗ
		|	Документ.УпаковочныйЛист.Товары КАК УпаковочныйЛистТовары
		|ГДЕ
		|	УпаковочныйЛистТовары.Ссылка В(&МассивУЛ)
		|	И УпаковочныйЛистТовары.Назначение <> &Назначение
		|	И УпаковочныйЛистТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.Пустаяссылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТ_1.УЛ КАК УЛ,
		|	ЛОЖЬ КАК ЕстьНеТехническоеНазначение
		|ИЗ
		|	ВТ_1 КАК ВТ_1
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТ_2.УЛ,
		|	Истина
		|ИЗ
		|	ВТ_2 КАК ВТ_2";
	
	Запрос.УстановитьПараметр("МассивУЛ", ПолучитьУЛПоПТиУ());
	Запрос.УстановитьПараметр("Назначение", Назначение);
	
	ПакетРезультатов = Запрос.ВыполнитьПакетСПромежуточнымиДанными();
	
	МассивУЛ = ПакетРезультатов[1].Выгрузить().ВыгрузитьКолонку("УЛ");
	
	ВсеУЛ = ПакетРезультатов[2].Выгрузить();
	ДанныеУЛ.Очистить();
	
	Для каждого Стр Из ВсеУл Цикл
		НоваяСтрока = ДанныеУЛ.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Стр);
	КонецЦикла;
	
    Возврат МассивУЛ;
	
КонецФункции

&НаСервере
Функция ПроверкаДвиженийМаркировокПО_УЛ()
	
	Если ТипЗнч(Объект.Документ) = Тип("ДокументСсылка.УпаковочныйЛист") Тогда
		МассивМаркировок = Новый Массив(Объект.Документ.Код);
	Иначе
		МассивМаркировок = ПолучитьУЛПоПТиУ(Истина);
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст = 
	   "ВЫБРАТЬ
	   |	ВЫРАЗИТЬ(гф_ГлобальныеЗначенияСписок.Значение КАК Справочник.Склады) КАК Значение
	   |ПОМЕСТИТЬ ТаможенныеСклады
	   |ИЗ
	   |	ПланВидовХарактеристик.гф_ГлобальныеЗначения.Список КАК гф_ГлобальныеЗначенияСписок
	   |ГДЕ
	   |	гф_ГлобальныеЗначенияСписок.Ссылка.Ключ = ""гф_ГлобальныеЗначенияТаможенныйСклад""
	   |;
	   |
	   |////////////////////////////////////////////////////////////////////////////////
	   |ВЫБРАТЬ
	   |	ШтрихкодыУпаковокТоваров.Ссылка КАК Ссылка
	   |ПОМЕСТИТЬ Штрихкоды
	   |ИЗ
	   |	Справочник.ШтрихкодыУпаковокТоваров КАК ШтрихкодыУпаковокТоваров
	   |ГДЕ
	   |	ШтрихкодыУпаковокТоваров.ЗначениеШтрихкода В(&МассивМаркировок)
	   |;
	   |
	   |////////////////////////////////////////////////////////////////////////////////
	   |ВЫБРАТЬ
	   |	гф_ДвижениеКодовМаркировкиОрганизацииОстатки.КоличествоОстаток > 0 КАК ЕстьОстаток,
	   |	гф_ДвижениеКодовМаркировкиОрганизацииОстатки.КМ КАК КМ
	   |ИЗ
	   |	РегистрНакопления.гф_ДвижениеКодовМаркировкиОрганизации.Остатки(
	   |			&Дата,
	   |			Склад В
	   |					(ВЫБРАТЬ
	   |						ТаможенныеСклады.Значение
	   |					ИЗ
	   |						ТаможенныеСклады КАК ТаможенныеСклады)
	   |				И КМ.ЗначениеШтрихкода В
	   |					(ВЫБРАТЬ
	   |						Штрихкоды.Ссылка
	   |					ИЗ
	   |						Штрихкоды КАК Штрихкоды)) КАК гф_ДвижениеКодовМаркировкиОрганизацииОстатки";
	
	Запрос.УстановитьПараметр("Дата", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("МассивМаркировок", МассивМаркировок);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
		Если НЕ Выборка.ЕстьОстаток Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("УЛ перемещен с Таможенного склада," +
			" поменять назначение не возможно.");
			Возврат Ложь;
		КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура УстановитьМетки(Команда)
		
	Если Команда = ЭтотОбъект.Команды.ОтметитьВсе Тогда
		
		Флаг = Истина;
		
	ИначеЕсли Команда = ЭтотОбъект.Команды.СнятьВсеМетки Тогда
		
		Флаг = Ложь;
		
	Иначе
		
		Возврат;
		
	КонецЕсли;	
	
	Для Каждого СтрокаТаблицы Из ДанныеУЛ Цикл
		
		СтрокаТаблицы.Флаг = Флаг;
		
	КонецЦикла;
	
КонецПроцедуры // } #wortmann

&НаКлиенте
Процедура ДокументПриИзменении(Элемент)
	Элементы.ДанныеУЛ.Видимость = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыбранные(Команда)
	
	ОтборОтмеченных = Новый Структура("Флаг", Истина);
	
	МассивОтмеченныхСтрок = ДанныеУЛ.НайтиСтроки(ОтборОтмеченных);
	
	МассивУЛ = Новый Массив();
	
	Для Каждого ОтмеченнаяСтрока Из МассивОтмеченныхСтрок Цикл
		
			МассивУЛ.Добавить(ОтмеченнаяСтрока.УпаковочныйЛист);
			
	КонецЦикла;
	
	ОбработатьПоставку(МассивУЛ);
КонецПроцедуры

&НаСервере
Процедура СменаНазначенийВПТУ(МассивУЛ)  
	
	ДокОб = Объект.Документ.ПолучитьОбъект();	
	
	ТоварыПТУ = ДокОб.Товары; 
	Запись = Ложь;
	Для каждого УЛ Из МассивУЛ Цикл
		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("гф_IDКороба", УЛ);
		МассивСтрок = ТоварыПТУ.НайтиСтроки(СтруктураПоиска);
		Если МассивСтрок.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		Для каждого Строка Из МассивСтрок Цикл
			Если Строка.Назначение <> Назначение Тогда
				Строка.Назначение = Назначение;
				Запись = Истина;
			КонецЕсли;
		КонецЦикла;		
		
	КонецЦикла;
	Если Запись Тогда
		ДокОб.ОбменДанными.Загрузка = Истина;
		ДокОб.Записать(РежимЗаписиДокумента.Запись);
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("В ТЧ ТОвары документа "
		+ ДокОб.Ссылка + " все товары имеют Техническое назначение.");
	КонецЕсли;
	
КонецПроцедуры   

&НаСервере
Процедура СменаНазначенийВПО(МассивУЛ)  

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПриходныйОрдерНаТовары.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ПриходныйОрдерНаТовары КАК ПриходныйОрдерНаТовары
		|ГДЕ
		|	ПриходныйОрдерНаТовары.Распоряжение = &Распоряжение
		|	И НЕ ПриходныйОрдерНаТовары.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("Распоряжение", Объект.Документ);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Нет связанного ПО для изменения назначения");
		Возврат;
	Иначе
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		ДокОб = Выборка.ССылка.ПолучитьОбъект();
	КонецЕсли;
	
	ТоварыПО = ДокОб.Товары; 
	Запись = Ложь;
	Для каждого УЛ Из МассивУЛ Цикл
		
		СтруктураПоиска = Новый Структура;                
		СтруктураПоиска.Вставить("гф_IDКороба", УЛ); 
		СтруктураПоиска.Вставить("ЭтоУпаковочныйЛист", Ложь);
		МассивСтрок = ТоварыПО.НайтиСтроки(СтруктураПоиска);
		Если МассивСтрок.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		Для каждого Строка Из МассивСтрок Цикл
			Если Строка.Назначение <> Назначение Тогда
				Строка.Назначение = Назначение;
				Запись = Истина;
			КонецЕсли;
		КонецЦикла;		
		
	КонецЦикла;
	
	Если Запись Тогда
		ДокОб.ОбменДанными.Загрузка = Истина;
		ДокОб.Записать(РежимЗаписиДокумента.Запись);
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("В ТЧ ТОвары документа " 
		+ ДокОб.Ссылка + " все товары имеют Техническое назначение.");
	КонецЕсли;

КонецПроцедуры