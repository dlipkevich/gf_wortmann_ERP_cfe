#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Объект.Ссылка.Пустая() Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Объект.ТипЗначения.Типы().Количество() = 1 Тогда
		
		Элементы.Значение.ОграничениеТипа	= Объект.ТипЗначения;
		Объект.Значение = Элементы.Значение.ОграничениеТипа.ПривестиЗначение(Объект.Значение);
		
	КонецЕсли;
	
	РежимСписка = ВРег(Прав(Объект.ИмяПредопределенныхДанных, 7)) = "_СПИСОК";
	
	Элементы.Список.Видимость	= РежимСписка;
	Элементы.Значение.Видимость	= Не РежимСписка;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокЗначениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Элемент.ОграничениеТипа = Объект.ТипЗначения;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	СтруктураДанных = вПолучитьДанныеДляАвторизации(ТекущийОбъект.ДанныеХЗ);
	
	_Логин = СтруктураДанных.Логин;
	_Пароль = СтруктураДанных.Пароль;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

 &НаСервере
Функция вСформироватьДанныеДляАвторизации(Знач Логин, Знач Пароль)
	
	Данные = Новый Структура;
	Данные.Вставить("Логин", Логин);
	Данные.Вставить("Пароль", Пароль);
	
	ДанныеХЗ = Новый ХранилищеЗначения(Данные, Новый СжатиеДанных(6));
	Возврат ДанныеХЗ;
	
КонецФункции

&НаСервере
Функция вПолучитьДанныеДляАвторизации(ДанныеХЗ)
	
	СтруктураДанных = Новый Структура("Логин, Пароль", "", "");
	Данные = ДанныеХЗ.Получить();
	Если ТипЗнч(Данные) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(СтруктураДанных, Данные);
	КонецЕсли;
	
	Возврат СтруктураДанных;
	
КонецФункции

#КонецОбласти
