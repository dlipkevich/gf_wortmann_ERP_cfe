#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЧасовМеждуЗапросами = Константы.гф_ПочтаРоссииПромежутокМеждуЗапросамиКОдномуТрекНомеру.Получить();
	
	Задание = РегламентныеЗадания.НайтиПредопределенное(Метаданные.РегламентныеЗадания.гф_ПочтаРоссии_ЗапросКТрекеру);
	
	ЗапрашиватьДанныеПоРасписанию = Задание.Использование;    
	
	Элементы.ГруппаНастройкиЗадания.Видимость = ЗапрашиватьДанныеПоРасписанию;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаЗапрос(Команда) 
	
	Если Не ЗначениеЗаполнено(Объект.УчетнаяЗапись) Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнена учетная запись.");
		
		Возврат;
		
	КонецЕсли;	
	
	КомандаЗапросНаСервере();
	
	ОповеститьОбИзменении(Объект.ПочтовоеОтправление);
	
КонецПроцедуры

&НаСервере
Процедура КомандаЗапросНаСервере()   
	
	УчетнаяЗапись		= Объект.УчетнаяЗапись;
	ПочтовоеОтправление	= Объект.ПочтовоеОтправление;
	
	Ошибки = Новый Массив;
	
	ОтветМассив = гф_ПочтаРоссии.ПолучитьДанныеОтслеживания(УчетнаяЗапись, ПочтовоеОтправление, Ошибки);
	
	Если Ошибки.Количество() Тогда
		
		Для Каждого Ошибка Из Ошибки Цикл
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Ошибка);
			
		КонецЦикла;	 
		
		Возврат;
		
	КонецЕсли;	    
	
	Объект.История.Очистить();
	
	Для Каждого СтрокаОтвета Из ОтветМассив Цикл
		
		НоваяСтрока = Объект.История.Добавить();
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОтвета.Операция);
		
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьРасписаниеНаСервере(); 

	Задание = РегламентныеЗадания.НайтиПредопределенное(Метаданные.РегламентныеЗадания.гф_ПочтаРоссии_ЗапросКТрекеру);
	
	РасписаниеРегламентногоЗадания = Задание.Расписание;

КонецПроцедуры

&НаСервере
Процедура ЗаписатьРасписаниеНаСервере(); 

	Задание = РегламентныеЗадания.НайтиПредопределенное(Метаданные.РегламентныеЗадания.гф_ПочтаРоссии_ЗапросКТрекеру);
	
	Задание.Расписание = РасписаниеРегламентногоЗадания;
	
	Задание.Записать();

КонецПроцедуры

&НаКлиенте
Процедура КомандаРасписание(Команда) 
	
	ПрочитатьРасписаниеНаСервере();            
	
	Диалог = Новый ДиалогРасписанияРегламентногоЗадания(РасписаниеРегламентногоЗадания);
	
	ДополнительныеПараметры = Новый Структура;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриУстановкеРасписания", ЭтотОбъект, ДополнительныеПараметры);
	
	Диалог.Показать(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриУстановкеРасписания(Результат, ДополнительныеПараметры) Экспорт 
	
	РасписаниеРегламентногоЗадания = Результат;
	
	ЗаписатьРасписаниеНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура КомандаНомализацияАдресаНаСервере(Ошибки)
	
	ТаблицаАдресов = ПроверяемыеАдреса.Выгрузить(,"Адрес");
	
	МассивАдресов = ТаблицаАдресов.ВыгрузитьКолонку("Адрес");
	
	ТекстОтвета = гф_ПочтаРоссии.ОтправкаЗапросНормализацииАдреса(Объект.УчетнаяЗаписьОтправка, МассивАдресов, Ошибки);

	ОтветОтПочты.УстановитьТекст(ТекстОтвета);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаНомализацияАдреса(Команда)   
	
	Если Не ЗначениеЗаполнено(Объект.УчетнаяЗаписьОтправка) Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнена учетная запись.");
		
		Возврат;
		
	КонецЕсли;	
	
	Ошибки = Новый Массив;
	
	КомандаНомализацияАдресаНаСервере(Ошибки);
	
	Если Ошибки.Количество() Тогда
		
		Для Каждого Ошибка Из Ошибки Цикл
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Ошибка);
			
		КонецЦикла;	 
		
	КонецЕсли;	    
	
КонецПроцедуры

&НаСервере
Процедура КомандаНормализацияФИОНаСервере(Ошибки)
	
	ТаблицаФИО = ПроверяемыеФИО.Выгрузить(,"ФИО");
	
	МассивФИО = ТаблицаФИО.ВыгрузитьКолонку("ФИО");
	
	ТекстОтвета = гф_ПочтаРоссии.ОтправкаЗапросНормализацииФИО(Объект.УчетнаяЗаписьОтправка, МассивФИО, Ошибки);

	ОтветОтПочты.УстановитьТекст(ТекстОтвета);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаНормализацияФИО(Команда)  
	
	Если Не ЗначениеЗаполнено(Объект.УчетнаяЗаписьОтправка) Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнена учетная запись.");
		
		Возврат;
		
	КонецЕсли;	
	
	Ошибки = Новый Массив;
	
	КомандаНормализацияФИОНаСервере(Ошибки);
	
	Если Ошибки.Количество() Тогда
		
		Для Каждого Ошибка Из Ошибки Цикл
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Ошибка);
			
		КонецЦикла;	 
		
	КонецЕсли;	    
	
КонецПроцедуры

&НаСервере
Процедура КомандаНормализацияТелефонаНаСервере(Ошибки)
	
	ТаблицаТелефонов = ПроверяемыеТелефоны.Выгрузить(,"Телефон");
	
	МассивТелефонов = ТаблицаТелефонов.ВыгрузитьКолонку("Телефон");
	
	ТекстОтвета = гф_ПочтаРоссии.ОтправкаЗапросНормализацииТелефона(Объект.УчетнаяЗаписьОтправка, МассивТелефонов, Ошибки);

	ОтветОтПочты.УстановитьТекст(ТекстОтвета);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаНормализацияТелефона(Команда)

	Если Не ЗначениеЗаполнено(Объект.УчетнаяЗаписьОтправка) Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнена учетная запись.");
		
		Возврат;
		
	КонецЕсли;	
	
	Ошибки = Новый Массив;
	
	КомандаНормализацияТелефонаНаСервере(Ошибки);
	
	Если Ошибки.Количество() Тогда
		
		Для Каждого Ошибка Из Ошибки Цикл
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Ошибка);
			
		КонецЦикла;	 
		
	КонецЕсли;	    
КонецПроцедуры

&НаСервере
Процедура КомандаКоличествоЗапросовНаСервере(Ошибки)
	
	ТекстОтвета = гф_ПочтаРоссии.ОтправкаЗапросКоличествоЗапросов(Объект.УчетнаяЗаписьОтправка, Ошибки);

	ОтветОтПочты.УстановитьТекст(ТекстОтвета);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаКоличествоЗапросов(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.УчетнаяЗаписьОтправка) Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнена учетная запись.");
		
		Возврат;
		
	КонецЕсли;	
	
	Ошибки = Новый Массив;
	
	КомандаКоличествоЗапросовНаСервере(Ошибки);
	
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы   

&НаСервереБезКонтекста
Процедура ЧасовМеждуЗапросамиПриИзмененииНаСервере(ЧасовМеждуЗапросами)

	Константы.гф_ПочтаРоссииПромежутокМеждуЗапросамиКОдномуТрекНомеру.Установить(ЧасовМеждуЗапросами);
	
КонецПроцедуры

&НаКлиенте
Процедура ЧасовМеждуЗапросамиПриИзменении(Элемент)
	
	ЧасовМеждуЗапросамиПриИзмененииНаСервере(ЧасовМеждуЗапросами);
	
КонецПроцедуры

&НаСервере
Процедура ЗапрашиватьДанныеПоРасписаниюПриИзмененииНаСервере()
	
	Задание = РегламентныеЗадания.НайтиПредопределенное(Метаданные.РегламентныеЗадания.гф_ПочтаРоссии_ЗапросКТрекеру);
	
	Задание.Использование = ЗапрашиватьДанныеПоРасписанию;
	
	Задание.Записать();
	
	Элементы.ГруппаНастройкиЗадания.Видимость = ЗапрашиватьДанныеПоРасписанию;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапрашиватьДанныеПоРасписаниюПриИзменении(Элемент)

	ЗапрашиватьДанныеПоРасписаниюПриИзмененииНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область Тест

&НаКлиенте
Процедура КомандаТест(Команда)
	
	ПоказатьЗначение(,"Оповещение. Все прекрасно");
	КомандаТестНаСервере();

КонецПроцедуры

&НаСервере
Процедура КомандаТестНаСервере()  
	
	//ТаблицаКодов = гф_ПочтаРоссииПовтИсп.ПолучитьТаблицуКодовОтметокПочтовыхОтправлений(); 
	
КонецПроцедуры

#КонецОбласти

