&Вместо("ЗарегистрироватьИзмененияВУзлах")
// В зависимости от типа регистрируемых данных определяет данные, которые необходимо зарегистрировать в плане обмена.
//
// Параметры:
//  Объект - СправочникОбъект, ДокументОбъект - регистрируемый объект данных, например, НоменклатураОбъект, ЗаказОбъект.
//  МассивУзловТовары - Массив - массив узлов плана обмена "Обмен с сайтом" в которых необходимо регистрировать объект
//                               в том случае если он является Номенклатурой.
//  МассивУзловЗаказы - Массив - массив узлов плана обмена "Обмен с сайтом" в которых необходимо регистрировать объект
//                               в том случае если он является Заказом.
//  Замещение - Булево - замещение данных регистрации.
// 

//B2B
//Надо регистрацию подменить, на свою функцию

Процедура B2B_ЗарегистрироватьИзмененияВУзлах(Объект, МассивУзловТовары, МассивУзловЗаказы, Замещение = Ложь) Экспорт
	
	//++ НЕ ГОСИС
	Если МассивУзловТовары.Количество() = 0 И МассивУзловЗаказы.Количество() =0 Тогда
		Возврат;
	КонецЕсли;
	
	ТипОбъекта = ТипЗнч(Объект);
	
	Если ТипОбъекта = Тип("РегистрСведенийНаборЗаписей.ЦеныНоменклатуры")
			Или ТипОбъекта = Тип("РегистрСведенийНаборЗаписей.РаспределениеЗапасов") Тогда
		
		Если Замещение Тогда
			
			ОбъектМетаданных = Объект.Метаданные();
			
			ИмяБазовогоТипа = ОбщегоНазначения.ИмяБазовогоТипаПоОбъектуМетаданных(ОбъектМетаданных);
			
			Если ИмяБазовогоТипа = "РегистрыСведений" Тогда
				
				СтарыйНаборЗаписей = РегистрыСведений[ОбъектМетаданных.Имя].СоздатьНаборЗаписей();
				
			ИначеЕсли ИмяБазовогоТипа = "РегистрыНакопления" Тогда
				
				СтарыйНаборЗаписей = РегистрыНакопления[ОбъектМетаданных.Имя].СоздатьНаборЗаписей();
				
			Иначе
				
				Возврат;
				
			КонецЕсли;
			
			Для Каждого ЗначениеОтбора Из Объект.Отбор Цикл
				
				Если ЗначениеОтбора.Использование = Ложь Тогда
					Продолжить;
				КонецЕсли;
				
				СтрокаОтбора = СтарыйНаборЗаписей.Отбор.Найти(ЗначениеОтбора.Имя);
				СтрокаОтбора.Значение = ЗначениеОтбора.Значение;
				СтрокаОтбора.Использование = Истина;
				
			КонецЦикла;
			
			СтарыйНаборЗаписей.Прочитать();
			
			Для каждого Запись Из СтарыйНаборЗаписей Цикл
			
				// Записи регистра Распредление запасов регистрируются, только если они влияют на свободный остаток.
				Если ТипОбъекта = Тип("РегистрСведенийНаборЗаписей.РаспределениеЗапасов") Тогда
					Если Запись.Свободно = 0 Тогда
						Продолжить;
					КонецЕсли;
				КонецЕсли;
				
				ПланыОбмена.ЗарегистрироватьИзменения(МассивУзловТовары, Запись.Номенклатура);
			
			КонецЦикла;
			
		КонецЕсли;
		
		Для каждого Запись Из Объект Цикл
			
			// Записи регистра Распредление запасов регистрируются, только если они влияют на свободный остаток.
			Если ТипОбъекта = Тип("РегистрСведенийНаборЗаписей.РаспределениеЗапасов") Тогда
				Если Запись.Свободно = 0 Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
			ПланыОбмена.ЗарегистрироватьИзменения(МассивУзловТовары, Запись.Номенклатура);
			
		КонецЦикла;
	
	ИначеЕсли ТипОбъекта = Тип("СправочникОбъект.Номенклатура") Тогда
		
		ПланыОбмена.ЗарегистрироватьИзменения(МассивУзловТовары, Объект.Ссылка);
		
	ИначеЕсли ТипОбъекта = Тип("СправочникОбъект.НоменклатураПрисоединенныеФайлы") Тогда
		
		Если НЕ ТипЗнч(Объект.ВладелецФайла) = Тип("СправочникСсылка.Номенклатура") Тогда
			
			Возврат;
			
		КонецЕсли;
		
		ПланыОбмена.ЗарегистрироватьИзменения(МассивУзловТовары, Объект.ВладелецФайла);

		
	ИначеЕсли ТипОбъекта = Тип("СправочникОбъект.ХарактеристикиНоменклатуры") Тогда
		
		Если ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.Номенклатура") Тогда
			
			ПланыОбмена.ЗарегистрироватьИзменения(МассивУзловТовары, Объект.Владелец);
			
		КонецЕсли;
		
	ИначеЕсли ТипОбъекта = Тип("ДокументОбъект.ЗаказКлиента") Тогда 
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьРасширенныеВозможностиЗаказаКлиента") Тогда
			Возврат;
		КонецЕсли;
		
		Для Каждого УзелОбмена Из МассивУзловЗаказы Цикл
			
			СтруктураРеквизитовЗаказаНаСайте = Новый Структура;
			РеквизитыЗаказаНаСайте(Объект.Ссылка, УзелОбмена, СтруктураРеквизитовЗаказаНаСайте);
			Если СтруктураРеквизитовЗаказаНаСайте <> Неопределено Тогда
				
				Если Объект.ПометкаУдаления Тогда
					 ПланыОбмена.УдалитьРегистрациюИзменений(УзелОбмена, Объект.Ссылка);
				Иначе
					ПланыОбмена.ЗарегистрироватьИзменения(УзелОбмена, Объект.Ссылка);
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли ТипОбъекта = Тип("РегистрСведенийНаборЗаписей.СостоянияЗаказовКлиентов") Тогда
		
		Если Объект.Отбор.Найти("Заказ") = Неопределено 
			Или Не ЗначениеЗаполнено(Объект.Отбор.Заказ.Значение)
			Или ТипЗнч(Объект.Отбор.Заказ.Значение) <> Тип("ДокументСсылка.ЗаказКлиента") Тогда
			Возврат;
		КонецЕсли;
		
		Если Замещение Тогда
			
			Если Объект.Отбор.Количество() <> 1 Тогда
				Возврат;
			КонецЕсли;
			
			ДокументЗаказ = Объект.Отбор[0].Значение;
			
			МассивУзловКРегистрации = Новый Массив;
			Для Каждого УзелОбмена Из МассивУзловЗаказы Цикл
				
				СтруктураРеквизитовЗаказаНаСайте = Новый Структура;
				РеквизитыЗаказаНаСайте(ДокументЗаказ, УзелОбмена, СтруктураРеквизитовЗаказаНаСайте);
				Если СтруктураРеквизитовЗаказаНаСайте <> Неопределено Тогда
					Если СтруктураРеквизитовЗаказаНаСайте.Свойство("НомерЗаказаНаСайте")
						И ЗначениеЗаполнено(СтруктураРеквизитовЗаказаНаСайте.НомерЗаказаНаСайте) Тогда
						
						МассивУзловКРегистрации.Добавить(УзелОбмена);
						
					КонецЕсли;
				КонецЕсли;
				
			КонецЦикла;
			
			Если Объект.Количество() <> 1 Тогда
				
				ПланыОбмена.УдалитьРегистрациюИзменений(МассивУзловКРегистрации, ДокументЗаказ);
				Возврат;
				
			КонецЕсли;
			
			ЭлементОтбора = Объект.Отбор[0];
			Если ЭлементОтбора.Использование = Ложь Тогда
				Возврат;
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(ДокументЗаказ) Тогда
				Возврат;
			КонецЕсли;
			
			Если МассивУзловКРегистрации.Количество() = 0 Тогда
				Возврат;
			КонецЕсли;
			
			НовоеСостояниеЗаказа = Объект[0].Состояние;
			Если НовоеСостояниеЗаказа = Перечисления.СостоянияЗаказовКлиентов.Закрыт Тогда
				
				
				Запрос = Новый Запрос;
				Запрос.Текст = "
				|ВЫБРАТЬ
				|	СостоянияЗаказовКлиентов.Состояние
				|ИЗ
				|	РегистрСведений.СостоянияЗаказовКлиентов КАК СостоянияЗаказовКлиентов
				|ГДЕ
				|	СостоянияЗаказовКлиентов.Заказ = &Заказ";
				
				Запрос.УстановитьПараметр("Заказ", ДокументЗаказ);
				
				Выборка = Запрос.Выполнить().Выбрать();
				Если Выборка.Следующий() Тогда
					Если Выборка.Состояние = Перечисления.СостоянияЗаказовКлиентов.Закрыт Тогда
						Возврат;
					КонецЕсли;
				КонецЕсли;
				
			КонецЕсли;
			
			ПланыОбмена.ЗарегистрироватьИзменения(МассивУзловКРегистрации, ДокументЗаказ);
			
		КонецЕсли;
		
	КонецЕсли;
	//-- НЕ ГОСИС
	
КонецПроцедуры

