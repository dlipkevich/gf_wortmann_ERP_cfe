
// Заполняет наборы свойств объекта. Обычно требуется, если наборов более одного.
//
// Параметры:
//  Объект       - ЛюбаяСсылка      - ссылка на объект со свойствами.
//               - ФормаКлиентскогоПриложения - форма объекта, к которому подключены свойства.
//               - ДанныеФормыСтруктура - описание объекта, к которому подключены свойства.
//
//  ТипСсылки    - Тип - тип ссылки владельца свойств.
//
//  НаборыСвойств - ТаблицаЗначений:
//     * Набор - СправочникСсылка.НаборыДополнительныхРеквизитовИСведений
//     * ОбщийНабор - Булево - Истина, если набор свойств содержит свойства,
//                             общие для всех объектов.
//    // Далее свойства элемента формы типа ГруппаФормы вида обычная группа
//    // или страница, которая создается, если наборов больше одного без учета
//    // пустого набора, который описывает свойства группы удаленных реквизитов.
//
//    // Если значение Неопределено, значит, использовать значение по умолчанию.
//
//    // Для любой группы управляемой формы.
//     * Высота                   - Число
//     * Заголовок                - Строка
//     * Подсказка                - Строка
//     * РастягиватьПоВертикали   - Булево
//     * РастягиватьПоГоризонтали - Булево
//     * ТолькоПросмотр           - Булево
//     * ЦветТекстаЗаголовка      - Цвет
//     * Ширина                   - Число
//     * ШрифтЗаголовка           - Шрифт
//                    
//    // Для обычной группы и страницы.
//     * Группировка              - ГруппировкаПодчиненныхЭлементовФормы
//
//    // Для обычной группы.
//     * Отображение              - ОтображениеОбычнойГруппы
//
//    // Для страницы.
//     * Картинка                 - Картинка
//     * ОтображатьЗаголовок      - Булево
//
//  СтандартнаяОбработка - Булево - начальное значение Истина. Указывает, получать ли
//                         основной набор, когда НаборыСвойств.Количество() равно нулю.
//
//  КлючНазначения   - Неопределено - (начальное значение) - указывает вычислить
//                      ключ назначения автоматически и добавить к значениям свойств
//                      формы КлючНазначенияИспользования и КлючСохраненияПоложенияОкна,
//                      чтобы изменения формы (настройки, положение и размер) сохранялись
//                      отдельно для разного состава наборов.
//                      Например, для каждого вида номенклатуры - свой состав наборов.
//
//                   - Строка - (не более 32 символа) - использовать указанный ключ
//                      назначения для добавления к значениям свойств формы.
//                      Пустая строка - не изменять свойства ключей формы, т.к. они
//                      устанавливается в форме и уже учитывают различия состава наборов.
//
//                    Добавка имеет формат "КлючНаборовСвойств<КлючНазначения>",
//                    чтобы <КлючНазначения> можно было обновлять без повторной добавки.
//                    При автоматическом вычислении <КлючНазначения> содержит хеш
//                    идентификаторов ссылок упорядоченных наборов свойств.
//
&Вместо("ЗаполнитьНаборыСвойствОбъекта")
Процедура B2B_ЗаполнитьНаборыСвойствОбъекта(Знач Объект, ТипСсылки, НаборыСвойств, СтандартнаяОбработка, КлючНазначения) Экспорт
	//++ НЕ ГОСИС
	Если ТипСсылки = Тип("СправочникСсылка.Партнеры") Тогда
		
		СписокСвойств = ПолучитьНаборыСвойствДляПартнеров(Объект.Клиент, Объект.Конкурент, Объект.Поставщик, Объект.ПрочиеОтношения);
		
	ИначеЕсли ТипСсылки = Тип("СправочникСсылка.Номенклатура") И НЕ Объект.ЭтоГруппа Тогда
		
		СписокСвойств = ПолучитьНаборыСвойствДляНоменклатуры(Объект);
		
	ИначеЕсли ТипСсылки = Тип("СправочникСсылка.ХарактеристикиНоменклатуры") Тогда
		
		СписокСвойств = ПолучитьНаборыСвойствДляХарактеристикНоменклатуры(Объект);
		
	ИначеЕсли ТипСсылки = Тип("СправочникСсылка.СерииНоменклатуры") Тогда
		
		СписокСвойств = ПолучитьНаборыСвойствДляСерииНоменклатуры(Объект);
		
	//++ НЕ УТ
	ИначеЕсли ТипСсылки = Тип("СправочникСсылка.ОбъектыЭксплуатации") Тогда
		
		СписокСвойств = ПолучитьНаборыСвойствДляОбъектаЭксплуатации(Объект);
		
	//-- НЕ УТ

	//++ НЕ УТКА
	ИначеЕсли ТипСсылки = Тип("СправочникСсылка.УзлыОбъектовЭксплуатации") Тогда
		
		СписокСвойств = ПолучитьНаборыСвойствДляУзлаОбъектаЭксплуатации(Объект);
		
	ИначеЕсли ТипСсылки = Тип("ДокументСсылка.ПроизводственнаяОперация2_2") Тогда
		
		СписокСвойств = ПолучитьНаборыСвойствДляПроизводственнойОперации(Объект);
		
	//-- НЕ УТКА    
	
	ИначеЕсли ТипСсылки = Тип("ДокументСсылка.ЗаказКлиента") Тогда
		
		СписокСвойств = ПолучитьНаборыСвойствДляЗаказаКлиента(Объект);

	ИначеЕсли ТипСсылки = Тип("СправочникСсылка.КонтактныеЛицаПартнеров") Тогда
		
		СписокСвойств = ПолучитьНаборыСвойствДляКонтактногоЛица(Объект);
	
	Иначе
		
		Возврат;
		
	КонецЕсли;
	
	Для Каждого ЭлементСписка Из СписокСвойств Цикл
		
		СтрокаНабора = НаборыСвойств.Добавить();
		
		СтрокаНабора.Набор 	   = ЭлементСписка.Значение;
		СтрокаНабора.Заголовок = ЭлементСписка.Представление;
		
	КонецЦикла;
	
	//-- НЕ ГОСИС
	
КонецПроцедуры 

Функция ПолучитьНаборыСвойствДляКонтактногоЛица(Объект)
	
	Наборы = Новый СписокЗначений;
	
	НаборСвойств = УправлениеСвойствами.НаборСвойствПоИмени("Справочник_КонтактныеЛицаПартнеров");
	Наборы.Добавить(НаборСвойств, НСтр("ru = 'Общие свойства контактных лиц';
										|en = 'Nihuya sebe english'"));
	Возврат Наборы;
	
КонецФункции

Функция ПолучитьНаборыСвойствДляЗаказаКлиента(Объект)
	
	Наборы = Новый СписокЗначений;
	
	НаборСвойств = УправлениеСвойствами.НаборСвойствПоИмени("Документ_ЗаказКлиента");
	Наборы.Добавить(НаборСвойств, НСтр("ru = 'Общие свойства заказов клиента';
										|en = 'Nihuya sebe english'"));
	Возврат Наборы;
	
КонецФункции

