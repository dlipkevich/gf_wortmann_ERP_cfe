#Область ПрограммныйИнтерфейс

#Область Проведение

// Формирует параметры для проведения документа по регистрам учетного механизма через общий механизм проведения.
//
// Параметры:
//  Документ - ДокументОбъект - записываемый документ
//  Свойства - См. ПроведениеДокументов.СвойстваДокумента
//
// Возвращаемое значение:
//  Структура - См. ПроведениеДокументов.ПараметрыУчетногоМеханизма
//
Функция ПараметрыДляПроведенияДокумента(Документ, Свойства) Экспорт
	
	Параметры = ПроведениеДокументов.ПараметрыУчетногоМеханизма();
	
	// Проведение
	Если Свойства.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		Параметры.ПодчиненныеРегистры.Добавить(Метаданные.РегистрыНакопления.ЗаказыКлиентов);
		//Параметры.ПодчиненныеРегистры.Добавить(Метаданные.РегистрыНакопления.ЗаказыНаПеремещение);
		//Параметры.ПодчиненныеРегистры.Добавить(Метаданные.РегистрыНакопления.ЗаказыНаСборку);
		
	КонецЕсли;
	
	//// Контроль
	//Если Свойства.РежимЗаписи <> РежимЗаписиДокумента.Запись Тогда
	//	
	//	ТипДокумента = ТипЗнч(Документ);
	//	
	//	ИсправительныйДокумент = ИсправлениеДокументов.ЭтоИсправительныйДокумент(Документ);
	//	
	//	//Если ТипДокумента = Тип("ДокументОбъект.ЗаказНаВнутреннееПотребление")
	//	//		//++ НЕ УТКА
	//	//		Или ТипДокумента = Тип("ДокументОбъект.ЗаказНаРемонт")
	//	//		//-- НЕ УТКА
	//	//	Или Свойства.РежимЗаписи = РежимЗаписиДокумента.Проведение
	//	//		И ТипДокумента = Тип("ДокументОбъект.ВнутреннееПотребление")
	//	//	Или ИсправительныйДокумент  Тогда
	//	//	Параметры.КонтрольныеРегистрыИзменений.Добавить(Метаданные.РегистрыНакопления.ЗаказыНаВнутреннееПотребление);
	//	//КонецЕсли;
	//	
	//	//Если ТипДокумента = Тип("ДокументОбъект.ЗаказНаПеремещение")
	//	//	Или Свойства.РежимЗаписи = РежимЗаписиДокумента.Проведение
	//	//		И ТипДокумента = Тип("ДокументОбъект.ПеремещениеТоваров")
	//	//	Или ИсправительныйДокумент Тогда
	//	//	Параметры.КонтрольныеРегистрыИзменений.Добавить(Метаданные.РегистрыНакопления.ЗаказыНаПеремещение);
	//	//КонецЕсли;
	//	//
	//	//Если ТипДокумента = Тип("ДокументОбъект.ЗаказНаСборку")
	//	//	Или Свойства.РежимЗаписи = РежимЗаписиДокумента.Проведение
	//	//		И ТипДокумента = Тип("ДокументОбъект.СборкаТоваров")
	//	//	Или ИсправительныйДокумент Тогда
	//	//	Параметры.КонтрольныеРегистрыИзменений.Добавить(Метаданные.РегистрыНакопления.ЗаказыНаСборку);
	//	//КонецЕсли;
	//	
	//КонецЕсли;
	
	Возврат Параметры;
	
КонецФункции

// Возвращает тексты запросов для сторнирования движений при исправлении документов
// 
// Параметры:
// 	МетаданныеДокумента - ОбъектМетаданныхДокумент - Метаданные документа, который проводится.
// 
// Возвращаемое значение:
// 	Соответствие - Соответствие полного имени регистра тексту запроса сторнирования
//
Функция ТекстыЗапросовСторнирования(МетаданныеДокумента) Экспорт
	
	ДвиженияДокумента = МетаданныеДокумента.Движения;
	ТекстыЗапросов = Новый Соответствие();
	
	МетаданныеРегистра = Метаданные.РегистрыНакопления.ЗаказыНаВнутреннееПотребление;
	
	Если ДвиженияДокумента.Содержит(МетаданныеРегистра) Тогда
		ТекстыЗапросов.Вставить(МетаданныеРегистра.ПолноеИмя(),
			ПроведениеДокументов.ТекстСторнирующегоЗапроса(
				МетаданныеРегистра, МетаданныеДокумента));
	КонецЕсли;
	
	МетаданныеРегистра = Метаданные.РегистрыНакопления.ЗаказыНаПеремещение;
	Если ДвиженияДокумента.Содержит(МетаданныеРегистра) Тогда
		ТекстыЗапросов.Вставить(МетаданныеРегистра.ПолноеИмя(),
			ПроведениеДокументов.ТекстСторнирующегоЗапроса(
				МетаданныеРегистра, МетаданныеДокумента));
	КонецЕсли;
	
	МетаданныеРегистра = Метаданные.РегистрыНакопления.ЗаказыНаСборку;
	Если ДвиженияДокумента.Содержит(МетаданныеРегистра) Тогда
		ТекстыЗапросов.Вставить(МетаданныеРегистра.ПолноеИмя(),
			ПроведениеДокументов.ТекстСторнирующегоЗапроса(
				МетаданныеРегистра, МетаданныеДокумента));
	КонецЕсли;
	Возврат ТекстыЗапросов;
	
КонецФункции

// Процедура формирования движений по подчиненным регистрам внутреннего товародвижения.
//
// Параметры:
//	ТаблицыДляДвижений - Структура - таблицы данных документа
//	Движения - КоллекцияДвижений - коллекция наборов записей движений документа
//	Отказ - Булево - признак отказа от проведения документа.
//
Процедура ОтразитьДвижения(ТаблицыДляДвижений, Движения, Отказ) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения, "ЗаказыКлиентов");
	//ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения, "ЗаказыНаПеремещение");
	//ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения, "ЗаказыНаСборку");
	
КонецПроцедуры

// Дополняет текст запроса механизма проверки даты запрета по таблице изменений.
// 
// Параметры:
// 	Запрос - Запрос - используется для установки параметров запроса.
// 
// Возвращаемое значение:
//	Соответствие - соответствие имен таблиц изменения регистров и текстов запросов.
//	
Функция ТекстыЗапросовКонтрольДатыЗапретаПоТаблицеИзменений(Запрос) Экспорт

	СоответствиеТекстовЗапросов = Новый Соответствие();
	Возврат СоответствиеТекстовЗапросов;
	
КонецФункции

// Формирует тексты запросов для контроля изменений записанных движений регистров.
//
// Параметры:
//  Запрос - Запрос - запрос, хранящий параметры используемые в списке запросов
//  ТекстыЗапроса - СписокЗначений - список текстов запросов и их имен.
//  Документ - ДокументОбъект - записываемый документ.
//
Процедура ИнициализироватьДанныеКонтроляИзменений(Запрос, ТекстыЗапроса, Документ) Экспорт
	
	Если ПроведениеДокументов.ЕстьЗаписиВТаблице(Документ, "ДвиженияЗаказыНаВнутреннееПотреблениеИзменение") Тогда
		
				
	КонецЕсли;	
		
КонецПроцедуры

// Выводит сообщения пользователю при наличии ошибок контроля изменений записанных движений регистров.
//
// Параметры:
//  РезультатыКонтроля - Структура - таблицы с результатами контроля изменений
//  Документ - ДокументОбъект - записываемый документ
//  Отказ - Булево - признак отказа от проведения документа.
//
Процедура СообщитьОРезультатахКонтроляИзменений(РезультатыКонтроля, Документ, Отказ) Экспорт
	
	#Область ЗаказыНаВнутреннееПотребление
	
	Если ПроведениеДокументов.ЕстьЗаписиВТаблице(Документ, "ДвиженияЗаказыНаВнутреннееПотреблениеИзменение") Тогда
		
		
		
	КонецЕсли;
	
	#КонецОбласти
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти