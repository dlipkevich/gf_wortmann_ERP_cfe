
////////////////////////////////////////////////////////////////////////////////
// Функции и процедуры обеспечения формирования документов по снятию резерва.
//
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

// Осуществляет заполненнение данных документа.
//
// Параметры:
//   Источник - ДокументОбъект - Обрабатываемый объект.
//   Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//   РежимЗаписи - РежимЗаписиДокумента - В параметр передается текущий режим записи документа.
//					Позволяет определить в теле процедуры режим записи.
//   РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура гф_РасходныйОрдерНаТоварыПередЗаписьюПередЗаписью(Источник, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	Если РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
		
		ВыборкаДетальныеЗаписи = ПолучитьДанныеПоДокументуКорректировкаНазначенияТоваров(Источник.Ссылка);
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Документ = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
			
			Если Источник.ПометкаУдаления Тогда
				Документ.ДополнительныеСвойства.Вставить("гф_ДокументОснование", Истина);
				Документ.УстановитьПометкуУдаления(Истина);
			Иначе
				Документ.ДополнительныеСвойства.Вставить("гф_ДокументОснование", Истина);
				Документ.Записать(РежимЗаписиДокумента.ОтменаПроведения);
			КонецЕсли;
				
		КонецЦикла;
		
		ВыборкаДетальныеЗаписи = ПолучитьДанныеПоДокументуПеремещениеТоваров(Источник.Ссылка);
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			Документ = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
			
			Если Источник.ПометкаУдаления Тогда
				Документ.ДополнительныеСвойства.Вставить("гф_ДокументОснование", Истина);
				Документ.УстановитьПометкуУдаления(Истина);
			Иначе
				Документ.ДополнительныеСвойства.Вставить("гф_ДокументОснование", Истина);
				Документ.Записать(РежимЗаписиДокумента.ОтменаПроведения);
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли РежимЗаписи = РежимЗаписиДокумента.Запись И Источник.ПометкаУдаления Тогда
		
		ВыборкаДетальныеЗаписи = ПолучитьДанныеПоДокументуКорректировкаНазначенияТоваров(Источник.Ссылка);
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			Документ = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
			Документ.ДополнительныеСвойства.Вставить("гф_ДокументОснование", Истина);
			Документ.УстановитьПометкуУдаления(Истина);
			
		КонецЦикла;
		
		ВыборкаДетальныеЗаписи = ПолучитьДанныеПоДокументуПеремещениеТоваров(Источник.Ссылка);
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			Документ = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
			Документ.ДополнительныеСвойства.Вставить("гф_ДокументОснование", Истина);
			Документ.УстановитьПометкуУдаления(Истина);
			
		КонецЦикла;
		
	ИначеЕсли РежимЗаписи = РежимЗаписиДокумента.Запись И НЕ Источник.ПометкаУдаления Тогда
		
		ВыборкаДетальныеЗаписи = ПолучитьДанныеПоДокументуКорректировкаНазначенияТоваров(Источник.Ссылка);
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			Документ = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
			Документ.ДополнительныеСвойства.Вставить("гф_ДокументОснование", Истина);
			Документ.УстановитьПометкуУдаления(Ложь);
			
		КонецЦикла;
		
		ВыборкаДетальныеЗаписи = ПолучитьДанныеПоДокументуПеремещениеТоваров(Источник.Ссылка);
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			Документ = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
			Документ.ДополнительныеСвойства.Вставить("гф_ДокументОснование", Истина);
			Документ.УстановитьПометкуУдаления(Ложь);
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьДокументРасходныйОрдерНаТовары(Источник)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Ссылка КАК Ссылка,
	|	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.НомерСтроки КАК НомерСтроки,
	|	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Номенклатура КАК Номенклатура,
	|	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Характеристика КАК Характеристика,
	|	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Назначение КАК Назначение,
	|	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Серия КАК Серия,
	|	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Распоряжение КАК Распоряжение,
	|	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Количество КАК Количество
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары.ТоварыПоРаспоряжениям КАК РасходныйОрдерНаТоварыТоварыПоРаспоряжениям
	|ГДЕ
	|	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Распоряжение,
	|	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Ссылка,
	|	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.НомерСтроки,
	|	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Номенклатура,
	|	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Характеристика,
	|	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Назначение,
	|	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Серия,
	|	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.СтатусУказанияСерий,
	|	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Количество";
	
	Запрос.УстановитьПараметр("Ссылка", Источник);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ДанныеДокументаРасходныйОрдерНаТовары = РезультатЗапроса.Выгрузить();
	
	Возврат ДанныеДокументаРасходныйОрдерНаТовары;
	
КонецФункции

Функция ПолучитьДанныеПоДокументуКорректировкаНазначенияТоваров(Источник)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КорректировкаНазначенияТоваров.Ссылка КАК Ссылка,
	|	КорректировкаНазначенияТоваров.ДокументОснование КАК ДокументОснование,
	|	КорректировкаНазначенияТоваров.Назначение КАК Назначение
	|ИЗ
	|	Документ.КорректировкаНазначенияТоваров КАК КорректировкаНазначенияТоваров
	|ГДЕ
	|	КорректировкаНазначенияТоваров.ДокументОснование = &ДокументОснование";
	
	Запрос.УстановитьПараметр("ДокументОснование", Источник);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Возврат ВыборкаДетальныеЗаписи;
	
КонецФункции

Функция ПолучитьДанныеПоДокументуПеремещениеТоваров(Источник)
Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПеремещениеТоваров.ЗаказНаПеремещение КАК ЗаказНаПеремещение,
		|	ПеремещениеТоваров.ДокументОснование КАК ДокументОснование,
		|	ПеремещениеТоваров.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
		|ГДЕ
		|	ПеремещениеТоваров.ДокументОснование = &ДокументОснование";
		
		Запрос.УстановитьПараметр("ДокументОснование", Источник);
			
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
Возврат ВыборкаДетальныеЗаписи;
	
КонецФункции

Функция ПолучитьДокументОснованиеПеремещение(Источник, Распоряжение)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПеремещениеТоваров.ЗаказНаПеремещение КАК ЗаказНаПеремещение,
	|	ПеремещениеТоваров.ДокументОснование КАК ДокументОснование,
	|	ПеремещениеТоваров.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|ГДЕ
	|	ПеремещениеТоваров.ЗаказНаПеремещение = &ЗаказНаПеремещение
	|	И ПеремещениеТоваров.ДокументОснование = &ДокументОснование";
	
	Запрос.УстановитьПараметр("ДокументОснование", Источник);
	Запрос.УстановитьПараметр("ЗаказНаПеремещение", Распоряжение);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.Ссылка;
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

Функция ПолучитьДокументОснованиеКорректировка(Источник, Назначение)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КорректировкаНазначенияТоваров.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.КорректировкаНазначенияТоваров КАК КорректировкаНазначенияТоваров
		|ГДЕ
		|	КорректировкаНазначенияТоваров.ДокументОснование = &ДокументОснование
		|	И КорректировкаНазначенияТоваров.Назначение = &Назначение";
	
	Запрос.УстановитьПараметр("ДокументОснование", Источник);
	Запрос.УстановитьПараметр("Назначение", Назначение);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.Ссылка;
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

Функция ПолучитьАналитикаУчетаНоменклатуры(Номенклатура, Характеристика, Серия, Назначение, Склад)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КлючиАналитикиУчетаНоменклатуры.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитикиУчетаНоменклатуры
		|ГДЕ
		|	КлючиАналитикиУчетаНоменклатуры.Номенклатура = &Номенклатура
		|	И КлючиАналитикиУчетаНоменклатуры.Характеристика = &Характеристика
		|	И КлючиАналитикиУчетаНоменклатуры.Серия = &Серия
		|	И КлючиАналитикиУчетаНоменклатуры.МестоХранения = &Склад
		|	И КлючиАналитикиУчетаНоменклатуры.Назначение = &Назначение";
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("Характеристика", Характеристика);
	Запрос.УстановитьПараметр("Серия", Серия);
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("Назначение", Назначение);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.Ссылка;
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

Функция ПолучитьДокументОснованиеЗаказКлиента(Источник, Распоряжение)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПеремещениеТоваров.ЗаказНаПеремещение КАК ЗаказНаПеремещение,
	|	ПеремещениеТоваров.ДокументОснование КАК ДокументОснование,
	|	ПеремещениеТоваров.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|ГДЕ
	|	ПеремещениеТоваров.гф_ЗаказКлиента = &ЗаказКлиента
	|	И ПеремещениеТоваров.ДокументОснование = &ДокументОснование";
	
	Запрос.УстановитьПараметр("ДокументОснование", Источник);
	Запрос.УстановитьПараметр("ЗаказКлиента", Распоряжение);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.Ссылка;
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

#КонецОбласти
