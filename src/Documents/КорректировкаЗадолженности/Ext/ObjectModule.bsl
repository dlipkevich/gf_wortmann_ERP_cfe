
&После("ОбработкаПроведения")
Процедура гф_ОбработкаПроведения(Отказ, РежимПроведения)
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	// предварительно очищаем записи в регистре
	НаборЗаписей = РегистрыНакопления.гф_БонусыКлиентов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(Ссылка);
	НаборЗаписей.Записать();
	
	Если ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.СписаниеДебиторскойЗадолженности Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Свойство", ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("ИдентификаторДляФормул", "гф_КорректировкаЗадолженностиВидКорректировкиДолга"));
	Запрос.Текст = "ВЫБРАТЬ
	|	ДополнительныеСведения.Значение КАК Значение
	|ИЗ
	|	 РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
	|ГДЕ
	|	ДополнительныеСведения.Объект = &Ссылка
	|	И ДополнительныеСведения.Свойство = &Свойство";
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;

	Выборка = Результат.Выбрать();
	Если Не Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	ЗначениеСвойстваВидКорректировкиДолга = Выборка.Значение;
	Если ТипЗнч(ЗначениеСвойстваВидКорректировкиДолга) = Тип("СправочникСсылка.гф_ВидыБонусов") Тогда
		Если ЗначениеСвойстваВидКорректировкиДолга.УчитыватьВКорректировкеЗадолженности Тогда
			Для Каждого СтрокаТЧ Из Задолженность Цикл
				Если СтрокаТЧ.Сумма > 0 Тогда
					нз = Движения.гф_БонусыКлиентов.ДобавитьРасход();
					нз.Период = Дата;
					нз.Организация = Организация;
					нз.Контрагент = Контрагент;
					нз.Договор = СтрокаТЧ.ОбъектРасчетов.Договор;
					нз.ВидБонуса = ЗначениеСвойстваВидКорректировкиДолга;
					нз.Сумма = СтрокаТЧ.Сумма;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Если Движения.гф_БонусыКлиентов.Количество() > 0 Тогда
		Движения.гф_БонусыКлиентов.Записывать = Истина;
	КонецЕсли;
	
КонецПроцедуры
