#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.УправлениеДоступом
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";
КонецПроцедуры
// Конец СтандартныеПодсистемы.УправлениеДоступом

// #wortmann {
// #Агрегация КМ
// стандартные подсистемы. Загрузка из внешнего файла
// Галфинд Sakovich 2022/08/16
//
// Параметры:
//   Параметры - Структура - переопределяемые параметры (необходимо, 
//                  если поддерживается загрузка в несколько табличных частей).
Процедура УстановитьПараметрыЗагрузкиИзФайлаВТЧ(Параметры) Экспорт
	
	Если Параметры["ИмяТабличнойЧасти"] = "Документ.гф_АгрегацияКМ.ТабличнаяЧасть.Товары" Тогда
		Параметры["ИмяМакетаСШаблоном"] = "ЗагрузкаИзФайлаТовары";
	КонецЕсли;
	
КонецПроцедуры // } #wortmann

// #wortmann {
// #Агрегация КМ
// прикладной алгоритм поиска данных в ИБ по данным, загруженным из файла
// Галфинд Sakovich 2022/08/16
// Производит сопоставление данных, загружаемых в табличную часть ПолноеИмяТабличнойЧасти,
// с данными в ИБ, и заполняет параметры АдресТаблицыСопоставления и СписокНеоднозначностей.
// СписокНеоднозначностей содержит список неоднозначных значений, для которых в ИБ имеется несколько
// подходящих вариантов.
//
// Параметры:
//   АдресЗагружаемыхДанных    - Строка - адрес временного хранилища с таблицей значений, в которой
//                                        находятся загруженные данные из файла. Состав колонок:
//     * Идентификатор - Число - порядковый номер строки.
//       Остальные колонки соответствуют колонкам макета ЗагрузкаИзФайла.
//   АдресТаблицыСопоставления - Строка - адрес временного хранилища с пустой таблицей значений,
//                                        являющейся копией табличной части документа, 
//                                        которую необходимо заполнить из таблицы АдресЗагружаемыхДанных.
//   СписокНеоднозначностей - ТаблицаЗначений - список неоднозначных значений:
//     * Колонка       - Строка - имя колонки, в которой была обнаружена неоднозначность.
//     * Идентификатор - Число - идентификатор строки, в которой была обнаружена неоднозначность.
//   ПолноеИмяТабличнойЧасти   - Строка - полное имя табличной части, в которую загружаются данные.
//   ДополнительныеПараметры   - Произвольный - любые дополнительные сведения.
//
Процедура СопоставитьЗагружаемыеДанные(АдресЗагружаемыхДанных, 
	АдресТаблицыСопоставления, 
	СписокНеоднозначностей, 
	ПолноеИмяТабличнойЧасти, 
	ДополнительныеПараметры) Экспорт

	Если ПолноеИмяТабличнойЧасти = "Документ.гф_АгрегацияКМ.ТабличнаяЧасть.Товары" Тогда
		
		Товары = ПолучитьИзВременногоХранилища(АдресТаблицыСопоставления); // ТаблицаЗначений
		ЗагружаемыеДанные = ПолучитьИзВременногоХранилища(АдресЗагружаемыхДанных); // ТаблицаЗначений
		Для каждого СтрокаТаблицы Из ЗагружаемыеДанные Цикл
		
			Товар = Товары.Добавить();
			Товар.Идентификатор = СтрокаТаблицы.Идентификатор;
			Товар.АртикулАгрегата = Справочники.ВариантыКомплектацииНоменклатуры.НайтиПоНаименованию(
			СтрокаТаблицы["АртикулАгрегата"]);
			Товар.Агрегат = СтрокаТаблицы["Агрегат"];
			Товар.ЗначениеШтрихкода = СтрокаТаблицы["ЗначениеШтрихкода"];
			Товар.КМ = Справочники.ШтрихкодыУпаковокТоваров.НайтиПоРеквизиту("ЗначениеШтрихкода",
			СтрокаТаблицы["ЗначениеШтрихкода"]);
			Если СтрокаТаблицы["Движение"] = "Приход" 
				ИЛИ  СтрокаТаблицы["Движение"] = "Расход" Тогда
					Товар.Движение = Перечисления.гф_ВидДвиженияАгрегацииКМ[СтрокаТаблицы["Движение"]];
				Иначе
					Товар.Движение = Перечисления.гф_ВидДвиженияАгрегацииКМ.ПустаяСсылка();
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры // } #wortmann

// Возвращает список подходящих объектов ИБ для неоднозначного значения ячейки.
// 
// Параметры:
//   ПолноеИмяТабличнойЧасти   - Строка - полное имя табличной части, в которую загружаются данные.
//   СписокНеоднозначностей    - Массив из СправочникСсылка._ДемоНоменклатура - массив для заполнения
//   с неоднозначными данными.
//   ИмяКолонки                - Строка - имя колонки, в который возникла неоднозначность.
//   ЗагружаемыеЗначенияСтрока - Строка - загружаемые данные на основании которых возникла неоднозначность.
//   ДополнительныеПараметры   - Произвольный - любые дополнительные сведения.
//
Процедура ЗаполнитьСписокНеоднозначностей(ПолноеИмяТабличнойЧасти, 
	СписокНеоднозначностей, 
	ИмяКолонки, 
	ЗагружаемыеЗначенияСтрока, 
	ДополнительныеПараметры) Экспорт
	
	Если ПолноеИмяТабличнойЧасти = "Документ.гф_АгрегацияКМ.ТабличнаяЧасть.Товары" Тогда
		//
	КонецЕсли;
	
КонецПроцедуры

Функция ТекстЗапросаПоТаблицеТовары() Экспорт

	Возврат "//{Запрос: 0, -6 ////////////////////////////////////////
	|ВЫБРАТЬ
	|	т.НомерСтроки КАК НомерСтроки,
	|	т.АртикулАгрегата КАК АртикулАгрегата,
	|	т.Агрегат КАК Агрегат,
	|	т.КМ КАК КМ,
	|	т.ЗначениеШтрихкода КАК ЗначениеШтрихкода,
	|	т.Движение КАК Движение,
	|	т.Пересорт КАК Пересорт,
	|	т.Недопоставка КАК Недопоставка
	|ПОМЕСТИТЬ втТовары
	|ИЗ
	|	&Товары КАК т
	|;
	|//{Запрос: 1, -5 ////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТовары.НомерСтроки КАК НомерСтроки,
	|	втТовары.АртикулАгрегата КАК спрВариантыКомплектации,
	|	втТовары.Агрегат КАК АгрегатСтрокой,
	|	ШтрихкодыУпаковокТоваров.Ссылка КАК спрАгрегат,
	|	втТовары.КМ КАК спрКМ,
	|	втТовары.ЗначениеШтрихкода КАК КМСтрокой,
	|	втТовары.Движение КАК Движение
	|ПОМЕСТИТЬ втТовары_01
	|ИЗ
	|	втТовары КАК втТовары
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ШтрихкодыУпаковокТоваров КАК ШтрихкодыУпаковокТоваров
	|	ПО ИСТИНА
	|		И втТовары.Агрегат = ШтрихкодыУпаковокТоваров.ЗначениеШтрихкода
	|		И ШтрихкодыУпаковокТоваров.ТипУпаковки = ЗНАЧЕНИЕ(Перечисление.ТипыУпаковок.МультитоварнаяУпаковка)
	|;
	|//{Запрос: 2, -4 ////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТовары_01.спрАгрегат КАК спрАгрегат,
	|	втТовары_01.спрКМ КАК спрКМ,
	|	ШтрихкодыУпаковокТоваровВложенныеШтрихкоды.Штрихкод КАК влШтрихкод
	|ПОМЕСТИТЬ влШтрихкоды
	|ИЗ
	|	втТовары_01 КАК втТовары_01
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ШтрихкодыУпаковокТоваров.ВложенныеШтрихкоды КАК ШтрихкодыУпаковокТоваровВложенныеШтрихкоды
	|	ПО ИСТИНА
	|		И втТовары_01.спрАгрегат = ШтрихкодыУпаковокТоваровВложенныеШтрихкоды.Ссылка
	|		И втТовары_01.спрКМ = ШтрихкодыУпаковокТоваровВложенныеШтрихкоды.Штрихкод
	|;
	|//{Запрос: 3, -3 ////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка КАК ВариантКомплектации,
	|	СУММА(ВариантыКомплектацииНоменклатурыТовары.КоличествоУпаковок) КАК КоличествоВВарианте
	|ПОМЕСТИТЬ КоличествоВВариантах
	|ИЗ
	|	Справочник.ВариантыКомплектацииНоменклатуры.Товары КАК ВариантыКомплектацииНоменклатурыТовары
	|ГДЕ ВариантыКомплектацииНоменклатурыТовары.Ссылка В (
	|	ВЫБРАТЬ
	|		т.спрВариантыКомплектации КАК спрВариантыКомплектации
	|	ИЗ
	|		втТовары_01 КАК т)
	|СГРУППИРОВАТЬ ПО
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка
	|;
	|//{Запрос: 4, -2 ////////////////////////////////////////
	|ВЫБРАТЬ
	|	ШтрихкодыУпаковокТоваровВложенныеШтрихкоды.Ссылка КАК Агрегат,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ШтрихкодыУпаковокТоваровВложенныеШтрихкоды.Штрихкод) КАК КоличествоВАгрегате
	|ПОМЕСТИТЬ КоличествоВАгрегатах
	|ИЗ
	|	Справочник.ШтрихкодыУпаковокТоваров.ВложенныеШтрихкоды КАК ШтрихкодыУпаковокТоваровВложенныеШтрихкоды
	|ГДЕ ШтрихкодыУпаковокТоваровВложенныеШтрихкоды.Ссылка В (
	|	ВЫБРАТЬ
	|		т.спрАгрегат КАК спрАгрегат
	|	ИЗ
	|		втТовары_01 КАК т)
	|СГРУППИРОВАТЬ ПО
	|	ШтрихкодыУпаковокТоваровВложенныеШтрихкоды.Ссылка
	|;
	|//{Запрос: 5, -1 ////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТовары_01.НомерСтроки КАК НомерСтроки,
	|	втТовары_01.спрВариантыКомплектации КАК спрВариантыКомплектации,
	|	втТовары_01.АгрегатСтрокой КАК АгрегатСтрокой,
	|	втТовары_01.спрАгрегат КАК спрАгрегат,
	|	втТовары_01.спрКМ КАК спрКМ,
	|	втТовары_01.КМСтрокой КАК КМСтрокой,
	|	втТовары_01.Движение КАК Движение,
	|	КоличествоВАгрегатах.КоличествоВАгрегате КАК КоличествоВАгрегате,
	|	КоличествоВВариантах.КоличествоВВарианте КАК КоличествоВВарианте,
	|	влШтрихкоды.влШтрихкод КАК влШтрихкод,
	|	ВЫБОР
	|		КОГДА втТовары_01.спрАгрегат ЕСТЬ НЕ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК АгрСуществует,
	|	ВЫБОР
	|		КОГДА втТовары_01.спрКМ <> ЗНАЧЕНИЕ(Справочник.ШтрихкодыУпаковокТоваров.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК КМСуществует,
	|	ВЫБОР
	|		КОГДА влШтрихкоды.влШтрихкод ЕСТЬ НЕ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК КМВложенВАгрегат
	|ИЗ
	|	втТовары_01 КАК втТовары_01
	|	ЛЕВОЕ СОЕДИНЕНИЕ КоличествоВВариантах КАК КоличествоВВариантах
	|	ПО втТовары_01.спрВариантыКомплектации = КоличествоВВариантах.ВариантКомплектации
	|	ЛЕВОЕ СОЕДИНЕНИЕ КоличествоВАгрегатах КАК КоличествоВАгрегатах
	|	ПО втТовары_01.спрАгрегат = КоличествоВАгрегатах.Агрегат
	|	ЛЕВОЕ СОЕДИНЕНИЕ влШтрихкоды КАК влШтрихкоды
	|	ПО ИСТИНА
	|		И втТовары_01.спрАгрегат = влШтрихкоды.спрАгрегат
	|		И втТовары_01.спрКМ = влШтрихкоды.спрКМ
	|УПОРЯДОЧИТЬ ПО
	|	Движение";

КонецФункции // ТекстЗапросаПоТаблицеТовары()

#КонецОбласти

#КонецЕсли