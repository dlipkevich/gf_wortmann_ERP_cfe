#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

&ИзменениеИКонтроль("ПриКомпоновкеРезультата")
Процедура гф_ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	ПользовательскиеНастройкиМодифицированы = Ложь;

	СегментыСервер.ВключитьОтборПоСегментуНоменклатурыВСКД(КомпоновщикНастроек);

	ИспользуетсяОтборПоПересчетуТоваров = КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(
	КомпоновщикНастроек.Настройки,
	"ИспользуетсяОтборПоПересчетуТоваров");

	Если ИспользуетсяОтборПоПересчетуТоваров = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ИспользуетсяОтборПоПересчетуТоваров.Значение      = Ложь;
	ИспользуетсяОтборПоПересчетуТоваров.Использование = Ложь;

	НастройкиОсновнойСхемы = КомпоновщикНастроек.ПолучитьНастройки();

	ЭлементыОтбора = ОбщегоНазначенияКлиентСервер.НайтиЭлементыИГруппыОтбора(НастройкиОсновнойСхемы.Отбор,
	"ПересчетТоваров");

	ИспользуетсяОтборПоПересчетуТоваров = Ложь;

	Для каждого ЭлементОтбора Из ЭлементыОтбора Цикл
		Если ЭлементОтбора.Использование Тогда
			ИспользуетсяОтборПоПересчетуТоваров = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;

	ПараметрИспользуетсяОтборПересчетуТоваров = КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(
	КомпоновщикНастроек.Настройки,
	"ИспользуетсяОтборПоПересчетуТоваров");
	ПараметрИспользуетсяОтборПересчетуТоваров.Значение = Истина;
	ПараметрИспользуетсяОтборПересчетуТоваров.Использование = ИспользуетсяОтборПоПересчетуТоваров;

	ТекстЗапроса = СхемаКомпоновкиДанных.НаборыДанных.НаборДанных.Запрос;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
	"&ТекстЗапросаВесНоменклатуры",
	Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаВесУпаковки(
	"ТоварыНаСкладахОстаткиИОбороты.Номенклатура.ЕдиницаИзмерения",
	"ТоварыНаСкладахОстаткиИОбороты.Номенклатура"));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
	"&ТекстЗапросаОбъемНоменклатуры",
	Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаОбъемУпаковки(
	"ТоварыНаСкладахОстаткиИОбороты.Номенклатура.ЕдиницаИзмерения",
	"ТоварыНаСкладахОстаткиИОбороты.Номенклатура"));
    #Вставка
	// #wortmann { 
	// Внесение изменений для ограничения чтения с производительным RLS
	// Галфинд_Домнышева 2022/11/18
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
	"РегистрНакопления.ТоварыНаСкладах.ОстаткиИОбороты(, , Авто, , {((Номенклатура, Характеристика)",
	"РегистрНакопления.ТоварыНаСкладах.ОстаткиИОбороты(, , Авто, , 
	| Номенклатура.Код <> Неопределено {((Номенклатура, Характеристика)");
	// } #wortmann
	#КонецВставки
	
	СхемаКомпоновкиДанных.НаборыДанных.НаборДанных.Запрос = ТекстЗапроса;

	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиОсновнойСхемы, ДанныеРасшифровки);

	КомпоновкаДанныхСервер.УстановитьЗаголовкиМакетаКомпоновки(ПараметризуемыеЗаголовкиПолей(), МакетКомпоновки);
	КомпоновкаДанныхСервер.УстановитьЗаголовкиМакетаКомпоновки(СтруктураДинамическихЗаголовков(), МакетКомпоновки);

	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, , ДанныеРасшифровки, Истина);

	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);

	КомпоновкаДанныхСервер.СкрытьВспомогательныеПараметрыОтчета(СхемаКомпоновкиДанных,
	КомпоновщикНастроек,
	ДокументРезультат,
	ВспомогательныеПараметрыОтчета());

	// Сообщим форме отчета, что настройки модифицированы
	Если ПользовательскиеНастройкиМодифицированы Тогда
		КомпоновщикНастроек.ПользовательскиеНастройки.ДополнительныеСвойства.Вставить("ПользовательскиеНастройкиМодифицированы", Истина);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#КонецЕсли